{"ast":null,"code":"// index.js (router 설정)\nimport { createRouter, createWebHistory } from 'vue-router';\nimport MainPage from '../components/MainPage';\nimport DBList from '../components/DBList';\nimport SmsHistory from '../components/SmsHistory';\nimport ThresholdList from '../components/ThresholdList';\nimport TablespacesList from '../components/TablespacesList';\nimport DailyChkView from '../components/DailyChk';\nimport Login from '@/views/Login.vue';\nimport { useAuthStore } from '@/stores/authStore';\nconst routes = [{\n  path: '/',\n  component: Login\n},\n// 기본 경로는 로그인 페이지로\n{\n  path: '/main',\n  component: MainPage\n}, {\n  path: '/db-list',\n  name: 'DBList',\n  component: DBList\n}, {\n  path: '/sms-history',\n  name: 'SmsHistory',\n  component: SmsHistory\n}, {\n  path: '/threshold-list',\n  name: 'ThresholdList',\n  component: ThresholdList\n}, {\n  path: '/tablespaces',\n  name: 'TablespacesList',\n  component: TablespacesList\n}, {\n  path: '/dailyChk',\n  name: 'DailyChkView',\n  component: DailyChkView\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 로그인 상태 체크 후 리다이렉트\nrouter.beforeEach((to, from, next) => {\n  const authStore = useAuthStore();\n\n  // 로그인되지 않았다면 로그인 페이지로 이동\n  if (!authStore.token && to.path !== '/') {\n    next('/'); // 로그인 페이지로 리다이렉트\n  } else {\n    // 로그인 상태라면 메인 페이지로 리다이렉트\n    if (authStore.token && to.path === '/') {\n      next('/main'); // 이미 로그인한 상태라면 메인 페이지로 리다이렉트\n    } else {\n      next(); // 로그인 상태일 경우 페이지 이동\n    }\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","MainPage","DBList","SmsHistory","ThresholdList","TablespacesList","DailyChkView","Login","useAuthStore","routes","path","component","name","router","history","beforeEach","to","from","next","authStore","token"],"sources":["D:/JAVIS/dongkukDBmon/dongkukDBmon/frontend/src/router/index.js"],"sourcesContent":["// index.js (router 설정)\nimport { createRouter, createWebHistory } from 'vue-router'\nimport MainPage from '../components/MainPage'\nimport DBList from '../components/DBList'\nimport SmsHistory from '../components/SmsHistory'\nimport ThresholdList from '../components/ThresholdList'\nimport TablespacesList from '../components/TablespacesList'\nimport DailyChkView from '../components/DailyChk'\nimport Login from '@/views/Login.vue'\nimport { useAuthStore } from '@/stores/authStore'\n\nconst routes = [\n  { path: '/', component: Login },  // 기본 경로는 로그인 페이지로\n  { path: '/main', component: MainPage },\n  { path: '/db-list', name: 'DBList', component: DBList },\n  { path: '/sms-history', name: 'SmsHistory', component: SmsHistory },\n  { path: '/threshold-list', name: 'ThresholdList', component: ThresholdList },\n  { path: '/tablespaces', name: 'TablespacesList', component: TablespacesList },\n  { path: '/dailyChk', name: 'DailyChkView', component: DailyChkView }\n]\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n})\n\n// 로그인 상태 체크 후 리다이렉트\nrouter.beforeEach((to, from, next) => {\n  const authStore = useAuthStore()\n\n  // 로그인되지 않았다면 로그인 페이지로 이동\n  if (!authStore.token && to.path !== '/') {\n    next('/')  // 로그인 페이지로 리다이렉트\n  } else {\n    // 로그인 상태라면 메인 페이지로 리다이렉트\n    if (authStore.token && to.path === '/') {\n      next('/main')  // 이미 로그인한 상태라면 메인 페이지로 리다이렉트\n    } else {\n      next()  // 로그인 상태일 경우 페이지 이동\n    }\n  }\n})\n\nexport default router\n"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEJ;AAAM,CAAC;AAAG;AAClC;EAAEG,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEV;AAAS,CAAC,EACtC;EAAES,IAAI,EAAE,UAAU;EAAEE,IAAI,EAAE,QAAQ;EAAED,SAAS,EAAET;AAAO,CAAC,EACvD;EAAEQ,IAAI,EAAE,cAAc;EAAEE,IAAI,EAAE,YAAY;EAAED,SAAS,EAAER;AAAW,CAAC,EACnE;EAAEO,IAAI,EAAE,iBAAiB;EAAEE,IAAI,EAAE,eAAe;EAAED,SAAS,EAAEP;AAAc,CAAC,EAC5E;EAAEM,IAAI,EAAE,cAAc;EAAEE,IAAI,EAAE,iBAAiB;EAAED,SAAS,EAAEN;AAAgB,CAAC,EAC7E;EAAEK,IAAI,EAAE,WAAW;EAAEE,IAAI,EAAE,cAAc;EAAED,SAAS,EAAEL;AAAa,CAAC,CACrE;AAED,MAAMO,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAAC,CAAC;EAC3BS;AACF,CAAC,CAAC;;AAEF;AACAI,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,SAAS,GAAGX,YAAY,CAAC,CAAC;;EAEhC;EACA,IAAI,CAACW,SAAS,CAACC,KAAK,IAAIJ,EAAE,CAACN,IAAI,KAAK,GAAG,EAAE;IACvCQ,IAAI,CAAC,GAAG,CAAC,EAAE;EACb,CAAC,MAAM;IACL;IACA,IAAIC,SAAS,CAACC,KAAK,IAAIJ,EAAE,CAACN,IAAI,KAAK,GAAG,EAAE;MACtCQ,IAAI,CAAC,OAAO,CAAC,EAAE;IACjB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC,EAAE;IACV;EACF;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}