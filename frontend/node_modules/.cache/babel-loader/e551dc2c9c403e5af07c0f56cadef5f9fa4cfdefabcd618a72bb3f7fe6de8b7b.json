{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, nextTick, onMounted } from 'vue';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nexport default {\n  setup() {\n    const metrics = ref(['activeSess', 'backupCheck', 'buffHit', 'bufferpct', 'dailyArchCht', 'executTopct', 'inMemorySort', 'latchHitPct', 'libHitPct', 'nonParseCpu', 'parseCpuElapsd', 'reDoPct', 'softPct', 'totalSess', 'transaTions']);\n    const dbData = ref([]); // DB Îç∞Ïù¥ÌÑ∞\n\n    // DB Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞\n    const fetchDbData = async dbName => {\n      try {\n        const response = await axios.get(`/api/dailychk/${dbName}/oradata`);\n        dbData.value = response.data;\n        console.log(\"üìå API ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:\", response.data); // Í∞í Ï∂úÎ†•\n        nextTick(() => renderCharts()); // Îç∞Ïù¥ÌÑ∞Í∞Ä Ï§ÄÎπÑÎêòÎ©¥ Ï∞®Ìä∏Î•º Í∑∏Î¶¨ÎèÑÎ°ù Ìò∏Ï∂ú\n      } catch (error) {\n        console.error(\"DB Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.\", error);\n      }\n    };\n\n    // Ï∞®Ìä∏ Î†åÎçîÎßÅ Ìï®Ïàò\n    const renderCharts = () => {\n      metrics.value.forEach((metric, index) => {\n        const canvas = document.querySelector(`[ref=\"chartRef_${index}\"]`);\n        if (canvas) {\n          if (canvas.chart) {\n            canvas.chart.destroy(); // Í∏∞Ï°¥ Ï∞®Ìä∏ ÏÇ≠Ï†ú\n          }\n\n          // XÏ∂ï: ÎÇ†Ïßú (chkDate)\n          const labels = dbData.value.map(item => item.id.chkDate);\n\n          // YÏ∂ï: ÏßÄÌëú Í∞í\n          const data = dbData.value.map(item => {\n            return item[metric] !== undefined ? item[metric] : 0;\n          });\n\n          // Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏúºÎ©¥ Ï∞®Ìä∏Î•º Í∑∏Î¶¨ÏßÄ ÏïäÏùå\n          if (labels.length === 0 || data.length === 0) {\n            console.warn(`${metric} Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§.`);\n            return;\n          }\n\n          // Ï∞®Ìä∏ ÏÉùÏÑ±\n          new Chart(canvas, {\n            type: 'line',\n            data: {\n              labels,\n              // XÏ∂ï ÎÇ†Ïßú\n              datasets: [{\n                label: `${metric}`,\n                // ÏßÄÌëúÎ™Ö\n                data,\n                // ÏßÄÌëúÍ∞í\n                borderColor: 'blue',\n                fill: false\n              }]\n            },\n            options: {\n              responsive: true,\n              maintainAspectRatio: false,\n              scales: {\n                x: {\n                  title: {\n                    display: true,\n                    text: 'Date'\n                  }\n                },\n                y: {\n                  title: {\n                    display: true,\n                    text: metric\n                  }\n                }\n              }\n            }\n          });\n        }\n      });\n    };\n    return {\n      dbData,\n      fetchDbData,\n      renderCharts\n    };\n  }\n};","map":{"version":3,"names":["ref","nextTick","onMounted","axios","Chart","setup","metrics","dbData","fetchDbData","dbName","response","get","value","data","console","log","renderCharts","error","forEach","metric","index","canvas","document","querySelector","chart","destroy","labels","map","item","id","chkDate","undefined","length","warn","type","datasets","label","borderColor","fill","options","responsive","maintainAspectRatio","scales","x","title","display","text","y"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DailyChk.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- ÏôºÏ™Ω DB Ìä∏Î¶¨ Íµ¨Ï°∞ -->\r\n    <div class=\"db-tree\">\r\n      <ul>\r\n        <li>\r\n          <span @click=\"toggleDBType('oracle')\" class=\"tree-node\">\r\n            <span class=\"toggle-icon\">{{ expandedDBType.oracle ? '-' : '+' }}</span> ORACLE\r\n          </span>\r\n          <ul v-if=\"expandedDBType.oracle\" class=\"sub-tree\">\r\n            <li v-for=\"db in oracleDBList\" :key=\"db\" class=\"db-item\">\r\n              <span @click=\"selectDB(db)\">\r\n                <span class=\"leaf-icon\"></span> {{ db }}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <span @click=\"toggleDBType('tibero')\" class=\"tree-node\">\r\n            <span class=\"toggle-icon\">{{ expandedDBType.tibero ? '-' : '+' }}</span> TIBERO\r\n          </span>\r\n          <ul v-if=\"expandedDBType.tibero\" class=\"sub-tree\">\r\n            <li v-for=\"db in tiberoDBList\" :key=\"db\" class=\"db-item\">\r\n              <span @click=\"selectDB(db)\">\r\n                <span class=\"leaf-icon\"></span> {{ db }}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Ï§ëÏïô Ï∞®Ìä∏ (Ìä∏Î¶¨ Ïò§Î•∏Ï™ΩÏóê Ïò§ÎèÑÎ°ù ÏÑ§Ï†ï) -->\r\n    <div class=\"chart-container\" v-if=\"selectedDB\">\r\n      <h3>{{ selectedDB }} - Metrics</h3>\r\n      <div class=\"charts-row\">\r\n        <div v-for=\"(metric, index) in metrics\" :key=\"metric\" class=\"metric-chart\">\r\n          <h4>{{ metric }}</h4>\r\n          <canvas :id=\"`chartRef_${index}`\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, nextTick, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n  setup() {\r\n    const metrics = ref([\r\n      'activeSess', 'backupCheck', 'buffHit', 'bufferpct', 'dailyArchCht',\r\n      'executTopct', 'inMemorySort', 'latchHitPct', 'libHitPct', 'nonParseCpu',\r\n      'parseCpuElapsd', 'reDoPct', 'softPct', 'totalSess', 'transaTions'\r\n    ]);\r\n    const dbData = ref([]); // DB Îç∞Ïù¥ÌÑ∞\r\n\r\n    // DB Îç∞Ïù¥ÌÑ∞ Î∂àÎü¨Ïò§Í∏∞\r\n    const fetchDbData = async (dbName) => {\r\n      try {\r\n        const response = await axios.get(`/api/dailychk/${dbName}/oradata`);\r\n        dbData.value = response.data;\r\n        console.log(\"üìå API ÏùëÎãµ Îç∞Ïù¥ÌÑ∞:\", response.data);  // Í∞í Ï∂úÎ†•\r\n        nextTick(() => renderCharts()); // Îç∞Ïù¥ÌÑ∞Í∞Ä Ï§ÄÎπÑÎêòÎ©¥ Ï∞®Ìä∏Î•º Í∑∏Î¶¨ÎèÑÎ°ù Ìò∏Ï∂ú\r\n      } catch (error) {\r\n        console.error(\"DB Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§.\", error);\r\n      }\r\n    };\r\n\r\n    // Ï∞®Ìä∏ Î†åÎçîÎßÅ Ìï®Ïàò\r\n    const renderCharts = () => {\r\n      metrics.value.forEach((metric, index) => {\r\n        const canvas = document.querySelector(`[ref=\"chartRef_${index}\"]`);\r\n        if (canvas) {\r\n          if (canvas.chart) {\r\n            canvas.chart.destroy(); // Í∏∞Ï°¥ Ï∞®Ìä∏ ÏÇ≠Ï†ú\r\n          }\r\n\r\n          // XÏ∂ï: ÎÇ†Ïßú (chkDate)\r\n          const labels = dbData.value.map(item => item.id.chkDate);\r\n\r\n          // YÏ∂ï: ÏßÄÌëú Í∞í\r\n          const data = dbData.value.map(item => {\r\n            return item[metric] !== undefined ? item[metric] : 0;\r\n          });\r\n\r\n          // Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏúºÎ©¥ Ï∞®Ìä∏Î•º Í∑∏Î¶¨ÏßÄ ÏïäÏùå\r\n          if (labels.length === 0 || data.length === 0) {\r\n            console.warn(`${metric} Îç∞Ïù¥ÌÑ∞Í∞Ä ÏóÜÏäµÎãàÎã§.`);\r\n            return;\r\n          }\r\n\r\n          // Ï∞®Ìä∏ ÏÉùÏÑ±\r\n          new Chart(canvas, {\r\n            type: 'line',\r\n            data: {\r\n              labels,  // XÏ∂ï ÎÇ†Ïßú\r\n              datasets: [\r\n                {\r\n                  label: `${metric}`,  // ÏßÄÌëúÎ™Ö\r\n                  data,  // ÏßÄÌëúÍ∞í\r\n                  borderColor: 'blue',\r\n                  fill: false,\r\n                }\r\n              ]\r\n            },\r\n            options: {\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              scales: {\r\n                x: {\r\n                  title: { display: true, text: 'Date' }\r\n                },\r\n                y: {\r\n                  title: { display: true, text: metric }\r\n                }\r\n              },\r\n            }\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      dbData,\r\n      fetchDbData,\r\n      renderCharts\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 20px;\r\n}\r\n\r\n.db-tree {\r\n  width: 250px;\r\n}\r\n\r\n.chart-container {\r\n  flex-grow: 1;\r\n}\r\n\r\n.charts-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n\r\n.metric-chart {\r\n  width: 400px;\r\n  height: 300px;\r\n}\r\n\r\n.tree-node {\r\n  cursor: pointer;\r\n}\r\n\r\n.sub-tree {\r\n  padding-left: 20px;\r\n}\r\n\r\n.leaf-icon {\r\n  margin-right: 8px;\r\n}\r\n\r\n.toggle-icon {\r\n  margin-right: 8px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}