{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/DBMS_dashboard.png';\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"관제 시스템\", -1 /* HOISTED */)), _createCommentVNode(\" 관제 화면 \"), _cache[1] || (_cache[1] = _createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"DBMS Dashboard\",\n    class: \"dashboard-image\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","src","alt"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-container\">\r\n    <h1>관제 시스템</h1>\r\n    <!-- 관제 화면 -->\r\n    <img src=\"@/assets/DBMS_dashboard.png\" alt=\"DBMS Dashboard\" class=\"dashboard-image\" />\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      showControl: false,\r\n      errorMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    goToControl() {\r\n      this.showControl = true;\r\n      this.errorMessage = ''; // 오류 메시지 초기화\r\n    },\r\n    checkControl() {\r\n      // 여기에 관제 시스템 조작을 체크하는 로직을 넣을 수 있습니다.\r\n      const isCorrect = Math.random() > 0.5; // 예시로 랜덤으로 결과를 생성 (실제 로직을 넣어야 합니다)\r\n      if (isCorrect) {\r\n        alert('조작이 성공적입니다.');\r\n      } else {\r\n        this.errorMessage = '조작이 틀렸습니다. DB 리스트로 이동합니다.';\r\n        setTimeout(() => {\r\n          this.$router.push('/dblist'); // 틀렸을 경우 dblist 페이지로 이동\r\n        }, 2000); // 2초 후 이동\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.main-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n}\r\n\r\n.control-panel {\r\n  margin: 20px;\r\n}\r\n\r\n.control-screen {\r\n  margin-top: 50px;\r\n  text-align: center;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n}\r\n\r\n\r\n.dashboard-image {\r\n  margin: 10px 0;\r\n  width: 1000px; /* 고정된 가로 크기 */\r\n  height: 700px; /* 고정된 세로 크기 */\r\n  border: 2px solid #ccc; /* 테두리 추가 */\r\n  border-radius: 10px; /* 둥근 모서리 */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* 그림자 효과 */\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":";OAISA,UAAiC;;EAHnCC,KAAK,EAAC;AAAgB;;uBAA3BC,mBAAA,CAIM,OAJNC,UAIM,G,0BAHJC,mBAAA,CAAe,YAAX,QAAM,sBACVC,mBAAA,WAAc,E,0BACdD,mBAAA,CAAsF;IAAjFE,GAAiC,EAAjCN,UAAiC;IAACO,GAAG,EAAC,gBAAgB;IAACN,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}