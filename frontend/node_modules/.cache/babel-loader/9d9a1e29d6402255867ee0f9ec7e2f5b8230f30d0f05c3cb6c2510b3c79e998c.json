{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"DB 리스트\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"DB 이름\"), _createElementVNode(\"th\", null, \"설명\"), _createElementVNode(\"th\", null, \"호스트\"), _createElementVNode(\"th\", null, \"포트\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.data, (db, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(db.dbName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbDescript), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.hostname), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.port), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","_ctx","data","db","index","key","_toDisplayString","dbName","dbDescript","hostname","port"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DBList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>DB 리스트</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>DB 이름</th>\r\n          <th>설명</th>\r\n          <th>호스트</th>\r\n          <th>포트</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(db, index) in data\" :key=\"index\">\r\n          <td>{{ db.dbName }}</td>\r\n          <td>{{ db.dbDescript }}</td>\r\n          <td>{{ db.hostname }}</td>\r\n          <td>{{ db.port }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbList: [] // 데이터를 저장할 배열\r\n    };\r\n  },\r\n  mounted() {\r\n    // Vue가 컴포넌트를 마운트할 때 API를 호출합니다.\r\n    axios\r\n      .get(\"http://localhost:8080/api/db-list/all\") // Spring Boot API 호출\r\n      .then((response) => {\r\n        this.dbList = response.data; // API 응답 데이터를 dbList에 저장\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error);\r\n      });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  color: #4CAF50;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAoBM,c,0BAnBJC,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAiBQ,gB,0BAhBNA,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAW,YAAP,IAAE,E,wBAGVA,mBAAA,CAOQ,iB,kBANND,mBAAA,CAKKE,SAAA,QAlBbC,WAAA,CAakCC,IAAA,CAAAC,IAAI,EAbtC,CAaoBC,EAAE,EAAEC,KAAK;yBAArBP,mBAAA,CAKK;MAL4BQ,GAAG,EAAED;IAAK,IACzCN,mBAAA,CAAwB,YAAAQ,gBAAA,CAAjBH,EAAE,CAACI,MAAM,kBAChBT,mBAAA,CAA4B,YAAAQ,gBAAA,CAArBH,EAAE,CAACK,UAAU,kBACpBV,mBAAA,CAA0B,YAAAQ,gBAAA,CAAnBH,EAAE,CAACM,QAAQ,kBAClBX,mBAAA,CAAsB,YAAAQ,gBAAA,CAAfH,EAAE,CAACO,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}