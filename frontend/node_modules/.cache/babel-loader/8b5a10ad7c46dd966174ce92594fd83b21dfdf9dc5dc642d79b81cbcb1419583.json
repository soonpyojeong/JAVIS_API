{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = [\"onMousedown\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"no-events\"\n};\nconst _hoisted_4 = {\n  class: \"schedule-box\"\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.monitoringItems, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"monitoring-box draggable\",\n      key: item.title,\n      style: _normalizeStyle(item.style),\n      onMousedown: $event => $options.startDrag($event, index)\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.events, event => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: event.id\n      }, _toDisplayString(event.message), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]), item.events.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"현재 이벤트가 없습니다.\")) : _createCommentVNode(\"v-if\", true)], 44 /* STYLE, PROPS, NEED_HYDRATION */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"고정 일정 관리\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"작업 항목\"), _createElementVNode(\"th\", null, \"완료 여부\"), _createElementVNode(\"th\", null, \"작업자 이메일\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.scheduleTasks, task => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: task.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(task.name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => task.completed = $event\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelCheckbox, task.completed]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"email\",\n      \"onUpdate:modelValue\": $event => task.email = $event,\n      placeholder: \"작업자 이메일 입력\"\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, task.email]])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.sendEmails && $options.sendEmails(...args))\n  }, \"이메일 발송\")])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","monitoringItems","item","index","title","style","_normalizeStyle","onMousedown","$event","$options","startDrag","_createElementVNode","_toDisplayString","events","event","id","message","length","_hoisted_3","_createCommentVNode","_hoisted_2","_hoisted_4","scheduleTasks","task","name","type","completed","_hoisted_5","email","placeholder","_hoisted_6","onClick","_cache","args","sendEmails"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div\r\n      class=\"monitoring-box draggable\"\r\n      v-for=\"(item, index) in monitoringItems\"\r\n      :key=\"item.title\"\r\n      :style=\"item.style\"\r\n      @mousedown=\"startDrag($event, index)\"\r\n    >\r\n      <h2>{{ item.title }}</h2>\r\n      <ul>\r\n        <li v-for=\"event in item.events\" :key=\"event.id\">\r\n          {{ event.message }}\r\n        </li>\r\n      </ul>\r\n      <div v-if=\"item.events.length === 0\" class=\"no-events\">현재 이벤트가 없습니다.</div>\r\n    </div>\r\n\r\n    <div class=\"schedule-box\">\r\n      <h2>고정 일정 관리</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>작업 항목</th>\r\n            <th>완료 여부</th>\r\n            <th>작업자 이메일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"task in scheduleTasks\" :key=\"task.id\">\r\n            <td>{{ task.name }}</td>\r\n            <td>\r\n              <input type=\"checkbox\" v-model=\"task.completed\" />\r\n            </td>\r\n            <td>\r\n              <input type=\"email\" v-model=\"task.email\" placeholder=\"작업자 이메일 입력\" />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button @click=\"sendEmails\">이메일 발송</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      monitoringItems: [\r\n        {\r\n          title: '테이블스페이스 관제',\r\n          events: [{ id: 1, message: '테이블스페이스 80% 초과 경고' }],\r\n          style: { position: 'absolute', top: '20px', left: '20px', zIndex: 1, width: '200px', height: '150px' },\r\n        },\r\n        {\r\n          title: '생사 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '300px', zIndex: 1, width: '200px', height: '150px' },\r\n        },\r\n        {\r\n          title: '오브젝트 인밸리드 관제',\r\n          events: [{ id: 3, message: 'Invalid Object 발견: FUNCTION_A' }],\r\n          style: { position: 'absolute', top: '20px', left: '580px', zIndex: 1, width: '200px', height: '150px' },\r\n        },\r\n        {\r\n          title: '락 리스트 관제',\r\n          events: [{ id: 4, message: 'Deadlock 발생: Session 101' }],\r\n          style: { position: 'absolute', top: '300px', left: '20px', zIndex: 1, width: '200px', height: '150px' },\r\n        },\r\n      ],\r\n      scheduleTasks: [\r\n        { id: 1, name: 'DB 백업', completed: false, email: '' },\r\n        { id: 2, name: '서버 점검', completed: false, email: '' },\r\n        { id: 3, name: '로그 분석', completed: false, email: '' },\r\n      ],\r\n      dragData: {\r\n        isDragging: false,\r\n        index: null,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    sendEmails() {\r\n      const completedTasks = this.scheduleTasks.filter(task => task.completed);\r\n      completedTasks.forEach(task => {\r\n        if (task.email) {\r\n          console.log(`이메일 발송: ${task.email}, 작업: ${task.name}`);\r\n        } else {\r\n          console.log(`작업자 이메일이 설정되지 않았습니다: 작업 ${task.name}`);\r\n        }\r\n      });\r\n      alert('이메일 발송이 완료되었습니다.');\r\n    },\r\n    startDrag(event, index) {\r\n      this.dragData.isDragging = true;\r\n      this.dragData.index = index;\r\n\r\n      // 마우스 위치에 따른 offset 계산\r\n      const item = this.monitoringItems[index];\r\n      const rect = event.target.getBoundingClientRect(); // 현재 드래그하는 요소의 위치 정보\r\n      this.dragData.offsetX = event.clientX - rect.left;\r\n      this.dragData.offsetY = event.clientY - rect.top;\r\n\r\n      item.style.zIndex = 1000;\r\n\r\n      // 마우스 이동과 마우스 업 이벤트 추가\r\n      window.addEventListener('mousemove', this.onDrag);\r\n      window.addEventListener('mouseup', this.stopDrag);\r\n    },\r\n    onDrag(event) {\r\n      if (!this.dragData.isDragging) return;\r\n\r\n      const item = this.monitoringItems[this.dragData.index];\r\n\r\n      let newLeft = event.clientX - this.dragData.offsetX;\r\n      let newTop = event.clientY - this.dragData.offsetY;\r\n\r\n      // 화면 밖으로 나가지 않도록 제한\r\n      newLeft = Math.max(0, Math.min(newLeft, window.innerWidth - parseInt(item.style.width)));\r\n      newTop = Math.max(0, Math.min(newTop, window.innerHeight - parseInt(item.style.height)));\r\n\r\n      // 다른 항목들과 겹치는지 확인하고 겹칠 경우 밀어내기\r\n      this.monitoringItems.forEach((otherItem, otherIndex) => {\r\n        if (otherIndex !== this.dragData.index) {\r\n          const otherLeft = parseInt(otherItem.style.left);\r\n          const otherTop = parseInt(otherItem.style.top);\r\n          const overlapX = Math.abs(newLeft - otherLeft) < 260;\r\n          const overlapY = Math.abs(newTop - otherTop) < 200;\r\n\r\n          if (overlapX && overlapY) {\r\n            if (newLeft < otherLeft) {\r\n              newLeft = otherLeft + 260;\r\n            } else {\r\n              newLeft = otherLeft - 260;\r\n            }\r\n\r\n            if (newTop < otherTop) {\r\n              newTop = otherTop + 200;\r\n            } else {\r\n              newTop = otherTop - 200;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      item.style.left = `${newLeft}px`;\r\n      item.style.top = `${newTop}px`;\r\n    },\r\n    stopDrag() {\r\n      if (!this.dragData.isDragging) return;\r\n\r\n      // 드래그 종료 후 z-index 복원\r\n      this.monitoringItems[this.dragData.index].style.zIndex = 1;\r\n      this.dragData.isDragging = false;\r\n\r\n      // 이벤트 리스너 제거\r\n      window.removeEventListener('mousemove', this.onDrag);\r\n      window.removeEventListener('mouseup', this.stopDrag);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.dashboard {\r\n  position: relative;\r\n  height: 100vh;\r\n  background: #f9f9f9;\r\n  font-family: 'Arial', sans-serif;\r\n  overflow: hidden;\r\n}\r\n\r\n.monitoring-box, .schedule-box {\r\n  background: white;\r\n  user-select: none;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 15px;\r\n  cursor: grab;\r\n  transition: transform 0.2s ease, left 0.2s ease, top 0.2s ease;\r\n  position: absolute;\r\n}\r\n\r\n.monitoring-box:active {\r\n  cursor: grabbing;\r\n}\r\n\r\n.monitoring-box h2, .schedule-box h2 {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.monitoring-box ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.monitoring-box li {\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.monitoring-box li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.no-events {\r\n  font-size: 14px;\r\n  color: #999;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.schedule-box table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n}\r\n\r\n.schedule-box th, .schedule-box td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.schedule-box th {\r\n  background: #f4f4f4;\r\n  font-weight: bold;\r\n}\r\n\r\n.schedule-box input[type=\"checkbox\"] {\r\n  cursor: pointer;\r\n}\r\n\r\n.schedule-box input[type=\"email\"] {\r\n  width: 100%;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.schedule-box button {\r\n  margin-top: 15px;\r\n  padding: 10px 15px;\r\n  background: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.schedule-box button:hover {\r\n  background: #45a049;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;mBADxB;;EAAAC,GAAA;EAe2CD,KAAK,EAAC;;;EAGxCA,KAAK,EAAC;AAAc;mBAlB7B;mBAAA;;uBACEE,mBAAA,CAyCM,OAzCNC,UAyCM,I,kBAxCJD,mBAAA,CAcME,SAAA,QAhBVC,WAAA,CAI8BC,KAAA,CAAAC,eAAe,EAJ7C,CAIcC,IAAI,EAAEC,KAAK;yBAFrBP,mBAAA,CAcM;MAbJF,KAAK,EAAC,0BAA0B;MAE/BC,GAAG,EAAEO,IAAI,CAACE,KAAK;MACfC,KAAK,EANZC,eAAA,CAMcJ,IAAI,CAACG,KAAK;MACjBE,WAAS,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACF,MAAM,EAAEL,KAAK;QAEnCQ,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBV,IAAI,CAACE,KAAK,kBACjBO,mBAAA,CAIK,c,kBAHHf,mBAAA,CAEKE,SAAA,QAbbC,WAAA,CAW4BG,IAAI,CAACW,MAAM,EAApBC,KAAK;2BAAhBlB,mBAAA,CAEK;QAF6BD,GAAG,EAAEmB,KAAK,CAACC;0BACxCD,KAAK,CAACE,OAAO;sCAGTd,IAAI,CAACW,MAAM,CAACI,MAAM,U,cAA7BrB,mBAAA,CAA0E,OAA1EsB,UAA0E,EAAnB,eAAa,KAf1EC,mBAAA,e,yCAAAC,UAAA;kCAkBIT,mBAAA,CAuBM,OAvBNU,UAuBM,G,0BAtBJV,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAmBQ,gB,0BAlBNA,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGfA,mBAAA,CAUQ,iB,kBATNf,mBAAA,CAQKE,SAAA,QArCfC,WAAA,CA6B6BC,KAAA,CAAAsB,aAAa,EAArBC,IAAI;yBAAf3B,mBAAA,CAQK;MAR8BD,GAAG,EAAE4B,IAAI,CAACR;QAC3CJ,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBW,IAAI,CAACC,IAAI,kBAChBb,mBAAA,CAEK,a,gBADHA,mBAAA,CAAkD;MAA3Cc,IAAI,EAAC,UAAU;MAhCpC,uBAAAjB,MAAA,IAgC8Ce,IAAI,CAACG,SAAS,GAAAlB;4BAhC5DmB,UAAA,I,kBAgC8CJ,IAAI,CAACG,SAAS,E,KAEhDf,mBAAA,CAEK,a,gBADHA,mBAAA,CAAoE;MAA7Dc,IAAI,EAAC,OAAO;MAnCjC,uBAAAjB,MAAA,IAmC2Ce,IAAI,CAACK,KAAK,GAAApB,MAAA;MAAEqB,WAAW,EAAC;4BAnCnEC,UAAA,I,cAmC2CP,IAAI,CAACK,KAAK,E;sCAK/CjB,mBAAA,CAA2C;IAAlCoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAExB,QAAA,CAAAyB,UAAA,IAAAzB,QAAA,CAAAyB,UAAA,IAAAD,IAAA,CAAU;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}