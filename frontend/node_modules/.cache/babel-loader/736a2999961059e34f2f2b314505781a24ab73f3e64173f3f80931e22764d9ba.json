{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"select-container\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"tablespace-table\"\n};\nconst _hoisted_5 = {\n  class: \"used-rate-container\"\n};\nconst _hoisted_6 = [\"id\"];\nconst _hoisted_7 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.selectedDb) + \" DB - 테이블스페이스 리스트\", 1 /* TEXT */), _createCommentVNode(\" DB 목록을 보여주는 드롭다운 \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDb = $event),\n    onChange: _cache[1] || (_cache[1] = $event => $options.fetchTablespaces($data.selectedDb))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tbList, (db, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: db\n    }, _toDisplayString(db), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedDb]])]), _createElementVNode(\"table\", _hoisted_4, [_cache[2] || (_cache[2] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Tablespace 이름\"), _createElementVNode(\"th\", null, \"TOTAL(MB)\"), _createElementVNode(\"th\", null, \"USED(MB)\"), _createElementVNode(\"th\", null, \"사용률 (%)\"), _createElementVNode(\"th\", null, \"FREE(MB)\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredTablespaces, ts => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: ts.id.tsName\n    }, [_createElementVNode(\"td\", null, _toDisplayString(ts.id.tsName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(ts.totalSize)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(ts.usedSize)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createCommentVNode(\" 사용률 차트 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"canvas\", {\n      id: 'chart-' + ts.id.tsName,\n      class: \"rate-chart\"\n    }, null, 8 /* PROPS */, _hoisted_6), _createCommentVNode(\" 차트 추가 \")])]), _createElementVNode(\"td\", null, _toDisplayString($options.formatNumber(ts.freeSize)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $options.filteredTablespaces.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"검색 결과가 없습니다.\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","selectedDb","_createCommentVNode","_hoisted_2","_cache","$event","onChange","$options","fetchTablespaces","_Fragment","_renderList","tbList","db","index","value","_hoisted_3","_hoisted_4","filteredTablespaces","ts","id","tsName","formatNumber","totalSize","usedSize","_hoisted_5","_hoisted_6","freeSize","length","_hoisted_7"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\TablespacesList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>{{ selectedDb }} DB - 테이블스페이스 리스트</h2>\r\n\r\n    <!-- DB 목록을 보여주는 드롭다운 -->\r\n    <div class=\"select-container\">\r\n      <select v-model=\"selectedDb\" @change=\"fetchTablespaces(selectedDb)\">\r\n        <option v-for=\"(db, index) in tbList\" :key=\"index\" :value=\"db\">\r\n          {{ db }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <table class=\"tablespace-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Tablespace 이름</th>\r\n          <th>TOTAL(MB)</th>\r\n          <th>USED(MB)</th>\r\n          <th>사용률 (%)</th>\r\n          <th>FREE(MB)</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          v-for=\"ts in filteredTablespaces\"\r\n          :key=\"ts.id.tsName\"\r\n        >\r\n          <td>{{ ts.id.tsName }}</td>\r\n          <td>{{ formatNumber(ts.totalSize) }}</td>\r\n          <td>{{ formatNumber(ts.usedSize) }}</td>\r\n          <td>\r\n            <!-- 사용률 차트 -->\r\n            <div class=\"used-rate-container\">\r\n              <canvas :id=\"'chart-' + ts.id.tsName\" class=\"rate-chart\"></canvas> <!-- 차트 추가 -->\r\n            </div>\r\n          </td>\r\n          <td>{{ formatNumber(ts.freeSize) }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-if=\"filteredTablespaces.length === 0\">검색 결과가 없습니다.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Chart from \"chart.js/auto\"; // Chart.js 자동 로드\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDb: null,\r\n      tbList: [],\r\n      tablespaces: [],\r\n      searchQuery: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    filteredTablespaces() {\r\n      return this.tablespaces.filter((ts) =>\r\n        ts.id.tsName.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    formatNumber(number) {\r\n      return number.toLocaleString(); // 천 단위 구분 기호 추가\r\n    },\r\n    fetchDbList() {\r\n      axios\r\n        .get(\"/api/tb/list\")\r\n        .then((res) => {\r\n          this.tbList = res.data;\r\n          if (this.tbList.length > 0) {\r\n            this.selectedDb = this.tbList[0];\r\n            this.fetchTablespaces(this.selectedDb);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching DB list:\", error);\r\n        });\r\n    },\r\n    fetchTablespaces(dbName) {\r\n      axios\r\n        .get(`/api/tb/${dbName}/tablespaces`)\r\n        .then((res) => {\r\n          this.tablespaces = res.data || [];\r\n          this.$nextTick(() => {\r\n            this.tablespaces.forEach((ts) => {\r\n              this.drawBarChart(ts); // 차트 그리기\r\n            });\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"테이블스페이스 데이터 가져오기 실패:\", error);\r\n        });\r\n    },\r\n\r\n    drawBarChart(ts) {\r\n      const ctx = document.getElementById('chart-' + ts.id.tsName).getContext('2d');\r\n\r\n      // 차트 초기화\r\n      new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['사용률'], // 차트 레이블\r\n          datasets: [{\r\n            label: '사용률',\r\n            data: [ts.usedRate], // 사용률 데이터\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)', // 배경 색상\r\n            borderColor: 'rgb(75, 192, 192)', // 테두리 색상\r\n            borderRadius: 5,  // 모서리 둥글게\r\n            borderWidth: 1,   // 테두리 두께\r\n          }],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          indexAxis: 'y',  // 가로 차트\r\n          scales: {\r\n            x: {\r\n              min: 0,\r\n              max: 100,  // 100%까지 표시\r\n              ticks: {\r\n                display: false,  // 0과 100을 숨깁니다.\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n              display: false,  // Y축 표시 안 함\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,  // 범례 숨기기\r\n            },\r\n            datalabels: {\r\n              // 실제 사용률 값 표시 (바 오른쪽에)\r\n              display: true,\r\n              align: 'end',\r\n              anchor: 'end',\r\n              formatter: (value) => `${value}%`,  // 사용률 값에 \"%\" 추가\r\n              color: 'rgb(75, 192, 192)', // 텍스트 색상\r\n              font: {\r\n                weight: 'bold',\r\n                size: 14,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n,\r\n  },\r\n  mounted() {\r\n    this.fetchDbList();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  font-family: Arial, sans-serif;\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh2 {\r\n  color: #4CAF50;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.select-container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tablespace-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tablespace-table th,\r\n.tablespace-table td {\r\n  padding: 8px;\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.tablespace-table th {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.no-data-message {\r\n  text-align: center;\r\n  color: #ff0000;\r\n}\r\n\r\n.used-rate-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.rate-chart {\r\n  max-width: 80px;\r\n  max-height: 40px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAIfA,KAAK,EAAC;AAAkB;mBALjC;;EAaWA,KAAK,EAAC;AAAkB;;EAoBlBA,KAAK,EAAC;AAAqB;mBAjC5C;;EAAAC,GAAA;AAAA;;uBACEC,mBAAA,CA0CM,OA1CNC,UA0CM,GAzCJC,mBAAA,CAA0C,YAAAC,gBAAA,CAAnCC,KAAA,CAAAC,UAAU,IAAG,mBAAiB,iBAErCC,mBAAA,sBAAyB,EACzBJ,mBAAA,CAMM,OANNK,UAMM,G,gBALJL,mBAAA,CAIS;IAVf,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMuBL,KAAA,CAAAC,UAAU,GAAAI,MAAA;IAAGC,QAAM,EAAAF,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEE,QAAA,CAAAC,gBAAgB,CAACR,KAAA,CAAAC,UAAU;yBAC/DL,mBAAA,CAESa,SAAA,QATjBC,WAAA,CAOsCV,KAAA,CAAAW,MAAM,EAP5C,CAOwBC,EAAE,EAAEC,KAAK;yBAAzBjB,mBAAA,CAES;MAF8BD,GAAG,EAAEkB,KAAK;MAAGC,KAAK,EAAEF;wBACtDA,EAAE,wBARfG,UAAA;2FAMuBf,KAAA,CAAAC,UAAU,E,KAO7BH,mBAAA,CA2BQ,SA3BRkB,UA2BQ,G,0BA1BNlB,mBAAA,CAQQ,gBAPNA,mBAAA,CAMK,aALHA,mBAAA,CAAsB,YAAlB,eAAa,GACjBA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAiB,YAAb,UAAQ,E,wBAGhBA,mBAAA,CAgBQ,iB,kBAfNF,mBAAA,CAcKa,SAAA,QAtCbC,WAAA,CAyBuBH,QAAA,CAAAU,mBAAmB,EAAzBC,EAAE;yBADXtB,mBAAA,CAcK;MAZFD,GAAG,EAAEuB,EAAE,CAACC,EAAE,CAACC;QAEZtB,mBAAA,CAA2B,YAAAC,gBAAA,CAApBmB,EAAE,CAACC,EAAE,CAACC,MAAM,kBACnBtB,mBAAA,CAAyC,YAAAC,gBAAA,CAAlCQ,QAAA,CAAAc,YAAY,CAACH,EAAE,CAACI,SAAS,mBAChCxB,mBAAA,CAAwC,YAAAC,gBAAA,CAAjCQ,QAAA,CAAAc,YAAY,CAACH,EAAE,CAACK,QAAQ,mBAC/BzB,mBAAA,CAKK,aAJHI,mBAAA,YAAe,EACfJ,mBAAA,CAEM,OAFN0B,UAEM,GADJ1B,mBAAA,CAAkE;MAAzDqB,EAAE,aAAaD,EAAE,CAACC,EAAE,CAACC,MAAM;MAAE1B,KAAK,EAAC;4BAlC1D+B,UAAA,GAkCiFvB,mBAAA,WAAc,C,KAGrFJ,mBAAA,CAAwC,YAAAC,gBAAA,CAAjCQ,QAAA,CAAAc,YAAY,CAACH,EAAE,CAACQ,QAAQ,kB;sCAK5BnB,QAAA,CAAAU,mBAAmB,CAACU,MAAM,U,cAAnC/B,mBAAA,CAA2D,KA1C/DgC,UAAA,EA0C+C,cAAY,KA1C3D1B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}