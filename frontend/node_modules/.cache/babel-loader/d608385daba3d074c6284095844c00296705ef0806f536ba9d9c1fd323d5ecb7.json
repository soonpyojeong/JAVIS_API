{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"modal-content\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  id: \"lineChart\",\n  width: \"400\",\n  height: \"200\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($data.selectedDb) + \" DB - 테이블스페이스 리스트\", 1 /* TEXT */), _createCommentVNode(\" DB 목록을 보여주는 드롭다운 \"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDb = $event),\n    onChange: _cache[1] || (_cache[1] = $event => $options.fetchTablespaces($data.selectedDb))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tbList, (db, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: db\n    }, _toDisplayString(db), 9 /* TEXT, PROPS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedDb]]), _createCommentVNode(\" 검색 입력 필드 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"테이블스페이스 검색\",\n    style: {\n      \"margin-bottom\": \"10px\",\n      \"padding\": \"5px\",\n      \"width\": \"300px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.sortData('id.tsName'))\n  }, \"Tablespace 이름\"), _createElementVNode(\"th\", {\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.sortData('totalSize'))\n  }, \"총 크기 (MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.sortData('usedSize'))\n  }, \"사용량 (MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[6] || (_cache[6] = $event => _ctx.sortData('freeSize'))\n  }, \"남은 크기 (MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[7] || (_cache[7] = $event => _ctx.sortData('usedRate'))\n  }, \"사용률 (%)\"), _createElementVNode(\"th\", {\n    onClick: _cache[8] || (_cache[8] = $event => _ctx.sortData('id.chkDate'))\n  }, \"체크 날짜\"), _createElementVNode(\"th\", {\n    onClick: _cache[9] || (_cache[9] = $event => _ctx.sortData('id.chkTime'))\n  }, \"체크 시간\"), _createElementVNode(\"th\", {\n    onClick: _cache[10] || (_cache[10] = $event => _ctx.sortData('autoExtensCntFile'))\n  }, \"자동 확장 파일 수\"), _createElementVNode(\"th\", {\n    onClick: _cache[11] || (_cache[11] = $event => _ctx.sortData('maxMbBytes'))\n  }, \"최대 MB 바이트\")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredTablespaces, ts => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: ts.id.tsName,\n      onClick: $event => $options.fetchRecentData($data.selectedDb, ts.id.tsName)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(ts.id.tsName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.totalSize), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.usedSize), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.freeSize), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.usedRate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.id.chkDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.id.chkTime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.autoExtensCntFile), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.maxMbBytes), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])]), _ctx.filteredTablespaces.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"검색 결과가 없습니다.\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 모달 \"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"modal-overlay\",\n    onClick: _cache[14] || (_cache[14] = _withModifiers((...args) => $options.closeModal && $options.closeModal(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, \"최근 3개월 데이터: \" + _toDisplayString($data.selectedTsName), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"닫기\"), _createElementVNode(\"button\", {\n    class: \"chart-btn\",\n    onClick: _cache[13] || (_cache[13] = (...args) => $options.generateChartData && $options.generateChartData(...args))\n  }, \"Line Chart 보기\"), _createCommentVNode(\" 차트 영역 \"), $data.showChart ? (_openBlock(), _createElementBlock(\"canvas\", _hoisted_5)) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","class","id","width","height","_createElementBlock","_createElementVNode","_toDisplayString","$data","selectedDb","_createCommentVNode","_cache","$event","onChange","$options","fetchTablespaces","_Fragment","_renderList","tbList","db","index","value","_hoisted_1","searchQuery","type","placeholder","style","onClick","_ctx","sortData","filteredTablespaces","ts","tsName","fetchRecentData","totalSize","usedSize","freeSize","usedRate","chkDate","chkTime","autoExtensCntFile","maxMbBytes","_hoisted_2","length","_hoisted_3","showModal","_withModifiers","args","closeModal","_hoisted_4","selectedTsName","generateChartData","showChart","_hoisted_5"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\TablespacesList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>{{ selectedDb }} DB - 테이블스페이스 리스트</h2>\r\n\r\n    <!-- DB 목록을 보여주는 드롭다운 -->\r\n    <select v-model=\"selectedDb\" @change=\"fetchTablespaces(selectedDb)\">\r\n      <option v-for=\"(db, index) in tbList\" :key=\"index\" :value=\"db\">\r\n        {{ db }}\r\n      </option>\r\n    </select>\r\n\r\n    <!-- 검색 입력 필드 -->\r\n    <input\r\n      v-model=\"searchQuery\"\r\n      type=\"text\"\r\n      placeholder=\"테이블스페이스 검색\"\r\n      style=\"margin-bottom: 10px; padding: 5px; width: 300px;\"\r\n    />\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th @click=\"sortData('id.tsName')\">Tablespace 이름</th>\r\n          <th @click=\"sortData('totalSize')\">총 크기 (MB)</th>\r\n          <th @click=\"sortData('usedSize')\">사용량 (MB)</th>\r\n          <th @click=\"sortData('freeSize')\">남은 크기 (MB)</th>\r\n          <th @click=\"sortData('usedRate')\">사용률 (%)</th>\r\n          <th @click=\"sortData('id.chkDate')\">체크 날짜</th>\r\n          <th @click=\"sortData('id.chkTime')\">체크 시간</th>\r\n          <th @click=\"sortData('autoExtensCntFile')\">자동 확장 파일 수</th>\r\n          <th @click=\"sortData('maxMbBytes')\">최대 MB 바이트</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          v-for=\"ts in filteredTablespaces\"\r\n          :key=\"ts.id.tsName\"\r\n          @click=\"fetchRecentData(selectedDb, ts.id.tsName)\"\r\n        >\r\n          <td>{{ ts.id.tsName }}</td>\r\n          <td>{{ ts.totalSize }}</td>\r\n          <td>{{ ts.usedSize }}</td>\r\n          <td>{{ ts.freeSize }}</td>\r\n          <td>{{ ts.usedRate }}</td>\r\n          <td>{{ ts.id.chkDate }}</td>\r\n          <td>{{ ts.id.chkTime }}</td>\r\n          <td>{{ ts.autoExtensCntFile }}</td>\r\n          <td>{{ ts.maxMbBytes }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-if=\"filteredTablespaces.length === 0\">검색 결과가 없습니다.</p>\r\n     <!-- 모달 -->\r\n     <div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\r\n       <div class=\"modal-content\">\r\n         <h3>최근 3개월 데이터: {{ selectedTsName }}</h3>\r\n         <button class=\"close-btn\" @click=\"closeModal\">닫기</button>\r\n         <button class=\"chart-btn\" @click=\"generateChartData\">Line Chart 보기</button>\r\n\r\n         <!-- 차트 영역 -->\r\n         <canvas v-if=\"showChart\" id=\"lineChart\" width=\"400\" height=\"200\"></canvas>\r\n       </div>\r\n     </div>\r\n   </div>\r\n </template>\r\n\r\n <script>\r\n import axios from \"axios\";\r\n import { Chart } from \"chart.js\";\r\n\r\n export default {\r\n   data() {\r\n     return {\r\n       selectedDb: null,\r\n       tbList: [],\r\n       tablespaces: [],\r\n       searchQuery: \"\",\r\n       sortKey: \"tsName\",\r\n       sortOrder: 1,\r\n       showModal: false, // 모달 표시 여부\r\n       showChart: false, // 차트 표시 여부\r\n       recentData: [], // 최근 3개월 데이터\r\n       selectedTsName: \"\", // 선택된 테이블스페이스 이름\r\n       chartInstance: null, // Chart.js 인스턴스\r\n     };\r\n   },\r\n   methods: {\r\n     fetchDbList() {\r\n       axios\r\n         .get(\"/api/tb/list\")\r\n         .then((res) => {\r\n           this.tbList = res.data;\r\n           if (this.tbList.length > 0) {\r\n             this.selectedDb = this.tbList[0];\r\n             this.fetchTablespaces(this.selectedDb);\r\n           }\r\n         })\r\n         .catch((error) => {\r\n           console.error(\"Error fetching DB list:\", error);\r\n         });\r\n     },\r\n     fetchTablespaces(dbName) {\r\n       axios\r\n         .get(`/api/tb/${dbName}/tablespaces`)\r\n         .then((res) => {\r\n           this.tablespaces = res.data || [];\r\n         })\r\n         .catch((error) => {\r\n           console.error(\"테이블스페이스 데이터 가져오기 실패:\", error);\r\n         });\r\n     },\r\n     fetchRecentData(selectedDb, tsName) {\r\n       if (!selectedDb || !tsName) {\r\n         console.error(\"selectedDb 또는 tsName이 유효하지 않습니다.\");\r\n         return;\r\n       }\r\n\r\n       axios\r\n         .get(`/api/tb/${selectedDb}/${tsName}/recent`)\r\n         .then((res) => {\r\n           this.recentData = res.data || [];\r\n           this.showModal = true; // 모달 열기\r\n         })\r\n         .catch((error) => {\r\n           console.error(\"최근 데이터 가져오기 실패:\", error);\r\n         });\r\n     },\r\n     closeModal() {\r\n       this.showModal = false;\r\n       this.showChart = false;\r\n\r\n       // 차트 인스턴스 제거\r\n       if (this.chartInstance) {\r\n         this.chartInstance.destroy();\r\n         this.chartInstance = null;\r\n       }\r\n     },\r\n     generateChartData() {\r\n       this.showChart = true;\r\n\r\n       // `recentData`를 기준으로 라벨과 데이터 준비\r\n       const labels = this.recentData.map(\r\n         (data) => `${data.id.chkDate} ${data.id.chkTime}`\r\n       );\r\n       const dataValues = this.recentData.map((data) => data.usedRate);\r\n\r\n       // 기존 차트 제거 (중복 방지)\r\n       if (this.chartInstance) {\r\n         this.chartInstance.destroy();\r\n       }\r\n\r\n       // Chart.js 생성\r\n       const ctx = document.getElementById(\"lineChart\").getContext(\"2d\");\r\n       this.chartInstance = new Chart(ctx, {\r\n         type: \"line\",\r\n         data: {\r\n           labels: labels, // x축 라벨\r\n           datasets: [\r\n             {\r\n               label: \"Used Rate (%)\",\r\n               data: dataValues, // y축 데이터\r\n               borderColor: \"rgba(75, 192, 192, 1)\",\r\n               backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n               tension: 0.4, // 곡선의 부드러움\r\n               borderWidth: 2,\r\n               fill: true,\r\n             },\r\n           ],\r\n         },\r\n         options: {\r\n           responsive: true,\r\n           plugins: {\r\n             legend: {\r\n               display: true,\r\n               position: \"top\",\r\n             },\r\n           },\r\n           scales: {\r\n             x: {\r\n               title: {\r\n                 display: true,\r\n                 text: \"Check Date & Time\",\r\n               },\r\n             },\r\n             y: {\r\n               title: {\r\n                 display: true,\r\n                 text: \"Used Rate (%)\",\r\n               },\r\n               min: 0,\r\n               max: 100,\r\n             },\r\n           },\r\n         },\r\n       });\r\n     },\r\n   },\r\n   mounted() {\r\n     this.fetchDbList();\r\n   },\r\n };\r\n </script>\r\n\r\n <style scoped>\r\n .modal-overlay {\r\n   position: fixed;\r\n   top: 0;\r\n   left: 0;\r\n   width: 100%;\r\n   height: 100%;\r\n   background: rgba(0, 0, 0, 0.5);\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n   z-index: 1000;\r\n }\r\n\r\n .modal-content {\r\n   background: white;\r\n   padding: 20px;\r\n   border-radius: 10px;\r\n   width: 80%;\r\n   max-width: 800px;\r\n   overflow-y: auto;\r\n }\r\n\r\n .chart-btn {\r\n   background: green;\r\n   color: white;\r\n   padding: 10px;\r\n   border: none;\r\n   cursor: pointer;\r\n   margin-bottom: 10px;\r\n }\r\n </style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}