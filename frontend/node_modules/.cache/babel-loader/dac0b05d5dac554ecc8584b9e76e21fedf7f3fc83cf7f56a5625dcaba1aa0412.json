{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"SMS 전송 히스토리\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"SEQNO\"), _createElementVNode(\"th\", null, \"INDATE\"), _createElementVNode(\"th\", null, \"INTIME\"), _createElementVNode(\"th\", null, \"SENDNAME\"), _createElementVNode(\"th\", null, \"RECVNAME\"), _createElementVNode(\"th\", null, \"MSG\"), _createElementVNode(\"th\", null, \"RESULT\"), _createElementVNode(\"th\", null, \"KIND\"), _createElementVNode(\"th\", null, \"ERRCODE\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.smsHistories, history => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: history.SEQNO\n    }, [_createElementVNode(\"td\", null, _toDisplayString(history.SEQNO), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.loc), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.assets), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.dbDescript), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.recName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.msg), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.result), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.kind), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.errCode), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.updateAllSmsHistories && $options.updateAllSmsHistories(...args))\n  }, \"전체 메시지 전송 처리\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","smsHistories","history","key","SEQNO","_toDisplayString","loc","assets","dbDescript","recName","msg","result","kind","errCode","onClick","_cache","args","$options","updateAllSmsHistories"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\SmsHistory.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>SMS 전송 히스토리</h1>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>SEQNO</th>\r\n          <th>INDATE</th>\r\n          <th>INTIME</th>\r\n          <th>SENDNAME</th>\r\n          <th>RECVNAME</th>\r\n          <th>MSG</th>\r\n          <th>RESULT</th>\r\n          <th>KIND</th>\r\n          <th>ERRCODE</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"history in smsHistories\" :key=\"history.SEQNO\">\r\n          <td>{{ history.SEQNO }}</td>\r\n          <td>{{ history.loc }}</td>\r\n          <td>{{ history.assets }}</td>\r\n          <td>{{ history.dbDescript }}</td>\r\n          <td>{{ history.recName }}</td>\r\n          <td>{{ history.msg }}</td>\r\n          <td>{{ history.result }}</td>\r\n          <td>{{ history.kind }}</td>\r\n          <td>{{ history.errCode }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <button @click=\"updateAllSmsHistories\">전체 메시지 전송 처리</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      smsHistories: [],\r\n      day: 1, // 예시로 최근 1일 기준\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchSmsHistories();\r\n  },\r\n  methods: {\r\n    fetchSmsHistories() {\r\n      axios.get(`/api/sms/all?day=${this.day}`)\r\n        .then(response => {\r\n          this.smsHistories = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching SMS histories:', error);\r\n        });\r\n    },\r\n    updateAllSmsHistories() {\r\n      axios.put('/api/sms/updateall')\r\n        .then(() => {\r\n          alert('전체 메시지 전송 처리가 완료되었습니다.');\r\n          this.fetchSmsHistories();  // 업데이트 후 리스트 다시 가져오기\r\n        })\r\n        .catch(error => {\r\n          console.error('Error updating SMS histories:', error);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일은 자유롭게 설정 */\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  text-align: center;\r\n}\r\nbutton {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAgCM,c,0BA/BJC,mBAAA,CAAoB,YAAhB,aAAW,sBACfA,mBAAA,CA2BQ,gB,0BA1BNA,mBAAA,CAYQ,gBAXNA,mBAAA,CAUK,aATHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGfA,mBAAA,CAYQ,iB,kBAXND,mBAAA,CAUKE,SAAA,QA5BbC,WAAA,CAkB8BC,KAAA,CAAAC,YAAY,EAAvBC,OAAO;yBAAlBN,mBAAA,CAUK;MAVgCO,GAAG,EAAED,OAAO,CAACE;QAChDP,mBAAA,CAA4B,YAAAQ,gBAAA,CAArBH,OAAO,CAACE,KAAK,kBACpBP,mBAAA,CAA0B,YAAAQ,gBAAA,CAAnBH,OAAO,CAACI,GAAG,kBAClBT,mBAAA,CAA6B,YAAAQ,gBAAA,CAAtBH,OAAO,CAACK,MAAM,kBACrBV,mBAAA,CAAiC,YAAAQ,gBAAA,CAA1BH,OAAO,CAACM,UAAU,kBACzBX,mBAAA,CAA8B,YAAAQ,gBAAA,CAAvBH,OAAO,CAACO,OAAO,kBACtBZ,mBAAA,CAA0B,YAAAQ,gBAAA,CAAnBH,OAAO,CAACQ,GAAG,kBAClBb,mBAAA,CAA6B,YAAAQ,gBAAA,CAAtBH,OAAO,CAACS,MAAM,kBACrBd,mBAAA,CAA2B,YAAAQ,gBAAA,CAApBH,OAAO,CAACU,IAAI,kBACnBf,mBAAA,CAA8B,YAAAQ,gBAAA,CAAvBH,OAAO,CAACW,OAAO,iB;sCAK5BhB,mBAAA,CAA4D;IAAnDiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,qBAAA,IAAAD,QAAA,CAAAC,qBAAA,IAAAF,IAAA,CAAqB;KAAE,cAAY,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}