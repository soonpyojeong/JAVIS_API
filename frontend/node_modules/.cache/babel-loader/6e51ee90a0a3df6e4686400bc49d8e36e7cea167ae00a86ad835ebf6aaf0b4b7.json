{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport Chart from 'chart.js/auto';\nexport default {\n  setup() {\n    const dbType = ref('ORACLE');\n    const selectedDB = ref(null);\n    const selectedMetric = ref(null);\n    const chartCanvas = ref(null);\n    let chartInstance = null;\n    const dbList = ref([{\n      name: 'DB1',\n      expanded: false\n    }, {\n      name: 'DB2',\n      expanded: false\n    }, {\n      name: 'DB3',\n      expanded: false\n    }]);\n    const metrics = ref(['TRANSACTIONS', 'TOTAL_SESSION', 'ACTIVE_SESSION', 'BUFFER_NOWAIT_PCT', 'REDO_NOWAIT_PCT', 'BUFFER_HIT_PCT', 'LATCH_HIT_PCT', 'LIBRARY_HIT_PCT', 'SOFT_PARSE_PCT', 'EXECUTE_TO_PARSE_PCT', 'PARSE_CPU_TO_PARSE_ELAPSD', 'NON_PARSE_CPU', 'IN_MEMORY_SORT', 'DAILY_ARCH_CNT']);\n    const toggleDB = db => {\n      db.expanded = !db.expanded;\n    };\n    const selectMetric = (dbName, metric) => {\n      selectedDB.value = dbName;\n      selectedMetric.value = metric;\n      createChart();\n    };\n    const createChart = () => {\n      if (chartInstance) {\n        chartInstance.destroy();\n      }\n      if (chartCanvas.value) {\n        chartInstance = new Chart(chartCanvas.value, {\n          type: 'line',\n          data: {\n            labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00'],\n            datasets: [{\n              label: selectedMetric.value,\n              data: [30, 50, 40, 60, 80, 70],\n              borderColor: 'blue',\n              fill: false\n            }]\n          },\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              }\n            }\n          }\n        });\n      }\n    };\n    watch(selectedMetric, createChart);\n    onMounted(() => {\n      if (selectedDB.value) {\n        createChart();\n      }\n    });\n    return {\n      dbType,\n      selectedDB,\n      selectedMetric,\n      dbList,\n      metrics,\n      chartCanvas,\n      toggleDB,\n      selectMetric\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","Chart","setup","dbType","selectedDB","selectedMetric","chartCanvas","chartInstance","dbList","name","expanded","metrics","toggleDB","db","selectMetric","dbName","metric","value","createChart","destroy","type","data","labels","datasets","label","borderColor","fill","options","responsive","plugins","legend","position"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DailyChk.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- 상단 DB 타입 선택 (탭) -->\r\n    <div class=\"tabs\">\r\n      <div class=\"tab\" :class=\"{ active: dbType === 'ORACLE' }\" @click=\"dbType = 'ORACLE'\">ORACLE</div>\r\n      <div class=\"tab\" :class=\"{ active: dbType === 'TIBERO' }\" @click=\"dbType = 'TIBERO'\">TIBERO</div>\r\n    </div>\r\n\r\n    <div class=\"content\" v-if=\"dbType === 'ORACLE'\">\r\n      <!-- 왼쪽 DB 트리 구조 -->\r\n      <div class=\"db-tree\">\r\n        <ul>\r\n          <li v-for=\"db in dbList\" :key=\"db.name\">\r\n            <span @click=\"toggleDB(db)\">{{ db.name }}</span>\r\n            <ul v-if=\"db.expanded\">\r\n              <li v-for=\"metric in metrics\" :key=\"metric\" @click=\"selectMetric(db.name, metric)\">\r\n                {{ metric }}\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <!-- 중앙 차트 -->\r\n      <div class=\"chart-container\" v-if=\"selectedDB\">\r\n        <h3>{{ selectedDB }} - {{ selectedMetric }} Metrics</h3>\r\n        <canvas ref=\"chartCanvas\"></canvas>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n  setup() {\r\n    const dbType = ref('ORACLE');\r\n    const selectedDB = ref(null);\r\n    const selectedMetric = ref(null);\r\n    const chartCanvas = ref(null);\r\n    let chartInstance = null;\r\n\r\n    const dbList = ref([\r\n      { name: 'DB1', expanded: false },\r\n      { name: 'DB2', expanded: false },\r\n      { name: 'DB3', expanded: false }\r\n    ]);\r\n\r\n    const metrics = ref([\r\n      'TRANSACTIONS', 'TOTAL_SESSION', 'ACTIVE_SESSION',\r\n      'BUFFER_NOWAIT_PCT', 'REDO_NOWAIT_PCT', 'BUFFER_HIT_PCT',\r\n      'LATCH_HIT_PCT', 'LIBRARY_HIT_PCT', 'SOFT_PARSE_PCT',\r\n      'EXECUTE_TO_PARSE_PCT', 'PARSE_CPU_TO_PARSE_ELAPSD',\r\n      'NON_PARSE_CPU', 'IN_MEMORY_SORT', 'DAILY_ARCH_CNT'\r\n    ]);\r\n\r\n    const toggleDB = (db) => {\r\n      db.expanded = !db.expanded;\r\n    };\r\n\r\n    const selectMetric = (dbName, metric) => {\r\n      selectedDB.value = dbName;\r\n      selectedMetric.value = metric;\r\n      createChart();\r\n    };\r\n\r\n    const createChart = () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n      if (chartCanvas.value) {\r\n        chartInstance = new Chart(chartCanvas.value, {\r\n          type: 'line',\r\n          data: {\r\n            labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00'],\r\n            datasets: [{\r\n              label: selectedMetric.value,\r\n              data: [30, 50, 40, 60, 80, 70],\r\n              borderColor: 'blue',\r\n              fill: false\r\n            }]\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            plugins: { legend: { position: 'top' } }\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    watch(selectedMetric, createChart);\r\n\r\n    onMounted(() => {\r\n      if (selectedDB.value) {\r\n        createChart();\r\n      }\r\n    });\r\n\r\n    return {\r\n      dbType,\r\n      selectedDB,\r\n      selectedMetric,\r\n      dbList,\r\n      metrics,\r\n      chartCanvas,\r\n      toggleDB,\r\n      selectMetric\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.tabs {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  border-bottom: 2px solid #ddd;\r\n}\r\n.tab {\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border-bottom: 3px solid transparent;\r\n}\r\n.tab.active {\r\n  border-bottom: 3px solid #007bff;\r\n  font-weight: bold;\r\n  color: #007bff;\r\n}\r\n.content {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n}\r\n.db-tree {\r\n  width: 250px;\r\n  padding-right: 20px;\r\n  border-right: 2px solid #ddd;\r\n}\r\n.db-tree ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n.db-tree li {\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n.db-tree li:hover {\r\n  background: #f0f0f0;\r\n}\r\n.chart-container {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n</style>"],"mappings":"AAiCA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAI,QAAS,KAAK;AAC3C,OAAOC,KAAI,MAAO,eAAe;AAEjC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,GAAG,CAAC,QAAQ,CAAC;IAC5B,MAAMM,UAAS,GAAIN,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAMO,cAAa,GAAIP,GAAG,CAAC,IAAI,CAAC;IAChC,MAAMQ,WAAU,GAAIR,GAAG,CAAC,IAAI,CAAC;IAC7B,IAAIS,aAAY,GAAI,IAAI;IAExB,MAAMC,MAAK,GAAIV,GAAG,CAAC,CACjB;MAAEW,IAAI,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChC;MAAED,IAAI,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAM,CAAC,EAChC;MAAED,IAAI,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAM,EAChC,CAAC;IAEF,MAAMC,OAAM,GAAIb,GAAG,CAAC,CAClB,cAAc,EAAE,eAAe,EAAE,gBAAgB,EACjD,mBAAmB,EAAE,iBAAiB,EAAE,gBAAgB,EACxD,eAAe,EAAE,iBAAiB,EAAE,gBAAgB,EACpD,sBAAsB,EAAE,2BAA2B,EACnD,eAAe,EAAE,gBAAgB,EAAE,gBAAe,CACnD,CAAC;IAEF,MAAMc,QAAO,GAAKC,EAAE,IAAK;MACvBA,EAAE,CAACH,QAAO,GAAI,CAACG,EAAE,CAACH,QAAQ;IAC5B,CAAC;IAED,MAAMI,YAAW,GAAIA,CAACC,MAAM,EAAEC,MAAM,KAAK;MACvCZ,UAAU,CAACa,KAAI,GAAIF,MAAM;MACzBV,cAAc,CAACY,KAAI,GAAID,MAAM;MAC7BE,WAAW,CAAC,CAAC;IACf,CAAC;IAED,MAAMA,WAAU,GAAIA,CAAA,KAAM;MACxB,IAAIX,aAAa,EAAE;QACjBA,aAAa,CAACY,OAAO,CAAC,CAAC;MACzB;MACA,IAAIb,WAAW,CAACW,KAAK,EAAE;QACrBV,aAAY,GAAI,IAAIN,KAAK,CAACK,WAAW,CAACW,KAAK,EAAE;UAC3CG,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;YACJC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;YAC9DC,QAAQ,EAAE,CAAC;cACTC,KAAK,EAAEnB,cAAc,CAACY,KAAK;cAC3BI,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;cAC9BI,WAAW,EAAE,MAAM;cACnBC,IAAI,EAAE;YACR,CAAC;UACH,CAAC;UACDC,OAAO,EAAE;YACPC,UAAU,EAAE,IAAI;YAChBC,OAAO,EAAE;cAAEC,MAAM,EAAE;gBAAEC,QAAQ,EAAE;cAAM;YAAE;UACzC;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IAED/B,KAAK,CAACK,cAAc,EAAEa,WAAW,CAAC;IAElCnB,SAAS,CAAC,MAAM;MACd,IAAIK,UAAU,CAACa,KAAK,EAAE;QACpBC,WAAW,CAAC,CAAC;MACf;IACF,CAAC,CAAC;IAEF,OAAO;MACLf,MAAM;MACNC,UAAU;MACVC,cAAc;MACdG,MAAM;MACNG,OAAO;MACPL,WAAW;MACXM,QAAQ;MACRE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}