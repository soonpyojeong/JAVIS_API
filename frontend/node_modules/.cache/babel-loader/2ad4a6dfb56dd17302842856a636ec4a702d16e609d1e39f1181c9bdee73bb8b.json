{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", null, \"SMS 전송 히스토리\", -1 /* HOISTED */)), _createCommentVNode(\" 일수 입력 필드와 조회 버튼 추가 \"), _createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"days\"\n  }, \"조회할 일수: \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"days\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.day = $event),\n    min: \"1\",\n    placeholder: \"일수를 입력하세요\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.day]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchSmsHistories && $options.fetchSmsHistories(...args))\n  }, \"조회\")]), _createCommentVNode(\" 전체 메시지 전송 처리 버튼 \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.updateAllSmsHistories && $options.updateAllSmsHistories(...args))\n  }, \"전체 메시지 전송 처리\"), _createCommentVNode(\" 히스토리 테이블 \"), _createElementVNode(\"table\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"INDATE\"), _createElementVNode(\"th\", null, \"INTIME\"), _createElementVNode(\"th\", null, \"SENDNAME\"), _createElementVNode(\"th\", null, \"RECVNAME\"), _createElementVNode(\"th\", null, \"MSG\"), _createElementVNode(\"th\", null, \"RESULT\"), _createElementVNode(\"th\", null, \"KIND\"), _createElementVNode(\"th\", null, \"ERRCODE\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.smsHistories, history => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: history.SEQNO\n    }, [_createElementVNode(\"td\", null, _toDisplayString(history.loc), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.assets), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.dbDescript), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.recName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.msg), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.result), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.kind), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.errCode), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createCommentVNode","for","type","id","_cache","$event","$data","day","min","placeholder","onClick","args","$options","fetchSmsHistories","updateAllSmsHistories","_Fragment","_renderList","smsHistories","history","key","SEQNO","_toDisplayString","loc","assets","dbDescript","recName","msg","result","kind","errCode"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\SmsHistory.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>SMS 전송 히스토리</h1>\r\n\r\n    <!-- 일수 입력 필드와 조회 버튼 추가 -->\r\n    <div>\r\n      <label for=\"days\">조회할 일수: </label>\r\n      <input type=\"number\" id=\"days\" v-model=\"day\" min=\"1\" placeholder=\"일수를 입력하세요\" />\r\n      <button @click=\"fetchSmsHistories\">조회</button>\r\n    </div>\r\n\r\n    <!-- 전체 메시지 전송 처리 버튼 -->\r\n    <button @click=\"updateAllSmsHistories\">전체 메시지 전송 처리</button>\r\n\r\n    <!-- 히스토리 테이블 -->\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>INDATE</th>\r\n          <th>INTIME</th>\r\n          <th>SENDNAME</th>\r\n          <th>RECVNAME</th>\r\n          <th>MSG</th>\r\n          <th>RESULT</th>\r\n          <th>KIND</th>\r\n          <th>ERRCODE</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"history in smsHistories\" :key=\"history.SEQNO\">\r\n          <td>{{ history.loc }}</td>\r\n          <td>{{ history.assets }}</td>\r\n          <td>{{ history.dbDescript }}</td>\r\n          <td>{{ history.recName }}</td>\r\n          <td>{{ history.msg }}</td>\r\n          <td>{{ history.result }}</td>\r\n          <td>{{ history.kind }}</td>\r\n          <td>{{ history.errCode }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      smsHistories: [],\r\n      day: 30,  // 기본 30일 기준\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchSmsHistories();  // 기본적으로 30일 기준으로 데이터 조회\r\n  },\r\n  methods: {\r\n    fetchSmsHistories() {\r\n      axios.get(`/api/sms/all?day=${this.day}`)\r\n        .then(response => {\r\n          this.smsHistories = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching SMS histories:', error);\r\n        });\r\n    },\r\n    updateAllSmsHistories() {\r\n      axios.put('/api/sms/updateall')\r\n        .then(() => {\r\n          alert('전체 메시지 전송 처리가 완료되었습니다.');\r\n          this.fetchSmsHistories();  // 업데이트 후 리스트 다시 가져오기\r\n        })\r\n        .catch(error => {\r\n          console.error('Error updating SMS histories:', error);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일은 자유롭게 설정 */\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px; /* 버튼과 테이블 사이에 여백 추가 */\r\n}\r\nth, td {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  text-align: center;\r\n}\r\nbutton {\r\n  margin-bottom: 20px; /* 버튼과 테이블 사이의 간격 조정 */\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\ninput[type=\"number\"] {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n  width: 100px;\r\n}\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAwCM,c,0BAvCJC,mBAAA,CAAoB,YAAhB,aAAW,sBAEfC,mBAAA,wBAA2B,EAC3BD,mBAAA,CAIM,c,0BAHJA,mBAAA,CAAkC;IAA3BE,GAAG,EAAC;EAAM,GAAC,UAAQ,sB,gBAC1BF,mBAAA,CAA+E;IAAxEG,IAAI,EAAC,QAAQ;IAACC,EAAE,EAAC,MAAM;IAPpC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAO8CC,KAAA,CAAAC,GAAG,GAAAF,MAAA;IAAEG,GAAG,EAAC,GAAG;IAACC,WAAW,EAAC;iDAAzBH,KAAA,CAAAC,GAAG,E,GAC3CR,mBAAA,CAA8C;IAArCW,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;KAAE,IAAE,E,GAGvCX,mBAAA,qBAAwB,EACxBD,mBAAA,CAA4D;IAAnDW,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAE,qBAAA,IAAAF,QAAA,CAAAE,qBAAA,IAAAH,IAAA,CAAqB;KAAE,cAAY,GAEnDX,mBAAA,cAAiB,EACjBD,mBAAA,CAyBQ,gB,0BAxBNA,mBAAA,CAWQ,gBAVNA,mBAAA,CASK,aARHA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGfA,mBAAA,CAWQ,iB,kBAVND,mBAAA,CASKiB,SAAA,QAtCbC,WAAA,CA6B8BV,KAAA,CAAAW,YAAY,EAAvBC,OAAO;yBAAlBpB,mBAAA,CASK;MATgCqB,GAAG,EAAED,OAAO,CAACE;QAChDrB,mBAAA,CAA0B,YAAAsB,gBAAA,CAAnBH,OAAO,CAACI,GAAG,kBAClBvB,mBAAA,CAA6B,YAAAsB,gBAAA,CAAtBH,OAAO,CAACK,MAAM,kBACrBxB,mBAAA,CAAiC,YAAAsB,gBAAA,CAA1BH,OAAO,CAACM,UAAU,kBACzBzB,mBAAA,CAA8B,YAAAsB,gBAAA,CAAvBH,OAAO,CAACO,OAAO,kBACtB1B,mBAAA,CAA0B,YAAAsB,gBAAA,CAAnBH,OAAO,CAACQ,GAAG,kBAClB3B,mBAAA,CAA6B,YAAAsB,gBAAA,CAAtBH,OAAO,CAACS,MAAM,kBACrB5B,mBAAA,CAA2B,YAAAsB,gBAAA,CAApBH,OAAO,CAACU,IAAI,kBACnB7B,mBAAA,CAA8B,YAAAsB,gBAAA,CAAvBH,OAAO,CAACW,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}