{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"tablespace-table\"\n};\nconst _hoisted_2 = [\"onDblclick\", \"onMouseover\"];\nconst _hoisted_3 = {\n  class: \"ts-name\"\n};\nconst _hoisted_4 = {\n  class: \"used-size\"\n};\nconst _hoisted_5 = {\n  class: \"used-size\"\n};\nconst _hoisted_6 = {\n  class: \"used-rate\"\n};\nconst _hoisted_7 = {\n  class: \"used-rate-container\"\n};\nconst _hoisted_8 = [\"id\"];\nconst _hoisted_9 = {\n  class: \"free-size\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 테이블스페이스 데이터 표시 \"), _createElementVNode(\"table\", _hoisted_1, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.sortData('id.tsName'))\n  }, \"Tablespace 이름\"), _createElementVNode(\"th\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.sortData('totalSize'))\n  }, \"TOTAL(MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.sortData('usedSize'))\n  }, \"USED(MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.sortData('usedRate'))\n  }, \"사용률 (%)\"), _createElementVNode(\"th\", {\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.sortData('freeSize'))\n  }, \"FREE(MB)\")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredTablespaces, ts => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: ts.id.tsName,\n      onDblclick: $event => _ctx.fetchRecentData(_ctx.selectedDb, ts.id.tsName),\n      onMouseover: $event => $options.drawBarChart(ts),\n      \"<!--\": \"\",\n      drawBarChart: \"\",\n      호출: \"\",\n      \"--\": \"\"\n    }, [_cache[5] || (_cache[5] = _createTextVNode(\" > \")), _createElementVNode(\"td\", _hoisted_3, _toDisplayString(ts.id.tsName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_4, _toDisplayString(_ctx.formatNumber(ts.totalSize)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_5, _toDisplayString(_ctx.formatNumber(ts.usedSize)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_6, [_createCommentVNode(\" 사용률 차트 \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"canvas\", {\n      id: 'chart-' + ts.id.tsName,\n      class: \"rate-chart\",\n      width: \"200\",\n      height: \"100\"\n    }, null, 8 /* PROPS */, _hoisted_8)])]), _createElementVNode(\"td\", _hoisted_9, _toDisplayString(_ctx.formatNumber(ts.freeSize)), 1 /* TEXT */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","_hoisted_1","onClick","_cache","$event","_ctx","sortData","_renderList","filteredTablespaces","ts","key","id","tsName","onDblclick","fetchRecentData","selectedDb","onMouseover","$options","drawBarChart","호출","_createTextVNode","_hoisted_3","_toDisplayString","_hoisted_4","formatNumber","totalSize","_hoisted_5","usedSize","_hoisted_6","_hoisted_7","width","height","_hoisted_8","_hoisted_9","freeSize","_hoisted_2"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\TablespacesList.vue"],"sourcesContent":["<template>\r\n  <!-- 테이블스페이스 데이터 표시 -->\r\n  <table class=\"tablespace-table\">\r\n    <thead>\r\n      <tr>\r\n        <th @click=\"sortData('id.tsName')\">Tablespace 이름</th>\r\n        <th @click=\"sortData('totalSize')\">TOTAL(MB)</th>\r\n        <th @click=\"sortData('usedSize')\">USED(MB)</th>\r\n        <th @click=\"sortData('usedRate')\">사용률 (%)</th>\r\n        <th @click=\"sortData('freeSize')\">FREE(MB)</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr\r\n        v-for=\"ts in filteredTablespaces\"\r\n        :key=\"ts.id.tsName\"\r\n        @dblclick=\"fetchRecentData(selectedDb, ts.id.tsName)\"\r\n        @mouseover=\"drawBarChart(ts)\"  <!-- drawBarChart 호출 -->\r\n      >\r\n        <td class=\"ts-name\">{{ ts.id.tsName }}</td>\r\n        <td class=\"used-size\">{{ formatNumber(ts.totalSize) }}</td>\r\n        <td class=\"used-size\">{{ formatNumber(ts.usedSize) }}</td>\r\n        <td class=\"used-rate\">\r\n          <!-- 사용률 차트 -->\r\n          <div class=\"used-rate-container\">\r\n            <canvas :id=\"'chart-' + ts.id.tsName\" class=\"rate-chart\" width=\"200\" height=\"100\"></canvas>\r\n          </div>\r\n        </td>\r\n        <td class=\"free-size\">{{ formatNumber(ts.freeSize) }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 기타 데이터들\r\n      chartInstances: {}, // 차트 인스턴스를 저장할 객체\r\n    };\r\n  },\r\n  methods: {\r\n    drawBarChart(ts) {\r\n      const canvasId = 'chart-' + ts.id.tsName;  // 각 테이블스페이스에 대해 고유한 ID 설정\r\n      const ctx = document.getElementById(canvasId).getContext('2d');\r\n\r\n      // 기존 차트가 있으면 파괴\r\n      if (this.chartInstances[ts.id.tsName]) {\r\n        this.chartInstances[ts.id.tsName].destroy();\r\n      }\r\n\r\n      // 새 차트 생성\r\n      this.chartInstances[ts.id.tsName] = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['사용률'], // 차트 레이블\r\n          datasets: [{\r\n            label: '사용률',\r\n            data: [ts.usedRate], // 사용률 데이터\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)', // 배경 색상\r\n            borderColor: 'rgb(75, 192, 192)', // 테두리 색상\r\n            borderRadius: 1,  // 모서리 둥글게\r\n            borderWidth: 1,   // 테두리 두께\r\n          }],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          indexAxis: 'y',  // 가로 차트\r\n          scales: {\r\n            x: {\r\n              min: 0,\r\n              max: 100,  // 100%까지 표시\r\n              ticks: {\r\n                display: false,  // 0과 100을 숨깁니다.\r\n              },\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n              display: false,  // Y축 표시 안 함\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,  // 범례 숨기기\r\n            },\r\n            datalabels: {\r\n              // 실제 사용률 값 표시 (바 오른쪽에)\r\n              display: true,\r\n              align: 'end',  // 바의 끝 부분에 텍스트 표시\r\n              anchor: 'end', // 텍스트가 바 끝에 앵커가 맞도록\r\n              formatter: (value) => `${value}%`,  // 사용률 값에 \"%\" 추가\r\n              color: 'rgb(75, 192, 192)', // 텍스트 색상\r\n              font: {\r\n                weight: 'bold',\r\n                size: 14,\r\n              },\r\n            },\r\n          },\r\n        },\r\n        plugins: [ChartDataLabels], // 플러그인 적용\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 기본 설정 */\r\n.container {\r\n  font-family: 'Arial', sans-serif;\r\n  padding: 40px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n}\r\n\r\nh2 {\r\n  color: #333;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 드롭다운 및 검색 필드 스타일 */\r\n.select-container, .search-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\nselect, .search-input {\r\n  padding: 12px 18px;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\nselect:focus, .search-input:focus {\r\n  outline: none;\r\n  border-color: #4caf50;\r\n  box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);\r\n}\r\n\r\n/* 테이블 스타일 */\r\n.tablespace-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 40px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.tablespace-table th, .tablespace-table td {\r\n  padding: 14px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.tablespace-table th {\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.tablespace-table td {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.tablespace-table td.used-rate {\r\n  width: 80px; /* 고정 너비 설정 */\r\n  text-align: center;\r\n}\r\n\r\n.tablespace-table td.free-size, .tablespace-table td.used-size {\r\n  text-align: right;\r\n}\r\n\r\n.tablespace-table tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.no-data-message {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  color: #f44336;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 모달 오버레이 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  padding: 20px;\r\n}\r\n\r\n/* 모달 내용 */\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 1000px;\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nbutton {\r\n  padding: 12px 20px;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\nbutton.close-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\nbutton.close-btn:hover {\r\n  background-color: #e53935;\r\n}\r\n\r\nbutton.chart-btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\nbutton.chart-btn:hover {\r\n  background-color: #388e3c;\r\n}\r\n\r\n/* 최근 데이터 테이블 */\r\n.recent-data-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.recent-data-table th, .recent-data-table td {\r\n  padding: 12px;\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.recent-data-table th {\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  font-weight: 600;\r\n}\r\n\r\n.recent-data-table td {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n/* 차트 스타일 */\r\n.chart-container {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.used-rate-container {\r\n  width: 100%; /* 컨테이너 너비 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.rate-chart {\r\n  max-width: 120px; /* 차트 너비 확장 */\r\n  max-height: 60px; /* 차트 높이 확장 */\r\n  width: 100%; /* 반응형 크기 */\r\n  height: auto;\r\n}\r\n\r\n/* 화면 반응형 스타일 */\r\n@media (max-width: 768px) {\r\n  .container {\r\n    padding: 20px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .select-container, .search-container {\r\n    flex-direction: column;\r\n  }\r\n\r\n  select, .search-input {\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n  }\r\n\r\n  .tablespace-table th, .tablespace-table td {\r\n    padding: 10px;\r\n    font-size: 13px;\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 400px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.modal-content h3 {\r\n  margin-top: 0;\r\n}\r\n\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.chart-btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.close-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n</style>\r\n\r\n\r\n"],"mappings":";;EAESA,KAAK,EAAC;AAAkB;mBAFjC;;EAmBYA,KAAK,EAAC;AAAS;;EACfA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAqB;mBAxB1C;;EA4BYA,KAAK,EAAC;AAAW;;uBA5B7BC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,oBAAuB,EACvBC,mBAAA,CA6BQ,SA7BRC,UA6BQ,GA5BND,mBAAA,CAQQ,gBAPNA,mBAAA,CAMK,aALHA,mBAAA,CAAqD;IAAhDE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,QAAQ;KAAe,eAAa,GAChDN,mBAAA,CAAiD;IAA5CE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,QAAQ;KAAe,WAAS,GAC5CN,mBAAA,CAA+C;IAA1CE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,QAAQ;KAAc,UAAQ,GAC1CN,mBAAA,CAA8C;IAAzCE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,QAAQ;KAAc,SAAO,GACzCN,mBAAA,CAA+C;IAA1CE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,QAAQ;KAAc,UAAQ,E,KAG9CN,mBAAA,CAkBQ,iB,kBAjBNH,mBAAA,CAgBKC,SAAA,QA7BXS,WAAA,CAcqBF,IAAA,CAAAG,mBAAmB,EAAzBC,EAAE;yBADXZ,mBAAA,CAgBK;MAdFa,GAAG,EAAED,EAAE,CAACE,EAAE,CAACC,MAAM;MACjBC,UAAQ,EAAAT,MAAA,IAAEC,IAAA,CAAAS,eAAe,CAACT,IAAA,CAAAU,UAAU,EAAEN,EAAE,CAACE,EAAE,CAACC,MAAM;MAClDI,WAAS,EAAAZ,MAAA,IAAEa,QAAA,CAAAC,YAAY,CAACT,EAAE;MAAI,MAAI,EAAJ,EAAI;MAACS,YAAY,EAAZ,EAAY;MAACC,EAAE,EAAF,EAAE;MAAC,IAAE,EAAF;kCAjB5DC,gBAAA,CAiB+D,KAEvD,IAAApB,mBAAA,CAA2C,MAA3CqB,UAA2C,EAAAC,gBAAA,CAApBb,EAAE,CAACE,EAAE,CAACC,MAAM,kBACnCZ,mBAAA,CAA2D,MAA3DuB,UAA2D,EAAAD,gBAAA,CAAlCjB,IAAA,CAAAmB,YAAY,CAACf,EAAE,CAACgB,SAAS,mBAClDzB,mBAAA,CAA0D,MAA1D0B,UAA0D,EAAAJ,gBAAA,CAAjCjB,IAAA,CAAAmB,YAAY,CAACf,EAAE,CAACkB,QAAQ,mBACjD3B,mBAAA,CAKK,MALL4B,UAKK,GAJH7B,mBAAA,YAAe,EACfC,mBAAA,CAEM,OAFN6B,UAEM,GADJ7B,mBAAA,CAA2F;MAAlFW,EAAE,aAAaF,EAAE,CAACE,EAAE,CAACC,MAAM;MAAEhB,KAAK,EAAC,YAAY;MAACkC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;4BAzBxFC,UAAA,E,KA4BQhC,mBAAA,CAA0D,MAA1DiC,UAA0D,EAAAX,gBAAA,CAAjCjB,IAAA,CAAAmB,YAAY,CAACf,EAAE,CAACyB,QAAQ,kB,kCA5BzDC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}