{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"임계치 리스트\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"DB 이름\"), _createElementVNode(\"th\", null, \"Tablespace\"), _createElementVNode(\"th\", null, \"임계치 (MB)\"), _createElementVNode(\"th\", null, \"DB 타입\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.data, (threshold, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(threshold.dbName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(threshold.tablespaceName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(threshold.thresMb), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(threshold.dbType), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","_ctx","data","threshold","index","key","_toDisplayString","dbName","tablespaceName","thresMb","dbType"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\ThresholdList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>임계치 리스트</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>DB 이름</th>\r\n          <th>Tablespace</th>\r\n          <th>임계치 (MB)</th>\r\n          <th>DB 타입</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(threshold, index) in data\" :key=\"index\">\r\n          <td>{{ threshold.dbName }}</td>\r\n          <td>{{ threshold.tablespaceName }}</td>\r\n          <td>{{ threshold.thresMb }}</td>\r\n          <td>{{ threshold.dbType }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    data: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  }\r\nmounted() {\r\n      // 컴포넌트가 마운트된 후에 API 호출\r\n      axios\r\n        .get(\"http://localhost:8080/api/threshold/all\")  // Spring Boot API 호출\r\n        .then((response) => {\r\n          console.log('--------------threshold console data log--------------');  // 콘솔에서 데이터 확인\r\n          console.log(response.data);  // 콘솔에서 데이터 확인\r\n          this.dbList = response.data; // dbList에 데이터 할당\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"API 호출 오류:\", error); // 오류 처리\r\n        });\r\n    }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  color: #FF5722;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n</style>"],"mappings":";;uBACEA,mBAAA,CAoBM,c,0BAnBJC,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAiBQ,gB,0BAhBNA,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAc,YAAV,OAAK,E,wBAGbA,mBAAA,CAOQ,iB,kBANND,mBAAA,CAKKE,SAAA,QAlBbC,WAAA,CAayCC,IAAA,CAAAC,IAAI,EAb7C,CAaoBC,SAAS,EAAEC,KAAK;yBAA5BP,mBAAA,CAKK;MALmCQ,GAAG,EAAED;IAAK,IAChDN,mBAAA,CAA+B,YAAAQ,gBAAA,CAAxBH,SAAS,CAACI,MAAM,kBACvBT,mBAAA,CAAuC,YAAAQ,gBAAA,CAAhCH,SAAS,CAACK,cAAc,kBAC/BV,mBAAA,CAAgC,YAAAQ,gBAAA,CAAzBH,SAAS,CAACM,OAAO,kBACxBX,mBAAA,CAA+B,YAAAQ,gBAAA,CAAxBH,SAAS,CAACO,MAAM,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}