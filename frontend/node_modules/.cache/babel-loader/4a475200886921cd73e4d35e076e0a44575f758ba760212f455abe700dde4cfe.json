{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $setup.handleLogin && $setup.handleLogin(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    placeholder: \"Username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.password = $event),\n    type: \"password\",\n    placeholder: \"Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"로그인\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$setup","handleLogin","$event","username","placeholder","password","type"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"handleLogin\">\r\n      <input v-model=\"username\" placeholder=\"Username\" />\r\n      <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\r\n      <button type=\"submit\">로그인</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useAuthStore } from '@/stores/authStore'\r\n\r\nexport default {\r\n  name: 'UserLogin',\r\n  setup() {\r\n    const username = ref('')\r\n    const password = ref('')\r\n    const authStore = useAuthStore()\r\n\r\n    const handleLogin = async () => {\r\n      const success = await authStore.login(username.value, password.value)\r\n      if (success) {\r\n        this.$router.push('/main')  // 로그인 성공 시 메인 페이지로 이동\r\n      } else {\r\n        alert('로그인 실패')\r\n      }\r\n    }\r\n\r\n    return { username, password, handleLogin }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;uBACEA,mBAAA,CAMM,cALJC,mBAAA,CAIO;IAJAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFjBC,cAAA,KAAAC,IAAA,KAE2BC,MAAA,CAAAC,WAAA,IAAAD,MAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;sBAChCJ,mBAAA,CAAmD;IAHzD,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAGsBF,MAAA,CAAAG,QAAQ,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAtBJ,MAAA,CAAAG,QAAQ,E,mBACxBR,mBAAA,CAAmE;IAJzE,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAIsBF,MAAA,CAAAK,QAAQ,GAAAH,MAAA;IAAEI,IAAI,EAAC,UAAU;IAACF,WAAW,EAAC;iDAAtCJ,MAAA,CAAAK,QAAQ,E,6BACxBV,mBAAA,CAAkC;IAA1BW,IAAI,EAAC;EAAQ,GAAC,KAAG,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}