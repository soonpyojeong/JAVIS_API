{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withKeys as _withKeys } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mx-auto p-4\"\n};\nconst _hoisted_2 = {\n  class: \"mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"overflow-x-auto\"\n};\nconst _hoisted_4 = {\n  class: \"min-w-full bg-white border border-gray-200 rounded-lg shadow-md\"\n};\nconst _hoisted_5 = {\n  class: \"bg-gray-50\"\n};\nconst _hoisted_6 = {\n  class: \"px-4 py-2 text-sm text-gray-700\"\n};\nconst _hoisted_7 = {\n  class: \"px-4 py-2 text-sm text-gray-700\"\n};\nconst _hoisted_8 = {\n  class: \"px-4 py-2 text-sm text-gray-700 text-right\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onUpdate:modelValue\", \"onKeyup\", \"onBlur\"];\nconst _hoisted_11 = {\n  class: \"px-4 py-2 text-sm text-gray-700\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"mt-4 text-sm text-gray-500\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-bold text-orange-600 mb-4\"\n  }, \"임계치 리스트\", -1 /* HOISTED */)), _createCommentVNode(\" 검색 입력 필드 \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"DB 이름 또는 Tablespace 검색\",\n    class: \"w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]])]), _createCommentVNode(\" 테이블 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"table\", _hoisted_4, [_createElementVNode(\"thead\", _hoisted_5, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-sm font-semibold text-gray-600 cursor-pointer hover:bg-gray-100\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.sortData('dbName'))\n  }, \" DB 이름 \"), _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-sm font-semibold text-gray-600 cursor-pointer hover:bg-gray-100\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.sortData('tablespaceName'))\n  }, \" Tablespace \"), _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-right text-sm font-semibold text-gray-600 cursor-pointer hover:bg-gray-100\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.sortData('thresMb'))\n  }, \" 임계치 (MB) \"), _createElementVNode(\"th\", {\n    class: \"px-4 py-2 text-left text-sm font-semibold text-gray-600 cursor-pointer hover:bg-gray-100\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.sortData('dbType'))\n  }, \" DB 타입 \")])]), _createElementVNode(\"tbody\", null, [_createCommentVNode(\" 필터링된 데이터를 표시 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredData, (threshold, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index,\n      class: \"hover:bg-gray-50\"\n    }, [_createElementVNode(\"td\", _hoisted_6, _toDisplayString(threshold.dbName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_7, _toDisplayString(threshold.tablespaceName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_8, [_createCommentVNode(\" 클릭하면 인라인 편집 가능 \"), !threshold.isEditing ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      onClick: $event => $options.startEditing(threshold),\n      class: \"cursor-pointer text-orange-500 hover:underline\"\n    }, _toDisplayString($options.formatNumber(threshold.thresMb)), 9 /* TEXT, PROPS */, _hoisted_9)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      \"onUpdate:modelValue\": $event => threshold.editedValue = $event,\n      onKeyup: _withKeys($event => $options.updateThreshold(threshold), [\"enter\"]),\n      onBlur: $event => $options.cancelEditing(threshold),\n      type: \"number\",\n      class: \"w-20 p-1 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_10)), [[_vModelText, threshold.editedValue]])]), _createElementVNode(\"td\", _hoisted_11, _toDisplayString(threshold.dbType), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]), $options.filteredData.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_12, \"검색 결과가 없습니다.\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_cache","$event","$data","searchQuery","type","placeholder","_hoisted_3","_hoisted_4","_hoisted_5","onClick","$options","sortData","_Fragment","_renderList","filteredData","threshold","index","_hoisted_6","_toDisplayString","dbName","_hoisted_7","tablespaceName","_hoisted_8","isEditing","startEditing","formatNumber","thresMb","_hoisted_9","editedValue","onKeyup","_withKeys","updateThreshold","onBlur","cancelEditing","_hoisted_10","_hoisted_11","dbType","length","_hoisted_12"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\ThresholdList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto p-4\">\r\n    <h2 class=\"text-2xl font-bold text-orange-600 mb-4\">임계치 리스트</h2>\r\n\r\n    <!-- 검색 입력 필드 -->\r\n    <div class=\"mb-4\">\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"DB 이름 또는 Tablespace 검색\"\r\n        class=\"w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 테이블 -->\r\n    <div class=\"overflow-x-auto\">\r\n      <table class=\"min-w-full bg-white border border-gray-200 rounded-lg shadow-md\">\r\n        <thead class=\"bg-gray-50\">\r\n          <tr>\r\n            <th\r\n              class=\"px-4 py-2 text-left text-sm font-semibold text-gray-600 cursor-pointer hover:bg-gray-100\"\r\n              @click=\"sortData('dbName')\"\r\n            >\r\n              DB 이름\r\n            </th>\r\n            <th\r\n              class=\"px-4 py-2 text-left text-sm font-semibold text-gray-600 cursor-pointer hover:bg-gray-100\"\r\n              @click=\"sortData('tablespaceName')\"\r\n            >\r\n              Tablespace\r\n            </th>\r\n            <th\r\n              class=\"px-4 py-2 text-right text-sm font-semibold text-gray-600 cursor-pointer hover:bg-gray-100\"\r\n              @click=\"sortData('thresMb')\"\r\n            >\r\n              임계치 (MB)\r\n            </th>\r\n            <th\r\n              class=\"px-4 py-2 text-left text-sm font-semibold text-gray-600 cursor-pointer hover:bg-gray-100\"\r\n              @click=\"sortData('dbType')\"\r\n            >\r\n              DB 타입\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <!-- 필터링된 데이터를 표시 -->\r\n          <tr\r\n            v-for=\"(threshold, index) in filteredData\"\r\n            :key=\"index\"\r\n            class=\"hover:bg-gray-50\"\r\n          >\r\n            <td class=\"px-4 py-2 text-sm text-gray-700\">{{ threshold.dbName }}</td>\r\n            <td class=\"px-4 py-2 text-sm text-gray-700\">{{ threshold.tablespaceName }}</td>\r\n            <td class=\"px-4 py-2 text-sm text-gray-700 text-right\">\r\n              <!-- 클릭하면 인라인 편집 가능 -->\r\n              <span\r\n                v-if=\"!threshold.isEditing\"\r\n                @click=\"startEditing(threshold)\"\r\n                class=\"cursor-pointer text-orange-500 hover:underline\"\r\n              >\r\n                {{ formatNumber(threshold.thresMb) }}\r\n              </span>\r\n              <input\r\n                v-else\r\n                v-model=\"threshold.editedValue\"\r\n                @keyup.enter=\"updateThreshold(threshold)\"\r\n                @blur=\"cancelEditing(threshold)\"\r\n                type=\"number\"\r\n                class=\"w-20 p-1 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n              />\r\n            </td>\r\n            <td class=\"px-4 py-2 text-sm text-gray-700\">{{ threshold.dbType }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <p v-if=\"filteredData.length === 0\" class=\"mt-4 text-sm text-gray-500\">검색 결과가 없습니다.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      thresholds: [], // 원본 데이터\r\n      searchQuery: \"\", // 검색어 입력값\r\n      sortBy: \"\", // 정렬 기준\r\n      sortOrder: \"asc\", // 정렬 방향 (오름차순 또는 내림차순)\r\n    };\r\n  },\r\n  computed: {\r\n    // 검색어에 따라 필터링된 데이터를 반환\r\n    filteredData() {\r\n      const query = this.searchQuery.toLowerCase();\r\n      const filtered = this.thresholds.filter((threshold) => {\r\n        return (\r\n          threshold.dbName.toLowerCase().includes(query) ||\r\n          threshold.tablespaceName.toLowerCase().includes(query)\r\n        );\r\n      });\r\n\r\n      // 정렬된 데이터를 반환\r\n      return this.sortDataBy(filtered);\r\n    },\r\n  },\r\n  methods: {\r\n    // 숫자 1000단위로 구분\r\n    formatNumber(number) {\r\n      return number.toLocaleString(); // 천 단위 구분 기호 추가\r\n    },\r\n\r\n    // 편집 시작\r\n    startEditing(threshold) {\r\n      threshold.isEditing = true;\r\n      threshold.editedValue = threshold.thresMb; // 원본 값 저장\r\n    },\r\n    // 편집 취소\r\n    cancelEditing(threshold) {\r\n      threshold.isEditing = false;\r\n      threshold.editedValue = null;\r\n    },\r\n    // 임계치 업데이트\r\n    updateThreshold(threshold) {\r\n      const updatedThreshold = {\r\n        id: threshold.id, // ID가 필요\r\n        thresMb: threshold.editedValue,\r\n      };\r\n\r\n      // 서버에 PUT 요청\r\n      axios\r\n        .put(`http://10.90.4.60:8080/api/threshold/${updatedThreshold.id}`, updatedThreshold)\r\n        .then((response) => {\r\n          if (response.data) {\r\n            // 로컬 데이터 업데이트 및 편집 종료\r\n            threshold.thresMb = threshold.editedValue;\r\n            threshold.isEditing = false;\r\n          } else {\r\n            console.error(\"임계치 업데이트 실패\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"임계치 업데이트 오류:\", error);\r\n        });\r\n    },\r\n\r\n    // 테이블 정렬\r\n    sortData(column) {\r\n      if (this.sortBy === column) {\r\n        // 이미 같은 컬럼을 클릭했으면 정렬 방향을 바꿔줌\r\n        this.sortOrder = this.sortOrder === \"asc\" ? \"desc\" : \"asc\";\r\n      } else {\r\n        this.sortBy = column;\r\n        this.sortOrder = \"asc\"; // 새 컬럼이 선택되면 오름차순으로 기본 설정\r\n      }\r\n    },\r\n\r\n    // 데이터 정렬 로직\r\n    sortDataBy(data) {\r\n      return data.sort((a, b) => {\r\n        let valA = a[this.sortBy];\r\n        let valB = b[this.sortBy];\r\n\r\n        // 숫자 정렬인 경우\r\n        if (typeof valA === \"number\" && typeof valB === \"number\") {\r\n          return this.sortOrder === \"asc\" ? valA - valB : valB - valA;\r\n        }\r\n\r\n        // 문자열 정렬인 경우\r\n        if (typeof valA === \"string\" && typeof valB === \"string\") {\r\n          return this.sortOrder === \"asc\"\r\n            ? valA.localeCompare(valB)\r\n            : valB.localeCompare(valA);\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    // API 호출\r\n    axios\r\n      .get(\"http://10.90.4.60:8080/api/threshold/all\")\r\n      .then((response) => {\r\n        this.thresholds = response.data.map((threshold) => ({\r\n          ...threshold,\r\n          isEditing: false, // 각 데이터에 편집 상태 추가\r\n          editedValue: null, // 편집 상태 초기화\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 공통 스타일 */\r\n.container {\r\n  font-family: 'Roboto', sans-serif;\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: #FF5722;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #FF5722;\r\n  box-shadow: 0 0 5px rgba(255, 87, 34, 0.5);\r\n}\r\n\r\n/* 검색 필드 */\r\ninput {\r\n  font-size: 1rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 10px 14px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #FF5722;\r\n  box-shadow: 0 0 6px rgba(255, 87, 34, 0.5);\r\n}\r\n\r\n/* 테이블 */\r\ntable {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nth,\r\ntd {\r\n  padding: 14px;\r\n  border: 1px solid #ddd;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #FFEBEE;\r\n  color: #d32f2f;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n}\r\n\r\nth:hover {\r\n  background-color: #FFCDD2;\r\n}\r\n\r\ntd {\r\n  font-size: 0.9rem;\r\n  color: #555;\r\n}\r\n\r\ntd:hover {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n/* 임계치 필드 스타일 */\r\ntd span {\r\n  cursor: pointer;\r\n  color: #FF5722;\r\n}\r\n\r\ntd span:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\ninput[type=\"number\"] {\r\n  padding: 6px;\r\n  font-size: 0.9rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\ninput[type=\"number\"]:focus {\r\n  border-color: #FF5722;\r\n  box-shadow: 0 0 4px rgba(255, 87, 34, 0.5);\r\n}\r\n\r\n/* 반응형 스타일 */\r\n@media (max-width: 768px) {\r\n  .container {\r\n    padding: 16px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  table {\r\n    font-size: 0.85rem;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding: 10px;\r\n  }\r\n\r\n  input {\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n\r\n.db-table th:nth-child(11),\r\n.db-table td:nth-child(11) {\r\n  width: 3%; /* DB 이름 열 너비 설정 */\r\n}\r\n</style>\r\n\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAuB;;EAI3BA,KAAK,EAAC;AAAM;;EAUZA,KAAK,EAAC;AAAiB;;EACnBA,KAAK,EAAC;AAAiE;;EACrEA,KAAK,EAAC;AAAY;;EAmCjBA,KAAK,EAAC;AAAiC;;EACvCA,KAAK,EAAC;AAAiC;;EACvCA,KAAK,EAAC;AAA4C;mBAtDlE;oBAAA;;EAwEgBA,KAAK,EAAC;AAAiC;;EAxEvDC,GAAA;EA8EwCD,KAAK,EAAC;;;uBA7E5CE,mBAAA,CA8EM,OA9ENC,UA8EM,G,0BA7EJC,mBAAA,CAAgE;IAA5DJ,KAAK,EAAC;EAAyC,GAAC,SAAO,sBAE3DK,mBAAA,cAAiB,EACjBD,mBAAA,CAOM,OAPNE,UAOM,G,gBANJF,mBAAA,CAKE;IAXR,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOiBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,wBAAwB;IACpCZ,KAAK,EAAC;iDAHGS,KAAA,CAAAC,WAAW,E,KAOxBL,mBAAA,SAAY,EACZD,mBAAA,CA6DM,OA7DNS,UA6DM,GA5DJT,mBAAA,CA2DQ,SA3DRU,UA2DQ,GA1DNV,mBAAA,CA2BQ,SA3BRW,UA2BQ,GA1BNX,mBAAA,CAyBK,aAxBHA,mBAAA,CAKK;IAJHJ,KAAK,EAAC,0FAA0F;IAC/FgB,OAAK,EAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAES,QAAA,CAAAC,QAAQ;KACjB,SAED,GACAd,mBAAA,CAKK;IAJHJ,KAAK,EAAC,0FAA0F;IAC/FgB,OAAK,EAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAES,QAAA,CAAAC,QAAQ;KACjB,cAED,GACAd,mBAAA,CAKK;IAJHJ,KAAK,EAAC,2FAA2F;IAChGgB,OAAK,EAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAES,QAAA,CAAAC,QAAQ;KACjB,YAED,GACAd,mBAAA,CAKK;IAJHJ,KAAK,EAAC,0FAA0F;IAC/FgB,OAAK,EAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAES,QAAA,CAAAC,QAAQ;KACjB,SAED,E,KAGJd,mBAAA,CA6BQ,gBA5BNC,mBAAA,kBAAqB,G,kBACrBH,mBAAA,CA0BKiB,SAAA,QAzEfC,WAAA,CAgDyCH,QAAA,CAAAI,YAAY,EAhDrD,CAgDoBC,SAAS,EAAEC,KAAK;yBAD1BrB,mBAAA,CA0BK;MAxBFD,GAAG,EAAEsB,KAAK;MACXvB,KAAK,EAAC;QAENI,mBAAA,CAAuE,MAAvEoB,UAAuE,EAAAC,gBAAA,CAAxBH,SAAS,CAACI,MAAM,kBAC/DtB,mBAAA,CAA+E,MAA/EuB,UAA+E,EAAAF,gBAAA,CAAhCH,SAAS,CAACM,cAAc,kBACvExB,mBAAA,CAiBK,MAjBLyB,UAiBK,GAhBHxB,mBAAA,oBAAuB,E,CAEdiB,SAAS,CAACQ,SAAS,I,cAD5B5B,mBAAA,CAMO;MA9DrBD,GAAA;MA0DiBe,OAAK,EAAAR,MAAA,IAAES,QAAA,CAAAc,YAAY,CAACT,SAAS;MAC9BtB,KAAK,EAAC;wBAEHiB,QAAA,CAAAe,YAAY,CAACV,SAAS,CAACW,OAAO,yBA7DjDC,UAAA,K,+BA+DchC,mBAAA,CAOE;MAtEhBD,GAAA;MAAA,uBAAAO,MAAA,IAiEyBc,SAAS,CAACa,WAAW,GAAA3B,MAAA;MAC7B4B,OAAK,EAlEtBC,SAAA,CAAA7B,MAAA,IAkE8BS,QAAA,CAAAqB,eAAe,CAAChB,SAAS;MACtCiB,MAAI,EAAA/B,MAAA,IAAES,QAAA,CAAAuB,aAAa,CAAClB,SAAS;MAC9BX,IAAI,EAAC,QAAQ;MACbX,KAAK,EAAC;6CArEtByC,WAAA,K,cAiEyBnB,SAAS,CAACa,WAAW,E,KAOlC/B,mBAAA,CAAuE,MAAvEsC,WAAuE,EAAAjB,gBAAA,CAAxBH,SAAS,CAACqB,MAAM,iB;wCAM9D1B,QAAA,CAAAI,YAAY,CAACuB,MAAM,U,cAA5B1C,mBAAA,CAAuF,KAAvF2C,WAAuF,EAAhB,cAAY,KA9EvFxC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}