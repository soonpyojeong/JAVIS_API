{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"tabs\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"db-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Line = _resolveComponent(\"Line\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 상단 DB 타입 선택 \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.dbType === 'ORACLE'\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.dbType = 'ORACLE')\n  }, \"ORACLE\", 2 /* CLASS */), _createElementVNode(\"button\", {\n    class: _normalizeClass({\n      active: $setup.dbType === 'TIBERO'\n    }),\n    onClick: _cache[1] || (_cache[1] = $event => $setup.dbType = 'TIBERO')\n  }, \"TIBERO\", 2 /* CLASS */)]), _createCommentVNode(\" ORACLE 선택 시 DB 목록 표시 \"), $setup.dbType === 'ORACLE' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dbList, db => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: db,\n      onClick: $event => $setup.selectedDB = db,\n      class: _normalizeClass({\n        active: $setup.selectedDB === db\n      })\n    }, _toDisplayString(db), 11 /* TEXT, CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" DB 선택 시 차트 표시 \"), $setup.selectedDB ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, _toDisplayString($setup.selectedDB) + \" - Performance Metrics\", 1 /* TEXT */), _createVNode(_component_Line, {\n    data: $setup.chartData,\n    options: $setup.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createCommentVNode","_createElementVNode","_hoisted_1","_normalizeClass","active","$setup","dbType","onClick","_cache","$event","_hoisted_2","_Fragment","_renderList","dbList","db","selectedDB","_hoisted_3","_hoisted_4","_toDisplayString","_createVNode","_component_Line","data","chartData","options","chartOptions"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DailyChk.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 상단 DB 타입 선택 -->\r\n    <div class=\"tabs\">\r\n      <button :class=\"{ active: dbType === 'ORACLE' }\" @click=\"dbType = 'ORACLE'\">ORACLE</button>\r\n      <button :class=\"{ active: dbType === 'TIBERO' }\" @click=\"dbType = 'TIBERO'\">TIBERO</button>\r\n    </div>\r\n\r\n    <!-- ORACLE 선택 시 DB 목록 표시 -->\r\n    <div v-if=\"dbType === 'ORACLE'\" class=\"db-list\">\r\n      <button v-for=\"db in dbList\" :key=\"db\" @click=\"selectedDB = db\" :class=\"{ active: selectedDB === db }\">\r\n        {{ db }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- DB 선택 시 차트 표시 -->\r\n    <div v-if=\"selectedDB\" class=\"chart-container\">\r\n      <h3>{{ selectedDB }} - Performance Metrics</h3>\r\n      <Line :data=\"chartData\" :options=\"chartOptions\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { Line } from 'vue-chartjs';\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  LineElement,\r\n  PointElement,\r\n  CategoryScale,\r\n  LinearScale\r\n} from 'chart.js';\r\n\r\nChartJS.register(Title, Tooltip, Legend, LineElement, PointElement, CategoryScale, LinearScale);\r\n\r\nexport default {\r\n  components: { Line },\r\n  setup() {\r\n    const dbType = ref('ORACLE');\r\n    const selectedDB = ref(null);\r\n    const dbList = ref(['DB1', 'DB2', 'DB3']);\r\n    const chartData = ref({\r\n      labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00'],\r\n      datasets: [\r\n        {\r\n          label: 'TRANSACTIONS',\r\n          data: [30, 50, 40, 60, 80, 70],\r\n          borderColor: 'blue',\r\n          fill: false,\r\n        }\r\n      ]\r\n    });\r\n\r\n    const chartOptions = ref({\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: 'top',\r\n        },\r\n      },\r\n    });\r\n\r\n    return {\r\n      dbType,\r\n      selectedDB,\r\n      dbList,\r\n      chartData,\r\n      chartOptions\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.tabs {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n.tabs button {\r\n  padding: 10px;\r\n  border: none;\r\n  background: #ddd;\r\n  cursor: pointer;\r\n}\r\n.tabs button.active {\r\n  background: #007bff;\r\n  color: white;\r\n}\r\n.db-list {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n.db-list button {\r\n  padding: 10px;\r\n  border: none;\r\n  background: #f0f0f0;\r\n  cursor: pointer;\r\n}\r\n.db-list button.active {\r\n  background: #28a745;\r\n  color: white;\r\n}\r\n.chart-container {\r\n  margin-top: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAM;;EAHrBC,GAAA;EASoCD,KAAK,EAAC;;mBAT1C;;EAAAC,GAAA;EAgB2BD,KAAK,EAAC;;;;uBAf/BE,mBAAA,CAmBM,cAlBJC,mBAAA,iBAAoB,EACpBC,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAA2F;IAAlFJ,KAAK,EAJpBM,eAAA;MAAAC,MAAA,EAIgCC,MAAA,CAAAC,MAAM;IAAA;IAAkBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAC,MAAM;KAAa,QAAM,kBAClFL,mBAAA,CAA2F;IAAlFJ,KAAK,EALpBM,eAAA;MAAAC,MAAA,EAKgCC,MAAA,CAAAC,MAAM;IAAA;IAAkBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,MAAA,CAAAC,MAAM;KAAa,QAAM,iB,GAGpFN,mBAAA,0BAA6B,EAClBK,MAAA,CAAAC,MAAM,iB,cAAjBP,mBAAA,CAIM,OAJNW,UAIM,I,kBAHJX,mBAAA,CAESY,SAAA,QAZfC,WAAA,CAU2BP,MAAA,CAAAQ,MAAM,EAAZC,EAAE;yBAAjBf,mBAAA,CAES;MAFqBD,GAAG,EAAEgB,EAAE;MAAGP,OAAK,EAAAE,MAAA,IAAEJ,MAAA,CAAAU,UAAU,GAAGD,EAAE;MAAGjB,KAAK,EAV5EM,eAAA;QAAAC,MAAA,EAUwFC,MAAA,CAAAU,UAAU,KAAKD;MAAE;wBAC9FA,EAAE,gCAXbE,UAAA;sCAAAhB,mBAAA,gBAeIA,mBAAA,mBAAsB,EACXK,MAAA,CAAAU,UAAU,I,cAArBhB,mBAAA,CAGM,OAHNkB,UAGM,GAFJhB,mBAAA,CAA+C,YAAAiB,gBAAA,CAAxCb,MAAA,CAAAU,UAAU,IAAG,wBAAsB,iBAC1CI,YAAA,CAAkDC,eAAA;IAA3CC,IAAI,EAAEhB,MAAA,CAAAiB,SAAS;IAAGC,OAAO,EAAElB,MAAA,CAAAmB;oDAlBxCxB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}