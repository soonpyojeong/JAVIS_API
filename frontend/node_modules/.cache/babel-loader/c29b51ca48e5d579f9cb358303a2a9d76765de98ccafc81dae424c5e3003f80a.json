{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"db-list-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"db-table\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"DB 리스트\", -1 /* HOISTED */)), $data.dbList.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"자산\"), _createElementVNode(\"th\", null, \"설명\"), _createElementVNode(\"th\", null, \"호스트\"), _createElementVNode(\"th\", null, \"PubIP\"), _createElementVNode(\"th\", null, \"VIP\"), _createElementVNode(\"th\", null, \"DB 타입\"), _createElementVNode(\"th\", null, \"DB 이름\"), _createElementVNode(\"th\", null, \"생사관제\"), _createElementVNode(\"th\", null, \"TBS수집\"), _createElementVNode(\"th\", null, \"Sybase 트랜잭션\"), _createElementVNode(\"th\", null, \"OBJSIZE 수집\"), _createElementVNode(\"th\", null, \"일일 점검\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dbList, db => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: db.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(db.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.assets), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbDescript), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.hostname), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.pubIp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.vip), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbType), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbName), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.liveChk === 'Y' ? 'btn-on' : 'btn-off'),\n      onClick: $event => $options.updateDbStatus(db, 'liveChk')\n    }, _toDisplayString(db.liveChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_3)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.sizeChk === 'Y' ? 'btn-on' : 'btn-off'),\n      onClick: $event => $options.updateDbStatus(db, 'sizeChk')\n    }, _toDisplayString(db.sizeChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_4)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.trnBakChk === 'Y' ? 'btn-on' : 'btn-off'),\n      onClick: $event => $options.updateDbStatus(db, 'trnBakChk')\n    }, _toDisplayString(db.trnBakChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_5)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.objSegSizeChk === 'Y' ? 'btn-on' : 'btn-off'),\n      onClick: $event => $options.updateDbStatus(db, 'objSegSizeChk')\n    }, _toDisplayString(db.objSegSizeChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_6)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.dailyChk === 'Y' ? 'btn-on' : 'btn-off'),\n      onClick: $event => $options.updateDbStatus(db, 'dailyChk')\n    }, _toDisplayString(db.dailyChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_7)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"데이터가 없습니다.\"))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","dbList","length","_hoisted_2","_Fragment","_renderList","db","id","_toDisplayString","assets","dbDescript","hostname","pubIp","vip","dbType","dbName","_normalizeClass","liveChk","onClick","$event","$options","updateDbStatus","_hoisted_3","sizeChk","_hoisted_4","trnBakChk","_hoisted_5","objSegSizeChk","_hoisted_6","dailyChk","_hoisted_7","_hoisted_8"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DBList.vue"],"sourcesContent":["<template>\r\n  <div class=\"db-list-container\">\r\n    <h2>DB 리스트</h2>\r\n    <table v-if=\"dbList.length > 0\" class=\"db-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>자산</th>\r\n          <th>설명</th>\r\n          <th>호스트</th>\r\n          <th>PubIP</th>\r\n          <th>VIP</th>\r\n          <th>DB 타입</th>\r\n          <th>DB 이름</th>\r\n          <th>생사관제</th>\r\n          <th>TBS수집</th>\r\n          <th>Sybase 트랜잭션</th>\r\n          <th>OBJSIZE 수집</th>\r\n          <th>일일 점검</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"db in dbList\" :key=\"db.id\">\r\n          <td>{{ db.id }}</td>\r\n          <td>{{ db.assets }}</td>\r\n          <td>{{ db.dbDescript }}</td>\r\n          <td>{{ db.hostname }}</td>\r\n          <td>{{ db.pubIp }}</td>\r\n          <td>{{ db.vip }}</td>\r\n          <td>{{ db.dbType }}</td>\r\n          <td>{{ db.dbName }}</td>\r\n          <td>\r\n            <button :class=\"db.liveChk === 'Y' ? 'btn-on' : 'btn-off'\" @click=\"updateDbStatus(db, 'liveChk')\">\r\n              {{ db.liveChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button :class=\"db.sizeChk === 'Y' ? 'btn-on' : 'btn-off'\" @click=\"updateDbStatus(db, 'sizeChk')\">\r\n              {{ db.sizeChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button :class=\"db.trnBakChk === 'Y' ? 'btn-on' : 'btn-off'\" @click=\"updateDbStatus(db, 'trnBakChk')\">\r\n              {{ db.trnBakChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button :class=\"db.objSegSizeChk === 'Y' ? 'btn-on' : 'btn-off'\" @click=\"updateDbStatus(db, 'objSegSizeChk')\">\r\n              {{ db.objSegSizeChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button :class=\"db.dailyChk === 'Y' ? 'btn-on' : 'btn-off'\" @click=\"updateDbStatus(db, 'dailyChk')\">\r\n              {{ db.dailyChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>데이터가 없습니다.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbList: [],\r\n    };\r\n  },\r\n  methods: {\r\n    updateDbStatus(db, field) {\r\n      const newStatus = db[field] === 'Y' ? 'N' : 'Y'; // 상태를 반전시킴\r\n      db[field] = newStatus; // 로컬에서 상태 업데이트\r\n\r\n      // 서버로 상태 변경 요청 보내기\r\n      axios\r\n        .put(`http://10.90.4.60:8080/api/db-list/update/${db.id}`, { [field]: newStatus })\r\n        .then((response) => {\r\n          console.log(`${field} 업데이트 성공`);\r\n        })\r\n        .catch((error) => {\r\n          console.error(`${field} 업데이트 실패`, error);\r\n          // 실패 시 상태를 원래 값으로 되돌림\r\n          db[field] = db[field] === 'Y' ? 'N' : 'Y';\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    axios\r\n      .put(`http://10.90.4.60:8080/api/db-list/update/${db.id}`, { [field]: newStatus })\r\n      .then((response) => {\r\n        console.log(`${field} 업데이트 성공: `, response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(`${field} 업데이트 실패`, error);\r\n        db[field] = db[field] === 'Y' ? 'N' : 'Y';\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.db-list-container {\r\n  font-family: 'Arial', sans-serif;\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  font-size: 2em;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.db-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 20px 0;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.db-table th, .db-table td {\r\n  padding: 12px 15px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.db-table th {\r\n  background-color: #f4f4f4;\r\n  font-weight: bold;\r\n}\r\n\r\n.db-table tr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.db-table tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 0.9em;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.btn-on {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.btn-on:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.btn-off {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\n.btn-off:hover {\r\n  background-color: #e53935;\r\n}\r\n\r\np {\r\n  text-align: center;\r\n  font-size: 1.2em;\r\n  color: #555;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}