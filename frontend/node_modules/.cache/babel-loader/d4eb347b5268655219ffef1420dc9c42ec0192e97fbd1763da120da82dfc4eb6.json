{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"select-container\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"tablespace-table\"\n};\nconst _hoisted_5 = [\"onDblclick\"];\nconst _hoisted_6 = {\n  class: \"ts-name\"\n};\nconst _hoisted_7 = {\n  class: \"used-size\"\n};\nconst _hoisted_8 = {\n  class: \"used-size\"\n};\nconst _hoisted_9 = {\n  class: \"used-rate\"\n};\nconst _hoisted_10 = {\n  class: \"used-rate-container\"\n};\nconst _hoisted_11 = [\"id\"];\nconst _hoisted_12 = {\n  class: \"free-size\"\n};\nconst _hoisted_13 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.selectedDb) + \" DB - 테이블스페이스 리스트\", 1 /* TEXT */), _createCommentVNode(\" DB 목록 \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDb = $event),\n    onChange: _cache[1] || (_cache[1] = $event => $options.fetchTablespaces($data.selectedDb))\n  }, [_cache[2] || (_cache[2] = _createElementVNode(\"option\", {\n    disabled: \"\",\n    value: \"DB조회중\"\n  }, \"DB조회중\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tbList, (db, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: db\n    }, _toDisplayString(db), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedDb]])]), _createCommentVNode(\" 테이블 \"), _createElementVNode(\"table\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Tablespace 이름\"), _createElementVNode(\"th\", null, \"TOTAL(MB)\"), _createElementVNode(\"th\", null, \"USED(MB)\"), _createElementVNode(\"th\", null, \"사용률 (%)\"), _createElementVNode(\"th\", null, \"FREE(MB)\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredTablespaces, ts => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: ts.id.tsName,\n      onDblclick: $event => _ctx.fetchRecentData($data.selectedDb, ts.id.tsName)\n    }, [_createElementVNode(\"td\", _hoisted_6, _toDisplayString(ts.id.tsName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_7, _toDisplayString($options.formatNumber(ts.totalSize)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_8, _toDisplayString($options.formatNumber(ts.usedSize)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_9, [_createCommentVNode(\" 사용률 차트 \"), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"canvas\", {\n      id: 'chart-' + ts.id.tsName,\n      class: \"rate-chart\",\n      width: \"200\",\n      height: \"100\"\n    }, null, 8 /* PROPS */, _hoisted_11)])]), _createElementVNode(\"td\", _hoisted_12, _toDisplayString($options.formatNumber(ts.freeSize)), 1 /* TEXT */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]), $options.filteredTablespaces.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_13, \"검색 결과가 없습니다.\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","selectedDb","_createCommentVNode","_hoisted_2","_cache","$event","onChange","$options","fetchTablespaces","disabled","value","_Fragment","_renderList","tbList","db","index","_hoisted_3","_hoisted_4","filteredTablespaces","ts","id","tsName","onDblclick","_ctx","fetchRecentData","_hoisted_6","_hoisted_7","formatNumber","totalSize","_hoisted_8","usedSize","_hoisted_9","_hoisted_10","width","height","_hoisted_11","_hoisted_12","freeSize","_hoisted_5","length","_hoisted_13"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\TablespacesList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>{{ selectedDb }} DB - 테이블스페이스 리스트</h2>\r\n\r\n    <!-- DB 목록 -->\r\n    <div class=\"select-container\">\r\n      <select v-model=\"selectedDb\" @change=\"fetchTablespaces(selectedDb)\">\r\n        <option disabled value=\"DB조회중\">DB조회중</option>\r\n        <option v-for=\"(db, index) in tbList\" :key=\"index\" :value=\"db\">\r\n          {{ db }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- 테이블 -->\r\n    <table class=\"tablespace-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Tablespace 이름</th>\r\n          <th>TOTAL(MB)</th>\r\n          <th>USED(MB)</th>\r\n          <th>사용률 (%)</th>\r\n          <th>FREE(MB)</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          v-for=\"ts in filteredTablespaces\"\r\n          :key=\"ts.id.tsName\"\r\n          @dblclick=\"fetchRecentData(selectedDb, ts.id.tsName)\"\r\n        >\r\n          <td class=\"ts-name\">{{ ts.id.tsName }}</td>\r\n          <td class=\"used-size\">{{ formatNumber(ts.totalSize) }}</td>\r\n          <td class=\"used-size\">{{ formatNumber(ts.usedSize) }}</td>\r\n          <td class=\"used-rate\">\r\n            <!-- 사용률 차트 -->\r\n            <div class=\"used-rate-container\">\r\n              <canvas :id=\"'chart-' + ts.id.tsName\" class=\"rate-chart\" width=\"200\" height=\"100\"></canvas>\r\n            </div>\r\n          </td>\r\n          <td class=\"free-size\">{{ formatNumber(ts.freeSize) }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-if=\"filteredTablespaces.length === 0\">검색 결과가 없습니다.</p>\r\n\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Chart from \"chart.js/auto\"; // Chart.js 자동 로드\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels'; // 플러그인 import\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDb: \"DB조회중\",\r\n      tbList: [],\r\n      tablespaces: [],\r\n      searchQuery: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    filteredTablespaces() {\r\n      return this.tablespaces.filter((ts) =>\r\n        ts.id.tsName.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    formatNumber(number) {\r\n      return number.toLocaleString(); // 천 단위 구분 기호 추가\r\n    },\r\n    fetchDbList() {\r\n      axios\r\n        .get(\"/api/tb/list\")\r\n        .then((res) => {\r\n          this.tbList = res.data;\r\n          if (this.tbList.length > 0) {\r\n            this.selectedDb = this.tbList[0];\r\n            this.fetchTablespaces(this.selectedDb);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching DB list:\", error);\r\n        });\r\n    },\r\n    fetchTablespaces(dbName) {\r\n      axios\r\n        .get(`/api/tb/${dbName}/tablespaces`)\r\n        .then((res) => {\r\n          // 변경이 없으면 업데이트하지 않음\r\n          if (JSON.stringify(this.tablespaces) === JSON.stringify(res.data)) return;\r\n\r\n          this.tablespaces = res.data || [];\r\n          this.$nextTick(() => {\r\n            this.tablespaces.forEach((ts) => {\r\n              this.drawBarChart(ts);\r\n            });\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"테이블스페이스 데이터 가져오기 실패:\", error);\r\n        });\r\n    },\r\n\r\n   drawBarChart(ts) {\r\n     if (!ts || !ts.id || !ts.id.tsName) {\r\n       console.error(\"Invalid ts object:\", ts);\r\n       return;\r\n     }\r\n\r\n     const canvasId = `chart-${ts.id.tsName.replace(/\\s+/g, '_')}`;\r\n\r\n     // Vue가 DOM 업데이트 후 실행\r\n     this.$nextTick(() => {\r\n       const canvas = document.getElementById(canvasId);\r\n\r\n       // 🚨 canvas가 존재하지 않으면 에러 방지\r\n       if (!canvas) {\r\n         console.error(`Canvas element not found: ${canvasId}`);\r\n         return;\r\n       }\r\n\r\n       const ctx = canvas.getContext('2d');\r\n\r\n       // 기존 차트가 있으면 삭제\r\n       if (this.chartInstances && this.chartInstances[ts.id.tsName]) {\r\n         this.chartInstances[ts.id.tsName].destroy();\r\n       }\r\n\r\n       // chartInstances 객체 초기화\r\n       if (!this.chartInstances) {\r\n         this.chartInstances = {};\r\n       }\r\n\r\n       // 🔢 사용률 반올림 (소수점 1자리)\r\n       const roundedUsedRate = parseFloat(ts.usedRate.toFixed(1));\r\n\r\n       // 새 차트 생성\r\n       this.chartInstances[ts.id.tsName] = new Chart(ctx, {\r\n         type: 'bar',\r\n         data: {\r\n           labels: ['사용률'],\r\n           datasets: [{\r\n             label: '사용률',\r\n             data: [roundedUsedRate], // 반올림된 값 적용\r\n             backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n             borderColor: 'rgb(75, 192, 192)',\r\n             borderRadius: 1,\r\n             borderWidth: 1,\r\n           }],\r\n         },\r\n         options: {\r\n           responsive: true,\r\n           indexAxis: 'y',\r\n           scales: {\r\n             x: { min: 0, max: 100, ticks: { display: false } },\r\n             y: { beginAtZero: true, display: false },\r\n           },\r\n           plugins: {\r\n             legend: { display: false },\r\n             datalabels: {\r\n               display: true,\r\n               align: (ctx) => ctx.dataset.data[0] >= 56 ? 'center' : 'end',\r\n               anchor: (ctx) => ctx.dataset.data[0] >= 56 ? 'center' : 'end',\r\n               formatter: (value) => `${value.toFixed(1)}%`, // 🔢 소수점 1자리 적용\r\n               color: (ctx) => ctx.dataset.data[0] >= 85 ? 'red' : 'rgb(75, 192, 192)',\r\n               font: { weight: 'bold', size: 14 },\r\n             },\r\n           },\r\n         },\r\n         plugins: [ChartDataLabels],\r\n       });\r\n     });\r\n   }\r\n\r\n\r\n  }\r\n,\r\n\r\n  mounted() {\r\n    this.fetchDbList();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n/* 기본 설정 */\r\n.container {\r\n  font-family: 'Arial', sans-serif;\r\n  padding: 40px;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  background-color: #ffffff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  color: #333;\r\n  text-align: center;\r\n  font-size: 26px;\r\n  margin-bottom: 30px;\r\n  font-weight: 700;\r\n}\r\n\r\n/* 드롭다운 스타일 */\r\n.select-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nselect {\r\n  padding: 10px 16px;\r\n  font-size: 16px;\r\n  border-radius: 6px;\r\n  border: 1px solid #ccc;\r\n  background-color: #fff;\r\n  transition: 0.3s;\r\n}\r\n\r\nselect:focus {\r\n  border-color: #4caf50;\r\n  box-shadow: 0 0 5px rgba(76, 175, 80, 0.4);\r\n}\r\n\r\n/* 테이블 스타일 */\r\n.tablespace-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.tablespace-table th, .tablespace-table td {\r\n  padding: 14px;\r\n  text-align: center;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.tablespace-table th {\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.tablespace-table td {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.tablespace-table td.used-rate {\r\n    width: 100px; /* 고정된 가로 크기 */\r\n    min-width: 100px; /* 최소 가로 크기 */\r\n    max-width: 100px; /* 최대 가로 크기 */\r\n    height: 60px; /* 고정된 세로 크기 */\r\n    overflow: hidden; /* 내용 넘칠 경우 숨김 */\r\n    text-align: center;\r\n  }\r\n\r\n.tablespace-table td.free-size, .tablespace-table td.used-size {\r\n  text-align: right;\r\n}\r\n\r\n.tablespace-table tr:hover {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n/* 차트 스타일 */\r\n.used-rate-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-width: 100px; /* 최소 크기 설정 */\r\n}\r\n\r\n.rate-chart {\r\n  max-width: 100px;\r\n  max-height: 75px;\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\n/* 반응형 스타일 */\r\n@media (max-width: 768px) {\r\n  .container {\r\n    padding: 20px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 22px;\r\n  }\r\n\r\n  .tablespace-table th, .tablespace-table td {\r\n    padding: 10px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .rate-chart {\r\n    max-width: 120px;\r\n    max-height: 60px;\r\n  }\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}