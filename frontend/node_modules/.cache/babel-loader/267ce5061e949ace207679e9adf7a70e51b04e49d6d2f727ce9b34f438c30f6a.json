{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"no-events\"\n};\nconst _hoisted_3 = {\n  class: \"schedule-box\"\n};\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.monitoringItems, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"monitoring-box\",\n      key: item.title\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.events, event => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: event.id\n      }, _toDisplayString(event.message), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]), item.events.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"현재 이벤트가 없습니다.\")) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"고정 일정 관리\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"작업 항목\"), _createElementVNode(\"th\", null, \"완료 여부\"), _createElementVNode(\"th\", null, \"작업자 이메일\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.scheduleTasks, task => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: task.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(task.name), 1 /* TEXT */), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => task.completed = $event\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelCheckbox, task.completed]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"email\",\n      \"onUpdate:modelValue\": $event => task.email = $event,\n      placeholder: \"작업자 이메일 입력\"\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, task.email]])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.sendEmails && $options.sendEmails(...args))\n  }, \"이메일 발송\")])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","monitoringItems","item","title","_createElementVNode","_toDisplayString","events","event","id","message","length","_hoisted_2","_createCommentVNode","_hoisted_3","scheduleTasks","task","name","type","$event","completed","_hoisted_4","email","placeholder","_hoisted_5","onClick","_cache","args","$options","sendEmails"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div class=\"monitoring-box\" v-for=\"item in monitoringItems\" :key=\"item.title\">\r\n      <h2>{{ item.title }}</h2>\r\n      <ul>\r\n        <li v-for=\"event in item.events\" :key=\"event.id\">\r\n          {{ event.message }}\r\n        </li>\r\n      </ul>\r\n      <div v-if=\"item.events.length === 0\" class=\"no-events\">현재 이벤트가 없습니다.</div>\r\n    </div>\r\n    <div class=\"schedule-box\">\r\n      <h2>고정 일정 관리</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>작업 항목</th>\r\n            <th>완료 여부</th>\r\n            <th>작업자 이메일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"task in scheduleTasks\" :key=\"task.id\">\r\n            <td>{{ task.name }}</td>\r\n            <td>\r\n              <input type=\"checkbox\" v-model=\"task.completed\" />\r\n            </td>\r\n            <td>\r\n              <input type=\"email\" v-model=\"task.email\" placeholder=\"작업자 이메일 입력\" />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button @click=\"sendEmails\">이메일 발송</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      monitoringItems: [\r\n        {\r\n          title: '테이블스페이스 관제',\r\n          events: [\r\n            { id: 1, message: '테이블스페이스 80% 초과 경고' },\r\n            { id: 2, message: '테이블스페이스 95% 초과 긴급 경고' }\r\n          ]\r\n        },\r\n        {\r\n          title: '생사 관제',\r\n          events: []\r\n        },\r\n        {\r\n          title: '오브젝트 인밸리드 관제',\r\n          events: [\r\n            { id: 3, message: 'Invalid Object 발견: FUNCTION_A' }\r\n          ]\r\n        },\r\n        {\r\n          title: '락 리스트 관제',\r\n          events: [\r\n            { id: 4, message: 'Deadlock 발생: Session 101' }\r\n          ]\r\n        }\r\n      ],\r\n      scheduleTasks: [\r\n        { id: 1, name: 'DB 백업', completed: false, email: '' },\r\n        { id: 2, name: '서버 점검', completed: false, email: '' },\r\n        { id: 3, name: '로그 분석', completed: false, email: '' }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    sendEmails() {\r\n      const completedTasks = this.scheduleTasks.filter(task => task.completed);\r\n      completedTasks.forEach(task => {\r\n        if (task.email) {\r\n          console.log(`이메일 발송: ${task.email}, 작업: ${task.name}`);\r\n          // 실제 이메일 발송 로직 추가 필요\r\n        } else {\r\n          console.log(`작업자 이메일이 설정되지 않았습니다: 작업 ${task.name}`);\r\n        }\r\n      });\r\n      alert('이메일 발송이 완료되었습니다.');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.dashboard {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background: #f9f9f9;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.monitoring-box, .schedule-box {\r\n  background: white;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 15px;\r\n}\r\n\r\n.monitoring-box h2, .schedule-box h2 {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.monitoring-box ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.monitoring-box li {\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.monitoring-box li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.no-events {\r\n  font-size: 14px;\r\n  color: #999;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.schedule-box table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n}\r\n\r\n.schedule-box th, .schedule-box td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.schedule-box th {\r\n  background: #f4f4f4;\r\n  font-weight: bold;\r\n}\r\n\r\n.schedule-box input[type=\"checkbox\"] {\r\n  cursor: pointer;\r\n}\r\n\r\n.schedule-box input[type=\"email\"] {\r\n  width: 100%;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.schedule-box button {\r\n  margin-top: 15px;\r\n  padding: 10px 15px;\r\n  background: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.schedule-box button:hover {\r\n  background: #45a049;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EADxBC,GAAA;EAS2CD,KAAK,EAAC;;;EAExCA,KAAK,EAAC;AAAc;mBAX7B;mBAAA;;uBACEE,mBAAA,CAkCM,OAlCNC,UAkCM,I,kBAjCJD,mBAAA,CAQME,SAAA,QAVVC,WAAA,CAE+CC,KAAA,CAAAC,eAAe,EAAvBC,IAAI;yBAAvCN,mBAAA,CAQM;MARDF,KAAK,EAAC,gBAAgB;MAAkCC,GAAG,EAAEO,IAAI,CAACC;QACrEC,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBH,IAAI,CAACC,KAAK,kBACjBC,mBAAA,CAIK,c,kBAHHR,mBAAA,CAEKE,SAAA,QAPbC,WAAA,CAK4BG,IAAI,CAACI,MAAM,EAApBC,KAAK;2BAAhBX,mBAAA,CAEK;QAF6BD,GAAG,EAAEY,KAAK,CAACC;0BACxCD,KAAK,CAACE,OAAO;sCAGTP,IAAI,CAACI,MAAM,CAACI,MAAM,U,cAA7Bd,mBAAA,CAA0E,OAA1Ee,UAA0E,EAAnB,eAAa,KAT1EC,mBAAA,e;kCAWIR,mBAAA,CAuBM,OAvBNS,UAuBM,G,0BAtBJT,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAmBQ,gB,0BAlBNA,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGfA,mBAAA,CAUQ,iB,kBATNR,mBAAA,CAQKE,SAAA,QA9BfC,WAAA,CAsB6BC,KAAA,CAAAc,aAAa,EAArBC,IAAI;yBAAfnB,mBAAA,CAQK;MAR8BD,GAAG,EAAEoB,IAAI,CAACP;QAC3CJ,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBU,IAAI,CAACC,IAAI,kBAChBZ,mBAAA,CAEK,a,gBADHA,mBAAA,CAAkD;MAA3Ca,IAAI,EAAC,UAAU;MAzBpC,uBAAAC,MAAA,IAyB8CH,IAAI,CAACI,SAAS,GAAAD;4BAzB5DE,UAAA,I,kBAyB8CL,IAAI,CAACI,SAAS,E,KAEhDf,mBAAA,CAEK,a,gBADHA,mBAAA,CAAoE;MAA7Da,IAAI,EAAC,OAAO;MA5BjC,uBAAAC,MAAA,IA4B2CH,IAAI,CAACM,KAAK,GAAAH,MAAA;MAAEI,WAAW,EAAC;4BA5BnEC,UAAA,I,cA4B2CR,IAAI,CAACM,KAAK,E;sCAK/CjB,mBAAA,CAA2C;IAAlCoB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}