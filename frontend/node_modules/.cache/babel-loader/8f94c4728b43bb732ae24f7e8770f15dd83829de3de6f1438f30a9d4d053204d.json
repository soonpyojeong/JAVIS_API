{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      monitoringItems: [{\n        title: '테이블스페이스 관제',\n        events: [{\n          id: 1,\n          message: '테이블스페이스 80% 초과 경고'\n        }, {\n          id: 2,\n          message: '테이블스페이스 95% 초과 긴급 경고'\n        }],\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '20px'\n        }\n      }, {\n        title: '생사 관제',\n        events: [],\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '300px'\n        }\n      }, {\n        title: '오브젝트 인밸리드 관제',\n        events: [{\n          id: 3,\n          message: 'Invalid Object 발견: FUNCTION_A'\n        }],\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '580px'\n        }\n      }, {\n        title: '락 리스트 관제',\n        events: [{\n          id: 4,\n          message: 'Deadlock 발생: Session 101'\n        }],\n        style: {\n          position: 'absolute',\n          top: '300px',\n          left: '20px'\n        }\n      }],\n      scheduleTasks: [{\n        id: 1,\n        name: 'DB 백업',\n        completed: false,\n        email: ''\n      }, {\n        id: 2,\n        name: '서버 점검',\n        completed: false,\n        email: ''\n      }, {\n        id: 3,\n        name: '로그 분석',\n        completed: false,\n        email: ''\n      }],\n      dragData: {\n        isDragging: false,\n        index: null,\n        offsetX: 0,\n        offsetY: 0\n      }\n    };\n  },\n  methods: {\n    sendEmails() {\n      const completedTasks = this.scheduleTasks.filter(task => task.completed);\n      completedTasks.forEach(task => {\n        if (task.email) {\n          console.log(`이메일 발송: ${task.email}, 작업: ${task.name}`);\n          // 실제 이메일 발송 로직 추가 필요\n        } else {\n          console.log(`작업자 이메일이 설정되지 않았습니다: 작업 ${task.name}`);\n        }\n      });\n      alert('이메일 발송이 완료되었습니다.');\n    },\n    startDrag(event, index) {\n      this.dragData.isDragging = true;\n      this.dragData.index = index;\n      this.dragData.offsetX = event.clientX - parseInt(this.monitoringItems[index].style.left);\n      this.dragData.offsetY = event.clientY - parseInt(this.monitoringItems[index].style.top);\n      window.addEventListener('mousemove', this.onDrag);\n      window.addEventListener('mouseup', this.stopDrag);\n    },\n    onDrag(event) {\n      if (!this.dragData.isDragging) return;\n      const item = this.monitoringItems[this.dragData.index];\n      const newLeft = event.clientX - this.dragData.offsetX;\n      const newTop = event.clientY - this.dragData.offsetY;\n\n      // Prevent overlap and keep within bounds\n      item.style.left = `${Math.max(0, Math.min(newLeft, window.innerWidth - 260))}px`;\n      item.style.top = `${Math.max(0, Math.min(newTop, window.innerHeight - 200))}px`;\n      this.monitoringItems = this.monitoringItems.map((otherItem, otherIndex) => {\n        if (otherIndex !== this.dragData.index) {\n          const rect1 = document.querySelectorAll('.monitoring-box')[this.dragData.index].getBoundingClientRect();\n          const rect2 = document.querySelectorAll('.monitoring-box')[otherIndex].getBoundingClientRect();\n          if (rect1.left < rect2.right && rect1.right > rect2.left && rect1.top < rect2.bottom && rect1.bottom > rect2.top) {\n            // Swap positions\n            const tempStyle = {\n              ...otherItem.style\n            };\n            otherItem.style = {\n              ...item.style\n            };\n            item.style = tempStyle;\n          }\n        }\n        return otherItem;\n      });\n    },\n    stopDrag() {\n      this.dragData.isDragging = false;\n      window.removeEventListener('mousemove', this.onDrag);\n      window.removeEventListener('mouseup', this.stopDrag);\n    }\n  }\n};","map":{"version":3,"names":["data","monitoringItems","title","events","id","message","style","position","top","left","scheduleTasks","name","completed","email","dragData","isDragging","index","offsetX","offsetY","methods","sendEmails","completedTasks","filter","task","forEach","console","log","alert","startDrag","event","clientX","parseInt","clientY","window","addEventListener","onDrag","stopDrag","item","newLeft","newTop","Math","max","min","innerWidth","innerHeight","map","otherItem","otherIndex","rect1","document","querySelectorAll","getBoundingClientRect","rect2","right","bottom","tempStyle","removeEventListener"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div\r\n      class=\"monitoring-box draggable\"\r\n      v-for=\"(item, index) in monitoringItems\"\r\n      :key=\"item.title\"\r\n      :style=\"item.style\"\r\n      @mousedown=\"startDrag($event, index)\"\r\n    >\r\n      <h2>{{ item.title }}</h2>\r\n      <ul>\r\n        <li v-for=\"event in item.events\" :key=\"event.id\">\r\n          {{ event.message }}\r\n        </li>\r\n      </ul>\r\n      <div v-if=\"item.events.length === 0\" class=\"no-events\">현재 이벤트가 없습니다.</div>\r\n    </div>\r\n    <div class=\"schedule-box\">\r\n      <h2>고정 일정 관리</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>작업 항목</th>\r\n            <th>완료 여부</th>\r\n            <th>작업자 이메일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"task in scheduleTasks\" :key=\"task.id\">\r\n            <td>{{ task.name }}</td>\r\n            <td>\r\n              <input type=\"checkbox\" v-model=\"task.completed\" />\r\n            </td>\r\n            <td>\r\n              <input type=\"email\" v-model=\"task.email\" placeholder=\"작업자 이메일 입력\" />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button @click=\"sendEmails\">이메일 발송</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      monitoringItems: [\r\n        {\r\n          title: '테이블스페이스 관제',\r\n          events: [\r\n            { id: 1, message: '테이블스페이스 80% 초과 경고' },\r\n            { id: 2, message: '테이블스페이스 95% 초과 긴급 경고' }\r\n          ],\r\n          style: { position: 'absolute', top: '20px', left: '20px' }\r\n        },\r\n        {\r\n          title: '생사 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '300px' }\r\n        },\r\n        {\r\n          title: '오브젝트 인밸리드 관제',\r\n          events: [\r\n            { id: 3, message: 'Invalid Object 발견: FUNCTION_A' }\r\n          ],\r\n          style: { position: 'absolute', top: '20px', left: '580px' }\r\n        },\r\n        {\r\n          title: '락 리스트 관제',\r\n          events: [\r\n            { id: 4, message: 'Deadlock 발생: Session 101' }\r\n          ],\r\n          style: { position: 'absolute', top: '300px', left: '20px' }\r\n        }\r\n      ],\r\n      scheduleTasks: [\r\n        { id: 1, name: 'DB 백업', completed: false, email: '' },\r\n        { id: 2, name: '서버 점검', completed: false, email: '' },\r\n        { id: 3, name: '로그 분석', completed: false, email: '' }\r\n      ],\r\n      dragData: {\r\n        isDragging: false,\r\n        index: null,\r\n        offsetX: 0,\r\n        offsetY: 0\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    sendEmails() {\r\n      const completedTasks = this.scheduleTasks.filter(task => task.completed);\r\n      completedTasks.forEach(task => {\r\n        if (task.email) {\r\n          console.log(`이메일 발송: ${task.email}, 작업: ${task.name}`);\r\n          // 실제 이메일 발송 로직 추가 필요\r\n        } else {\r\n          console.log(`작업자 이메일이 설정되지 않았습니다: 작업 ${task.name}`);\r\n        }\r\n      });\r\n      alert('이메일 발송이 완료되었습니다.');\r\n    },\r\n    startDrag(event, index) {\r\n      this.dragData.isDragging = true;\r\n      this.dragData.index = index;\r\n      this.dragData.offsetX = event.clientX - parseInt(this.monitoringItems[index].style.left);\r\n      this.dragData.offsetY = event.clientY - parseInt(this.monitoringItems[index].style.top);\r\n\r\n      window.addEventListener('mousemove', this.onDrag);\r\n      window.addEventListener('mouseup', this.stopDrag);\r\n    },\r\n    onDrag(event) {\r\n      if (!this.dragData.isDragging) return;\r\n\r\n      const item = this.monitoringItems[this.dragData.index];\r\n      const newLeft = event.clientX - this.dragData.offsetX;\r\n      const newTop = event.clientY - this.dragData.offsetY;\r\n\r\n      // Prevent overlap and keep within bounds\r\n      item.style.left = `${Math.max(0, Math.min(newLeft, window.innerWidth - 260))}px`;\r\n      item.style.top = `${Math.max(0, Math.min(newTop, window.innerHeight - 200))}px`;\r\n\r\n      this.monitoringItems = this.monitoringItems.map((otherItem, otherIndex) => {\r\n        if (otherIndex !== this.dragData.index) {\r\n          const rect1 = document.querySelectorAll('.monitoring-box')[this.dragData.index].getBoundingClientRect();\r\n          const rect2 = document.querySelectorAll('.monitoring-box')[otherIndex].getBoundingClientRect();\r\n\r\n          if (\r\n            rect1.left < rect2.right &&\r\n            rect1.right > rect2.left &&\r\n            rect1.top < rect2.bottom &&\r\n            rect1.bottom > rect2.top\r\n          ) {\r\n            // Swap positions\r\n            const tempStyle = { ...otherItem.style };\r\n            otherItem.style = { ...item.style };\r\n            item.style = tempStyle;\r\n          }\r\n        }\r\n        return otherItem;\r\n      });\r\n    },\r\n    stopDrag() {\r\n      this.dragData.isDragging = false;\r\n\r\n      window.removeEventListener('mousemove', this.onDrag);\r\n      window.removeEventListener('mouseup', this.stopDrag);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.dashboard {\r\n  position: relative;\r\n  height: 100vh;\r\n  background: #f9f9f9;\r\n  font-family: 'Arial', sans-serif;\r\n  overflow: hidden;\r\n}\r\n\r\n.monitoring-box, .schedule-box {\r\n  background: white;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 15px;\r\n  cursor: grab;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.monitoring-box:active {\r\n  cursor: grabbing;\r\n}\r\n\r\n.monitoring-box h2, .schedule-box h2 {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.monitoring-box ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.monitoring-box li {\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.monitoring-box li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.no-events {\r\n  font-size: 14px;\r\n  color: #999;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.schedule-box table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n}\r\n\r\n.schedule-box th, .schedule-box td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.schedule-box th {\r\n  background: #f4f4f4;\r\n  font-weight: bold;\r\n}\r\n\r\n.schedule-box input[type=\"checkbox\"] {\r\n  cursor: pointer;\r\n}\r\n\r\n.schedule-box input[type=\"email\"] {\r\n  width: 100%;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.schedule-box button {\r\n  margin-top: 15px;\r\n  padding: 10px 15px;\r\n  background: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.schedule-box button:hover {\r\n  background: #45a049;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}