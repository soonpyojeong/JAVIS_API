{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"임계치 리스트\", -1 /* HOISTED */)), _createCommentVNode(\" 검색 입력 필드 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"DB 이름 또는 Tablespace 검색\",\n    style: {\n      \"margin-bottom\": \"10px\",\n      \"padding\": \"5px\",\n      \"width\": \"300px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"table\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"DB 이름\"), _createElementVNode(\"th\", null, \"Tablespace\"), _createElementVNode(\"th\", null, \"임계치 (MB)\"), _createElementVNode(\"th\", null, \"DB 타입\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [_createCommentVNode(\" 필터링된 데이터를 표시 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredData, (threshold, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(threshold.dbName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(threshold.tablespaceName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(threshold.thresMb), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(threshold.dbType), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $options.filteredData.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, \"검색 결과가 없습니다.\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 검색 결과가 없을 때 \")]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_createCommentVNode","_cache","$event","$data","searchQuery","type","placeholder","style","_Fragment","_renderList","$options","filteredData","threshold","index","_toDisplayString","dbName","tablespaceName","thresMb","dbType","length","_hoisted_1"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\ThresholdList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>임계치 리스트</h2>\r\n\r\n    <!-- 검색 입력 필드 -->\r\n    <input\r\n      v-model=\"searchQuery\"\r\n      type=\"text\"\r\n      placeholder=\"DB 이름 또는 Tablespace 검색\"\r\n      style=\"margin-bottom: 10px; padding: 5px; width: 300px;\"\r\n    />\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>DB 이름</th>\r\n          <th>Tablespace</th>\r\n          <th>임계치 (MB)</th>\r\n          <th>DB 타입</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <!-- 필터링된 데이터를 표시 -->\r\n        <tr v-for=\"(threshold, index) in filteredData\" :key=\"index\">\r\n          <td>{{ threshold.dbName }}</td>\r\n          <td>{{ threshold.tablespaceName }}</td>\r\n          <td>{{ threshold.thresMb }}</td>\r\n          <td>{{ threshold.dbType }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-if=\"filteredData.length === 0\">검색 결과가 없습니다.</p> <!-- 검색 결과가 없을 때 -->\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\nh2 {\r\n  color: #FF5722;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      thresholds: [], // 원본 데이터\r\n      searchQuery: \"\", // 검색어 입력값\r\n    };\r\n  },\r\n  computed: {\r\n    // 검색어에 따라 필터링된 데이터를 반환\r\n    filteredData() {\r\n      const query = this.searchQuery.toLowerCase();\r\n      return this.thresholds.filter((threshold) => {\r\n        return (\r\n          threshold.dbName.toLowerCase().includes(query) ||\r\n          threshold.tablespaceName.toLowerCase().includes(query)\r\n        );\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    // API 호출\r\n    axios\r\n      .get(\"http://localhost:8080/api/threshold/all\")\r\n      .then((response) => {\r\n        console.log(\"--------------threshold console data log--------------\");\r\n        console.log(response.data);\r\n        this.thresholds = response.data; // 데이터 저장\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAgCM,c,0BA/BJC,mBAAA,CAAgB,YAAZ,SAAO,sBAEXC,mBAAA,cAAiB,E,gBACjBD,mBAAA,CAKE;IAVN,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMeC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,wBAAwB;IACpCC,KAAwD,EAAxD;MAAA;MAAA;MAAA;IAAA;iDAHSJ,KAAA,CAAAC,WAAW,E,GAMtBL,mBAAA,CAkBQ,gB,0BAjBNA,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAc,YAAV,OAAK,E,wBAGbA,mBAAA,CAQQ,gBAPNC,mBAAA,kBAAqB,G,kBACrBF,mBAAA,CAKKU,SAAA,QA5BbC,WAAA,CAuByCC,QAAA,CAAAC,YAAY,EAvBrD,CAuBoBC,SAAS,EAAEC,KAAK;yBAA5Bf,mBAAA,CAKK;MAL2CD,GAAG,EAAEgB;IAAK,IACxDd,mBAAA,CAA+B,YAAAe,gBAAA,CAAxBF,SAAS,CAACG,MAAM,kBACvBhB,mBAAA,CAAuC,YAAAe,gBAAA,CAAhCF,SAAS,CAACI,cAAc,kBAC/BjB,mBAAA,CAAgC,YAAAe,gBAAA,CAAzBF,SAAS,CAACK,OAAO,kBACxBlB,mBAAA,CAA+B,YAAAe,gBAAA,CAAxBF,SAAS,CAACM,MAAM,iB;sCAKpBR,QAAA,CAAAC,YAAY,CAACQ,MAAM,U,cAA5BrB,mBAAA,CAAoD,KAhCxDsB,UAAA,EAgCwC,cAAY,KAhCpDpB,mBAAA,gBAgCyDA,mBAAA,iBAAoB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}