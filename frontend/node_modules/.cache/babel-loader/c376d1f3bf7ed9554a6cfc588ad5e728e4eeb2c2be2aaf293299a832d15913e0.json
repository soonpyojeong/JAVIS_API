{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      smsHistories: [],\n      day: 30 // 기본 30일 기준\n    };\n  },\n  mounted() {\n    this.fetchSmsHistories(); // 기본적으로 30일 기준으로 데이터 조회\n  },\n  methods: {\n    fetchSmsHistories() {\n      axios.get(`/api/sms/all?day=${this.day}`).then(response => {\n        this.smsHistories = response.data;\n      }).catch(error => {\n        console.error('Error fetching SMS histories:', error);\n      });\n    },\n    updateAllSmsHistories() {\n      axios.put('/api/sms/updateall').then(() => {\n        alert('전체 메시지 전송 처리가 완료되었습니다.');\n        this.fetchSmsHistories(); // 업데이트 후 리스트 다시 가져오기\n      }).catch(error => {\n        console.error('Error updating SMS histories:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","smsHistories","day","mounted","fetchSmsHistories","methods","get","then","response","catch","error","console","updateAllSmsHistories","put","alert"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\SmsHistory.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>SMS 전송 히스토리</h1>\r\n\r\n    <!-- 일수 입력 필드와 조회 버튼 추가 -->\r\n    <div>\r\n      <label for=\"days\">조회할 일수: </label>\r\n      <input type=\"number\" id=\"days\" v-model=\"day\" min=\"1\" placeholder=\"일수를 입력하세요\" />\r\n      <button @click=\"fetchSmsHistories\">조회</button>\r\n    </div>\r\n\r\n    <!-- 전체 메시지 전송 처리 버튼 -->\r\n    <button @click=\"updateAllSmsHistories\">대량메시지강제전송처리</button>\r\n\r\n    <!-- 히스토리 테이블 -->\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>INDATE</th>\r\n          <th>INTIME</th>\r\n          <th>SENDNAME</th>\r\n          <th>RECVNAME</th>\r\n          <th>MSG</th>\r\n          <th>RESULT</th>\r\n          <th>KIND</th>\r\n          <th>ERRCODE</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"history in smsHistories\" :key=\"history.SEQNO\">\r\n          <td>{{ history.loc }}</td>\r\n          <td>{{ history.assets }}</td>\r\n          <td>{{ history.dbDescript }}</td>\r\n          <td>{{ history.recName }}</td>\r\n          <td>{{ history.msg }}</td>\r\n          <td>{{ history.result }}</td>\r\n          <td>{{ history.kind }}</td>\r\n          <td>{{ history.errCode }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      smsHistories: [],\r\n      day: 30,  // 기본 30일 기준\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchSmsHistories();  // 기본적으로 30일 기준으로 데이터 조회\r\n  },\r\n  methods: {\r\n    fetchSmsHistories() {\r\n      axios.get(`/api/sms/all?day=${this.day}`)\r\n        .then(response => {\r\n          this.smsHistories = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching SMS histories:', error);\r\n        });\r\n    },\r\n    updateAllSmsHistories() {\r\n      axios.put('/api/sms/updateall')\r\n        .then(() => {\r\n          alert('전체 메시지 전송 처리가 완료되었습니다.');\r\n          this.fetchSmsHistories();  // 업데이트 후 리스트 다시 가져오기\r\n        })\r\n        .catch(error => {\r\n          console.error('Error updating SMS histories:', error);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 스타일은 자유롭게 설정 */\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px; /* 버튼과 테이블 사이에 여백 추가 */\r\n}\r\nth, td {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  text-align: center;\r\n}\r\nbutton {\r\n  margin-bottom: 20px; /* 버튼과 테이블 사이의 간격 조정 */\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\ninput[type=\"number\"] {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n  width: 100px;\r\n}\r\n</style>\r\n"],"mappings":"AA6CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,GAAG,EAAE,EAAE,CAAG;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAG;EAC7B,CAAC;EACDC,OAAO,EAAE;IACPD,iBAAiBA,CAAA,EAAG;MAClBL,KAAK,CAACO,GAAG,CAAC,oBAAoB,IAAI,CAACJ,GAAG,EAAE,EACrCK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACP,YAAW,GAAIO,QAAQ,CAACR,IAAI;MACnC,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN,CAAC;IACDE,qBAAqBA,CAAA,EAAG;MACtBb,KAAK,CAACc,GAAG,CAAC,oBAAoB,EAC3BN,IAAI,CAAC,MAAM;QACVO,KAAK,CAAC,wBAAwB,CAAC;QAC/B,IAAI,CAACV,iBAAiB,CAAC,CAAC,EAAG;MAC7B,CAAC,EACAK,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}