{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nexport default {\n  data() {\n    return {\n      monitoringItems: [{\n        title: '테이블스페이스 관제',\n        events: [{\n          id: 1,\n          message: '테이블스페이스 80% 초과 경고'\n        }, {\n          id: 2,\n          message: '테이블스페이스 95% 초과 긴급 경고'\n        }]\n      }, {\n        title: '생사 관제',\n        events: []\n      }, {\n        title: '오브젝트 인밸리드 관제',\n        events: [{\n          id: 3,\n          message: 'Invalid Object 발견: FUNCTION_A'\n        }]\n      }, {\n        title: '락 리스트 관제',\n        events: [{\n          id: 4,\n          message: 'Deadlock 발생: Session 101'\n        }]\n      }],\n      scheduleTasks: [{\n        id: 1,\n        name: 'DB 백업',\n        completed: false,\n        email: ''\n      }, {\n        id: 2,\n        name: '서버 점검',\n        completed: false,\n        email: ''\n      }, {\n        id: 3,\n        name: '로그 분석',\n        completed: false,\n        email: ''\n      }]\n    };\n  },\n  methods: {\n    sendEmails() {\n      const completedTasks = this.scheduleTasks.filter(task => task.completed);\n      completedTasks.forEach(task => {\n        if (task.email) {\n          console.log(`이메일 발송: ${task.email}, 작업: ${task.name}`);\n          // 실제 이메일 발송 로직 추가 필요\n        } else {\n          console.log(`작업자 이메일이 설정되지 않았습니다: 작업 ${task.name}`);\n        }\n      });\n      alert('이메일 발송이 완료되었습니다.');\n    }\n  }\n};","map":{"version":3,"names":["data","monitoringItems","title","events","id","message","scheduleTasks","name","completed","email","methods","sendEmails","completedTasks","filter","task","forEach","console","log","alert"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div class=\"monitoring-box\" v-for=\"item in monitoringItems\" :key=\"item.title\">\r\n      <h2>{{ item.title }}</h2>\r\n      <ul>\r\n        <li v-for=\"event in item.events\" :key=\"event.id\">\r\n          {{ event.message }}\r\n        </li>\r\n      </ul>\r\n      <div v-if=\"item.events.length === 0\" class=\"no-events\">현재 이벤트가 없습니다.</div>\r\n    </div>\r\n    <div class=\"schedule-box\">\r\n      <h2>고정 일정 관리</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>작업 항목</th>\r\n            <th>완료 여부</th>\r\n            <th>작업자 이메일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"task in scheduleTasks\" :key=\"task.id\">\r\n            <td>{{ task.name }}</td>\r\n            <td>\r\n              <input type=\"checkbox\" v-model=\"task.completed\" />\r\n            </td>\r\n            <td>\r\n              <input type=\"email\" v-model=\"task.email\" placeholder=\"작업자 이메일 입력\" />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button @click=\"sendEmails\">이메일 발송</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      monitoringItems: [\r\n        {\r\n          title: '테이블스페이스 관제',\r\n          events: [\r\n            { id: 1, message: '테이블스페이스 80% 초과 경고' },\r\n            { id: 2, message: '테이블스페이스 95% 초과 긴급 경고' }\r\n          ]\r\n        },\r\n        {\r\n          title: '생사 관제',\r\n          events: []\r\n        },\r\n        {\r\n          title: '오브젝트 인밸리드 관제',\r\n          events: [\r\n            { id: 3, message: 'Invalid Object 발견: FUNCTION_A' }\r\n          ]\r\n        },\r\n        {\r\n          title: '락 리스트 관제',\r\n          events: [\r\n            { id: 4, message: 'Deadlock 발생: Session 101' }\r\n          ]\r\n        }\r\n      ],\r\n      scheduleTasks: [\r\n        { id: 1, name: 'DB 백업', completed: false, email: '' },\r\n        { id: 2, name: '서버 점검', completed: false, email: '' },\r\n        { id: 3, name: '로그 분석', completed: false, email: '' }\r\n      ]\r\n    };\r\n  },\r\n  methods: {\r\n    sendEmails() {\r\n      const completedTasks = this.scheduleTasks.filter(task => task.completed);\r\n      completedTasks.forEach(task => {\r\n        if (task.email) {\r\n          console.log(`이메일 발송: ${task.email}, 작업: ${task.name}`);\r\n          // 실제 이메일 발송 로직 추가 필요\r\n        } else {\r\n          console.log(`작업자 이메일이 설정되지 않았습니다: 작업 ${task.name}`);\r\n        }\r\n      });\r\n      alert('이메일 발송이 완료되었습니다.');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.dashboard {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background: #f9f9f9;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.monitoring-box, .schedule-box {\r\n  background: white;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 15px;\r\n}\r\n\r\n.monitoring-box h2, .schedule-box h2 {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.monitoring-box ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.monitoring-box li {\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.monitoring-box li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.no-events {\r\n  font-size: 14px;\r\n  color: #999;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.schedule-box table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n}\r\n\r\n.schedule-box th, .schedule-box td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.schedule-box th {\r\n  background: #f4f4f4;\r\n  font-weight: bold;\r\n}\r\n\r\n.schedule-box input[type=\"checkbox\"] {\r\n  cursor: pointer;\r\n}\r\n\r\n.schedule-box input[type=\"email\"] {\r\n  width: 100%;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.schedule-box button {\r\n  margin-top: 15px;\r\n  padding: 10px 15px;\r\n  background: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.schedule-box button:hover {\r\n  background: #45a049;\r\n}\r\n</style>"],"mappings":";;;AAuCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,CACf;QACEC,KAAK,EAAE,YAAY;QACnBC,MAAM,EAAE,CACN;UAAEC,EAAE,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAoB,CAAC,EACvC;UAAED,EAAE,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAuB;MAE7C,CAAC,EACD;QACEH,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE;MACV,CAAC,EACD;QACED,KAAK,EAAE,cAAc;QACrBC,MAAM,EAAE,CACN;UAAEC,EAAE,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAgC;MAEtD,CAAC,EACD;QACEH,KAAK,EAAE,UAAU;QACjBC,MAAM,EAAE,CACN;UAAEC,EAAE,EAAE,CAAC;UAAEC,OAAO,EAAE;QAA2B;MAEjD,EACD;MACDC,aAAa,EAAE,CACb;QAAEF,EAAE,EAAE,CAAC;QAAEG,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAG,CAAC,EACrD;QAAEL,EAAE,EAAE,CAAC;QAAEG,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAG,CAAC,EACrD;QAAEL,EAAE,EAAE,CAAC;QAAEG,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAG;IAExD,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,MAAMC,cAAa,GAAI,IAAI,CAACN,aAAa,CAACO,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACN,SAAS,CAAC;MACxEI,cAAc,CAACG,OAAO,CAACD,IAAG,IAAK;QAC7B,IAAIA,IAAI,CAACL,KAAK,EAAE;UACdO,OAAO,CAACC,GAAG,CAAC,WAAWH,IAAI,CAACL,KAAK,SAASK,IAAI,CAACP,IAAI,EAAE,CAAC;UACtD;QACF,OAAO;UACLS,OAAO,CAACC,GAAG,CAAC,2BAA2BH,IAAI,CAACP,IAAI,EAAE,CAAC;QACrD;MACF,CAAC,CAAC;MACFW,KAAK,CAAC,kBAAkB,CAAC;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}