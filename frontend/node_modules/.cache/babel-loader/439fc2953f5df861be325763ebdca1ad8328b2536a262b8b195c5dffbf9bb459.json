{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      monitoringItems: [{\n        title: '테이블스페이스 관제',\n        events: [{\n          id: 1,\n          message: '테이블스페이스 80% 초과 경고'\n        }],\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          zIndex: 1,\n          width: '200px',\n          height: '150px'\n        }\n      }, {\n        title: '생사 관제',\n        events: [],\n        style: {\n          position: 'absolute',\n          top: '200px',\n          left: '300px',\n          zIndex: 1,\n          width: '200px',\n          height: '150px'\n        }\n      }, {\n        title: '오브젝트 인밸리드 관제',\n        events: [{\n          id: 3,\n          message: 'Invalid Object 발견: FUNCTION_A'\n        }],\n        style: {\n          position: 'absolute',\n          top: '380px',\n          left: '580px',\n          zIndex: 1,\n          width: '200px',\n          height: '150px'\n        }\n      }, {\n        title: '락 리스트 관제',\n        events: [{\n          id: 4,\n          message: 'Deadlock 발생: Session 101'\n        }],\n        style: {\n          position: 'absolute',\n          top: '560px',\n          left: '20px',\n          zIndex: 1,\n          width: '200px',\n          height: '150px'\n        }\n      }],\n      scheduleTasks: [{\n        id: 1,\n        name: 'DB 백업',\n        completed: false,\n        email: ''\n      }, {\n        id: 2,\n        name: '서버 점검',\n        completed: false,\n        email: ''\n      }, {\n        id: 3,\n        name: '로그 분석',\n        completed: false,\n        email: ''\n      }],\n      dragData: {\n        isDragging: false,\n        index: null,\n        offsetX: 0,\n        offsetY: 0\n      },\n      snapPositions: [20, 200, 380, 560],\n      // 더 이상 사용하지 않음\n      collisionOffset: 10,\n      defaultLeft: 20,\n      // 초기 left 값\n      verticalSpacing: 20 // 아래로 이동 시 간격\n    };\n  },\n  mounted() {\n    // 초기 위치 설정 (필요하다면)\n  },\n  methods: {\n    sendEmails() {\n      const completedTasks = this.scheduleTasks.filter(task => task.completed);\n      completedTasks.forEach(task => {\n        if (task.email) {\n          console.log(`이메일 발송: ${task.email}, 작업: ${task.name}`);\n        } else {\n          console.log(`작업자 이메일이 설정되지 않았습니다: 작업 ${task.name}`);\n        }\n      });\n      alert('이메일 발송이 완료되었습니다.');\n    },\n    startDrag(event, index) {\n      this.dragData.isDragging = true;\n      this.dragData.index = index;\n      const item = this.monitoringItems[index];\n      const rect = event.target.closest('.drag-handle').getBoundingClientRect();\n      this.dragData.offsetX = event.clientX - rect.left;\n      this.dragData.offsetY = event.clientY - rect.top;\n      item.style.zIndex = 1000;\n      window.addEventListener('mousemove', this.onDrag);\n      window.addEventListener('mouseup', this.stopDrag);\n    },\n    onDrag(event) {\n      if (!this.dragData.isDragging) return;\n      const item = this.monitoringItems[this.dragData.index];\n      let newLeft = event.clientX - this.dragData.offsetX;\n      let newTop = event.clientY - this.dragData.offsetY;\n      newLeft = Math.max(0, Math.min(newLeft, window.innerWidth - parseInt(item.style.width)));\n      newTop = Math.max(0, Math.min(newTop, window.innerHeight - parseInt(item.style.height)));\n      item.style.left = `${newLeft}px`;\n      item.style.top = `${newTop}px`;\n    },\n    stopDrag() {\n      if (!this.dragData.isDragging) return;\n      const draggedItem = this.monitoringItems[this.dragData.index];\n      draggedItem.style.zIndex = 1;\n      this.dragData.isDragging = false;\n      window.removeEventListener('mousemove', this.onDrag);\n      window.removeEventListener('mouseup', this.stopDrag);\n      this.handleCollision(this.dragData.index);\n    },\n    handleCollision(draggedIndex) {\n      const draggedItem = this.monitoringItems[draggedIndex];\n      let hasCollision = false;\n      for (let i = 0; i < this.monitoringItems.length; i++) {\n        if (i === draggedIndex) continue;\n        const otherItem = this.monitoringItems[i];\n        if (this.checkCollision(draggedItem, otherItem)) {\n          hasCollision = true;\n          break;\n        }\n      }\n      if (hasCollision) {\n        this.moveOnCollision(draggedIndex);\n      }\n    },\n    checkCollision(item1, item2) {\n      const rect1 = item1.style;\n      const rect2 = item2.style;\n      const left1 = parseInt(rect1.left);\n      const top1 = parseInt(rect1.top);\n      const right1 = left1 + parseInt(rect1.width);\n      const bottom1 = top1 + parseInt(rect1.height);\n      const left2 = parseInt(rect2.left);\n      const top2 = parseInt(rect2.top);\n      const right2 = left2 + parseInt(rect2.width);\n      const bottom2 = top2 + parseInt(rect2.height);\n      return !(right1 < left2 || left1 > right2 || bottom1 < top2 || top1 > bottom2);\n    },\n    moveOnCollision(index) {\n      const item = this.monitoringItems[index];\n      let newLeft = parseInt(item.style.left) + this.collisionOffset;\n      const originalTop = parseInt(item.style.top);\n\n      // 오른쪽으로 이동했을 때 화면 경계를 넘지 않도록\n      if (newLeft + parseInt(item.style.width) > window.innerWidth) {\n        newLeft = this.defaultLeft;\n        item.style.top = `${this.getNextVerticalPosition(index)}px`;\n      }\n      item.style.left = `${newLeft}px`;\n\n      // 이동 후 다시 충돌 검사 (무한 루프 방지)\n      for (let i = 0; i < this.monitoringItems.length; i++) {\n        if (i === index) continue;\n        if (this.checkCollision(item, this.monitoringItems[i])) {\n          // 오른쪽으로 밀어도 충돌하면 아래로 이동\n          item.style.left = `${this.defaultLeft}px`;\n          item.style.top = `${this.getNextVerticalPosition(index)}px`;\n          break;\n        }\n      }\n    },\n    getNextVerticalPosition(currentIndex) {\n      let nextTop = this.defaultLeft; // 초기 top 값과 동일하게 시작\n      const itemHeight = parseInt(this.monitoringItems[currentIndex].style.height) + this.verticalSpacing;\n\n      // 이미 배치된 항목들을 기준으로 아래쪽 위치 계산\n      const placedTops = this.monitoringItems.filter((_, index) => index !== currentIndex).map(item => parseInt(item.style.top)).sort((a, b) => a - b);\n      if (placedTops.length > 0) {\n        nextTop = Math.max(...placedTops) + itemHeight;\n      }\n\n      // 현재 아이템보다 위에 있는 아이템 수를 고려하여 위치 조정\n      let itemsAbove = 0;\n      for (let i = 0; i < this.monitoringItems.length; i++) {\n        if (i !== currentIndex && parseInt(this.monitoringItems[i].style.top) < parseInt(this.monitoringItems[currentIndex].style.top)) {\n          itemsAbove++;\n        }\n      }\n      // 간단하게 순서대로 배치 (더 정교한 로직 필요할 수 있음)\n      nextTop = this.defaultLeft + itemsAbove * itemHeight;\n\n      // 겹치지 않는 가장 아래쪽 위치 찾기 (더 복잡한 로직 필요할 수 있음)\n      let currentTop = this.defaultLeft;\n      for (let i = 0; i < this.monitoringItems.length; i++) {\n        if (i !== currentIndex) {\n          const otherTop = parseInt(this.monitoringItems[i].style.top);\n          const otherBottom = otherTop + parseInt(this.monitoringItems[i].style.height) + this.verticalSpacing;\n          if (currentTop < otherBottom) {\n            currentTop = otherBottom;\n          }\n        }\n      }\n      return currentTop;\n    }\n  }\n};","map":{"version":3,"names":["data","monitoringItems","title","events","id","message","style","position","top","left","zIndex","width","height","scheduleTasks","name","completed","email","dragData","isDragging","index","offsetX","offsetY","snapPositions","collisionOffset","defaultLeft","verticalSpacing","mounted","methods","sendEmails","completedTasks","filter","task","forEach","console","log","alert","startDrag","event","item","rect","target","closest","getBoundingClientRect","clientX","clientY","window","addEventListener","onDrag","stopDrag","newLeft","newTop","Math","max","min","innerWidth","parseInt","innerHeight","draggedItem","removeEventListener","handleCollision","draggedIndex","hasCollision","i","length","otherItem","checkCollision","moveOnCollision","item1","item2","rect1","rect2","left1","top1","right1","bottom1","left2","top2","right2","bottom2","originalTop","getNextVerticalPosition","currentIndex","nextTop","itemHeight","placedTops","_","map","sort","a","b","itemsAbove","currentTop","otherTop","otherBottom"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\" ref=\"dashboard\">\r\n    <div\r\n      class=\"monitoring-box draggable\"\r\n      v-for=\"(item, index) in monitoringItems\"\r\n      :key=\"item.title\"\r\n      :style=\"item.style\"\r\n    >\r\n      <div class=\"drag-handle\" @mousedown=\"startDrag($event, index)\">\r\n        <h2>{{ item.title }}</h2>\r\n      </div>\r\n      <ul>\r\n        <li v-for=\"event in item.events\" :key=\"event.id\">\r\n          {{ event.message }}\r\n        </li>\r\n      </ul>\r\n      <div v-if=\"item.events.length === 0\" class=\"no-events\">현재 이벤트가 없습니다.</div>\r\n    </div>\r\n\r\n    <div class=\"schedule-box\">\r\n      <h2>고정 일정 관리</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>작업 항목</th>\r\n            <th>완료 여부</th>\r\n            <th>작업자 이메일</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"task in scheduleTasks\" :key=\"task.id\">\r\n            <td>{{ task.name }}</td>\r\n            <td>\r\n              <input type=\"checkbox\" v-model=\"task.completed\" />\r\n            </td>\r\n            <td>\r\n              <input type=\"email\" v-model=\"task.email\" placeholder=\"작업자 이메일 입력\" />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <button @click=\"sendEmails\">이메일 발송</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      monitoringItems: [\r\n        {\r\n          title: '테이블스페이스 관제',\r\n          events: [{ id: 1, message: '테이블스페이스 80% 초과 경고' }],\r\n          style: { position: 'absolute', top: '20px', left: '20px', zIndex: 1, width: '200px', height: '150px' },\r\n        },\r\n        {\r\n          title: '생사 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '200px', left: '300px', zIndex: 1, width: '200px', height: '150px' },\r\n        },\r\n        {\r\n          title: '오브젝트 인밸리드 관제',\r\n          events: [{ id: 3, message: 'Invalid Object 발견: FUNCTION_A' }],\r\n          style: { position: 'absolute', top: '380px', left: '580px', zIndex: 1, width: '200px', height: '150px' },\r\n        },\r\n        {\r\n          title: '락 리스트 관제',\r\n          events: [{ id: 4, message: 'Deadlock 발생: Session 101' }],\r\n          style: { position: 'absolute', top: '560px', left: '20px', zIndex: 1, width: '200px', height: '150px' },\r\n        },\r\n      ],\r\n      scheduleTasks: [\r\n        { id: 1, name: 'DB 백업', completed: false, email: '' },\r\n        { id: 2, name: '서버 점검', completed: false, email: '' },\r\n        { id: 3, name: '로그 분석', completed: false, email: '' },\r\n      ],\r\n      dragData: {\r\n        isDragging: false,\r\n        index: null,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n      },\r\n      snapPositions: [20, 200, 380, 560], // 더 이상 사용하지 않음\r\n      collisionOffset: 10,\r\n      defaultLeft: 20, // 초기 left 값\r\n      verticalSpacing: 20, // 아래로 이동 시 간격\r\n    };\r\n  },\r\n  mounted() {\r\n    // 초기 위치 설정 (필요하다면)\r\n  },\r\n  methods: {\r\n    sendEmails() {\r\n      const completedTasks = this.scheduleTasks.filter(task => task.completed);\r\n      completedTasks.forEach(task => {\r\n        if (task.email) {\r\n          console.log(`이메일 발송: ${task.email}, 작업: ${task.name}`);\r\n        } else {\r\n          console.log(`작업자 이메일이 설정되지 않았습니다: 작업 ${task.name}`);\r\n        }\r\n      });\r\n      alert('이메일 발송이 완료되었습니다.');\r\n    },\r\n    startDrag(event, index) {\r\n      this.dragData.isDragging = true;\r\n      this.dragData.index = index;\r\n\r\n      const item = this.monitoringItems[index];\r\n      const rect = event.target.closest('.drag-handle').getBoundingClientRect();\r\n      this.dragData.offsetX = event.clientX - rect.left;\r\n      this.dragData.offsetY = event.clientY - rect.top;\r\n\r\n      item.style.zIndex = 1000;\r\n\r\n      window.addEventListener('mousemove', this.onDrag);\r\n      window.addEventListener('mouseup', this.stopDrag);\r\n    },\r\n\r\n    onDrag(event) {\r\n      if (!this.dragData.isDragging) return;\r\n\r\n      const item = this.monitoringItems[this.dragData.index];\r\n\r\n      let newLeft = event.clientX - this.dragData.offsetX;\r\n      let newTop = event.clientY - this.dragData.offsetY;\r\n\r\n      newLeft = Math.max(0, Math.min(newLeft, window.innerWidth - parseInt(item.style.width)));\r\n      newTop = Math.max(0, Math.min(newTop, window.innerHeight - parseInt(item.style.height)));\r\n\r\n      item.style.left = `${newLeft}px`;\r\n      item.style.top = `${newTop}px`;\r\n    },\r\n\r\n    stopDrag() {\r\n      if (!this.dragData.isDragging) return;\r\n\r\n      const draggedItem = this.monitoringItems[this.dragData.index];\r\n      draggedItem.style.zIndex = 1;\r\n      this.dragData.isDragging = false;\r\n\r\n      window.removeEventListener('mousemove', this.onDrag);\r\n      window.removeEventListener('mouseup', this.stopDrag);\r\n\r\n      this.handleCollision(this.dragData.index);\r\n    },\r\n\r\n    handleCollision(draggedIndex) {\r\n      const draggedItem = this.monitoringItems[draggedIndex];\r\n      let hasCollision = false;\r\n\r\n      for (let i = 0; i < this.monitoringItems.length; i++) {\r\n        if (i === draggedIndex) continue;\r\n\r\n        const otherItem = this.monitoringItems[i];\r\n        if (this.checkCollision(draggedItem, otherItem)) {\r\n          hasCollision = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (hasCollision) {\r\n        this.moveOnCollision(draggedIndex);\r\n      }\r\n    },\r\n\r\n    checkCollision(item1, item2) {\r\n      const rect1 = item1.style;\r\n      const rect2 = item2.style;\r\n\r\n      const left1 = parseInt(rect1.left);\r\n      const top1 = parseInt(rect1.top);\r\n      const right1 = left1 + parseInt(rect1.width);\r\n      const bottom1 = top1 + parseInt(rect1.height);\r\n\r\n      const left2 = parseInt(rect2.left);\r\n      const top2 = parseInt(rect2.top);\r\n      const right2 = left2 + parseInt(rect2.width);\r\n      const bottom2 = top2 + parseInt(rect2.height);\r\n\r\n      return !(right1 < left2 || left1 > right2 || bottom1 < top2 || top1 > bottom2);\r\n    },\r\n\r\n    moveOnCollision(index) {\r\n      const item = this.monitoringItems[index];\r\n      let newLeft = parseInt(item.style.left) + this.collisionOffset;\r\n      const originalTop = parseInt(item.style.top);\r\n\r\n      // 오른쪽으로 이동했을 때 화면 경계를 넘지 않도록\r\n      if (newLeft + parseInt(item.style.width) > window.innerWidth) {\r\n        newLeft = this.defaultLeft;\r\n        item.style.top = `${this.getNextVerticalPosition(index)}px`;\r\n      }\r\n      item.style.left = `${newLeft}px`;\r\n\r\n      // 이동 후 다시 충돌 검사 (무한 루프 방지)\r\n      for (let i = 0; i < this.monitoringItems.length; i++) {\r\n        if (i === index) continue;\r\n        if (this.checkCollision(item, this.monitoringItems[i])) {\r\n          // 오른쪽으로 밀어도 충돌하면 아래로 이동\r\n          item.style.left = `${this.defaultLeft}px`;\r\n          item.style.top = `${this.getNextVerticalPosition(index)}px`;\r\n          break;\r\n        }\r\n      }\r\n    },\r\n\r\n    getNextVerticalPosition(currentIndex) {\r\n      let nextTop = this.defaultLeft; // 초기 top 값과 동일하게 시작\r\n      const itemHeight = parseInt(this.monitoringItems[currentIndex].style.height) + this.verticalSpacing;\r\n\r\n      // 이미 배치된 항목들을 기준으로 아래쪽 위치 계산\r\n      const placedTops = this.monitoringItems\r\n        .filter((_, index) => index !== currentIndex)\r\n        .map(item => parseInt(item.style.top))\r\n        .sort((a, b) => a - b);\r\n\r\n      if (placedTops.length > 0) {\r\n        nextTop = Math.max(...placedTops) + itemHeight;\r\n      }\r\n\r\n      // 현재 아이템보다 위에 있는 아이템 수를 고려하여 위치 조정\r\n      let itemsAbove = 0;\r\n      for (let i = 0; i < this.monitoringItems.length; i++) {\r\n        if (i !== currentIndex && parseInt(this.monitoringItems[i].style.top) < parseInt(this.monitoringItems[currentIndex].style.top)) {\r\n          itemsAbove++;\r\n        }\r\n      }\r\n      // 간단하게 순서대로 배치 (더 정교한 로직 필요할 수 있음)\r\n      nextTop = this.defaultLeft + itemsAbove * itemHeight;\r\n\r\n      // 겹치지 않는 가장 아래쪽 위치 찾기 (더 복잡한 로직 필요할 수 있음)\r\n      let currentTop = this.defaultLeft;\r\n      for (let i = 0; i < this.monitoringItems.length; i++) {\r\n        if (i !== currentIndex) {\r\n          const otherTop = parseInt(this.monitoringItems[i].style.top);\r\n          const otherBottom = otherTop + parseInt(this.monitoringItems[i].style.height) + this.verticalSpacing;\r\n          if (currentTop < otherBottom) {\r\n            currentTop = otherBottom;\r\n          }\r\n        }\r\n      }\r\n      return currentTop;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 기존 스타일 유지 */\r\n.dashboard {\r\n  position: relative;\r\n  height: 100vh;\r\n  background: #f9f9f9;\r\n  font-family: 'Arial', sans-serif;\r\n  overflow: auto; /* 아래로 스크롤 가능하도록 변경 */\r\n}\r\n\r\n.monitoring-box,\r\n.schedule-box {\r\n  background: white;\r\n  user-select: none;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 15px;\r\n  transition: transform 0.2s ease, left 0.2s ease, top 0.2s ease;\r\n  position: absolute;\r\n}\r\n\r\n.monitoring-box {\r\n  cursor: grab;\r\n}\r\n\r\n.monitoring-box:active {\r\n  cursor: grabbing;\r\n}\r\n\r\n.drag-handle {\r\n  cursor: grab;\r\n}\r\n\r\n.drag-handle h2 {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 5px;\r\n  cursor: grab;\r\n}\r\n\r\n.monitoring-box:active .drag-handle {\r\n  cursor: grabbing;\r\n}\r\n\r\n.monitoring-box ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.monitoring-box li {\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.monitoring-box li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.no-events {\r\n  font-size: 14px;\r\n  color: #999;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.schedule-box {\r\n  position: absolute; /* absolute로 변경하여 자유로운 배치 */\r\n  top: 20px;\r\n  right: 20px;\r\n  width: 400px; /* 적절한 너비 설정 */\r\n}\r\n\r\n.schedule-box h2 {\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  color: #333;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.schedule-box table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n}\r\n\r\n.schedule-box th,\r\n.schedule-box td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.schedule-box th {\r\n  background: #f4f4f4;\r\n  font-weight: bold;\r\n}\r\n\r\n.schedule-box input[type=\"checkbox\"] {\r\n  cursor: pointer;\r\n}\r\n\r\n.schedule-box input[type=\"email\"] {\r\n  width: 100%;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.schedule-box button {\r\n  margin-top: 15px;\r\n  padding: 10px 15px;\r\n  background: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n}\r\n\r\n.schedule-box button:hover {\r\n  background: #45a049;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}