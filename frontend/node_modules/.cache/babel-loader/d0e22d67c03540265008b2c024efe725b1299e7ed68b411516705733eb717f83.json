{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '@/assets/DBMS_dashboard.png';\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"control-screen\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"관제 시스템\", -1 /* HOISTED */)), _createCommentVNode(\" 관제 화면 \"), $data.showControl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"관제 화면입니다\", -1 /* HOISTED */)), _createCommentVNode(\" 이미지 삽입 \"), _cache[2] || (_cache[2] = _createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"DBMS Dashboard\",\n    class: \"dashboard-image\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.checkControl && $options.checkControl(...args))\n  }, \"조작 확인\"), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","$data","showControl","_hoisted_2","src","alt","onClick","_cache","args","$options","checkControl","errorMessage","_hoisted_3","_toDisplayString"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"main-container\">\r\n    <h1>관제 시스템</h1>\r\n    <!-- 관제 화면 -->\r\n    <div v-if=\"showControl\" class=\"control-screen\">\r\n    <h2>관제 화면입니다</h2>\r\n    <!-- 이미지 삽입 -->\r\n    <img src=\"@/assets/DBMS_dashboard.png\" alt=\"DBMS Dashboard\" class=\"dashboard-image\" />\r\n    <button @click=\"checkControl\">조작 확인</button>\r\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      showControl: false,\r\n      errorMessage: '',\r\n    };\r\n  },\r\n  methods: {\r\n    goToControl() {\r\n      this.showControl = true;\r\n      this.errorMessage = ''; // 오류 메시지 초기화\r\n    },\r\n    checkControl() {\r\n      // 여기에 관제 시스템 조작을 체크하는 로직을 넣을 수 있습니다.\r\n      const isCorrect = Math.random() > 0.5; // 예시로 랜덤으로 결과를 생성 (실제 로직을 넣어야 합니다)\r\n      if (isCorrect) {\r\n        alert('조작이 성공적입니다.');\r\n      } else {\r\n        this.errorMessage = '조작이 틀렸습니다. DB 리스트로 이동합니다.';\r\n        setTimeout(() => {\r\n          this.$router.push('/dblist'); // 틀렸을 경우 dblist 페이지로 이동\r\n        }, 2000); // 2초 후 이동\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.main-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n}\r\n\r\n.control-panel {\r\n  margin: 20px;\r\n}\r\n\r\n.control-screen {\r\n  margin-top: 50px;\r\n  text-align: center;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":";OAOSA,UAAiC;;EANnCC,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;EAI4BD,KAAK,EAAC;;;EAJlCC,GAAA;EAS2BD,KAAK,EAAC;;;uBAR/BE,mBAAA,CAUM,OAVNC,UAUM,G,0BATJC,mBAAA,CAAe,YAAX,QAAM,sBACVC,mBAAA,WAAc,EACHC,KAAA,CAAAC,WAAW,I,cAAtBL,mBAAA,CAMM,OANNM,UAMM,G,0BALNJ,mBAAA,CAAiB,YAAb,UAAQ,sBACZC,mBAAA,YAAe,E,0BACfD,mBAAA,CAAsF;IAAjFK,GAAiC,EAAjCV,UAAiC;IAACW,GAAG,EAAC,gBAAgB;IAACV,KAAK,EAAC;+BAClEI,mBAAA,CAA4C;IAAnCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,OAAK,GAC1BP,KAAA,CAAAU,YAAY,I,cAArBd,mBAAA,CAAmE,KAAnEe,UAAmE,EAAAC,gBAAA,CAAnBZ,KAAA,CAAAU,YAAY,oBAThEX,mBAAA,e,KAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}