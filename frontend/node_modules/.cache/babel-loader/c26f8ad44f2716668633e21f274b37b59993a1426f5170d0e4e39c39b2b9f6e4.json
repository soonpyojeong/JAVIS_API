{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref, nextTick } from 'vue';\nimport Chart from 'chart.js/auto';\nexport default {\n  setup() {\n    const expandedDBType = ref({\n      oracle: false,\n      tibero: false\n    });\n    const selectedDB = ref(null);\n    const oracleDBList = ref([{\n      name: 'DB1'\n    }, {\n      name: 'DB2'\n    }]);\n    const tiberoDBList = ref([{\n      name: 'DB3'\n    }, {\n      name: 'DB4'\n    }]);\n    const metrics = ref(['TRANSACTIONS', 'TOTAL_SESSION', 'ACTIVE_SESSION', 'BUFFER_NOWAIT_PCT', 'REDO_NOWAIT_PCT', 'BUFFER_HIT_PCT', 'LATCH_HIT_PCT', 'LIBRARY_HIT_PCT', 'SOFT_PARSE_PCT', 'EXECUTE_TO_PARSE_PCT', 'PARSE_CPU_TO_PARSE_ELAPSD', 'NON_PARSE_CPU', 'IN_MEMORY_SORT', 'DAILY_ARCH_CNT']);\n    const toggleDBType = type => {\n      expandedDBType.value[type] = !expandedDBType.value[type];\n    };\n    const selectDB = dbName => {\n      selectedDB.value = dbName;\n      nextTick(() => {\n        renderCharts();\n      });\n    };\n    const renderCharts = () => {\n      metrics.value.forEach((metric, index) => {\n        const canvas = document.querySelector(`[ref=\"chartRef_${index}\"]`);\n        if (canvas) {\n          // 이전 차트가 있으면 제거\n          if (canvas.chart) {\n            canvas.chart.destroy();\n          }\n\n          // 새 차트 생성\n          canvas.chart = new Chart(canvas, {\n            type: 'line',\n            data: {\n              labels: Array.from({\n                length: 24\n              }, (_, i) => `${i}:00`),\n              datasets: [{\n                label: metric,\n                data: Array.from({\n                  length: 24\n                }, () => Math.floor(Math.random() * 100)),\n                borderColor: 'blue',\n                fill: false\n              }]\n            },\n            options: {\n              responsive: false,\n              maintainAspectRatio: false,\n              width: 100,\n              // 가로 크기\n              height: 90 // 세로 크기\n            }\n          });\n        }\n      });\n    };\n    return {\n      expandedDBType,\n      selectedDB,\n      oracleDBList,\n      tiberoDBList,\n      metrics,\n      toggleDBType,\n      selectDB\n    };\n  }\n};","map":{"version":3,"names":["ref","nextTick","Chart","setup","expandedDBType","oracle","tibero","selectedDB","oracleDBList","name","tiberoDBList","metrics","toggleDBType","type","value","selectDB","dbName","renderCharts","forEach","metric","index","canvas","document","querySelector","chart","destroy","data","labels","Array","from","length","_","i","datasets","label","Math","floor","random","borderColor","fill","options","responsive","maintainAspectRatio","width","height"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DailyChk.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"content\">\r\n      <!-- 왼쪽 DB 트리 구조 -->\r\n      <div class=\"db-tree\">\r\n        <ul>\r\n          <li>\r\n            <span @click=\"toggleDBType('oracle')\" class=\"tree-node\">\r\n              <span class=\"toggle-icon\">{{ expandedDBType.oracle ? '-' : '+' }}</span> ORACLE\r\n            </span>\r\n            <ul v-if=\"expandedDBType.oracle\" class=\"sub-tree\">\r\n              <li v-for=\"db in oracleDBList\" :key=\"db.name\" class=\"db-item\">\r\n                <span @click=\"selectDB(db.name)\">\r\n                  <span class=\"leaf-icon\">ㄴ</span> {{ db.name }}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <span @click=\"toggleDBType('tibero')\" class=\"tree-node\">\r\n              <span class=\"toggle-icon\">{{ expandedDBType.tibero ? '-' : '+' }}</span> TIBERO\r\n            </span>\r\n            <ul v-if=\"expandedDBType.tibero\" class=\"sub-tree\">\r\n              <li v-for=\"db in tiberoDBList\" :key=\"db.name\" class=\"db-item\">\r\n                <span @click=\"selectDB(db.name)\">\r\n                  <span class=\"leaf-icon\">ㄴ</span> {{ db.name }}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <!-- 중앙 차트 -->\r\n      <div class=\"chart-container\" v-if=\"selectedDB\">\r\n        <h3>{{ selectedDB }} - Metrics</h3>\r\n        <div class=\"charts-row\">\r\n          <div v-for=\"(metric, index) in metrics\" :key=\"metric\" class=\"metric-chart\">\r\n            <h4>{{ metric }}</h4>\r\n            <canvas :ref=\"`chartRef_${index}`\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, nextTick } from 'vue';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n  setup() {\r\n    const expandedDBType = ref({ oracle: false, tibero: false });\r\n    const selectedDB = ref(null);\r\n    const oracleDBList = ref([{ name: 'DB1' }, { name: 'DB2' }]);\r\n    const tiberoDBList = ref([{ name: 'DB3' }, { name: 'DB4' }]);\r\n    const metrics = ref([\r\n      'TRANSACTIONS', 'TOTAL_SESSION', 'ACTIVE_SESSION',\r\n      'BUFFER_NOWAIT_PCT', 'REDO_NOWAIT_PCT', 'BUFFER_HIT_PCT',\r\n      'LATCH_HIT_PCT', 'LIBRARY_HIT_PCT', 'SOFT_PARSE_PCT',\r\n      'EXECUTE_TO_PARSE_PCT', 'PARSE_CPU_TO_PARSE_ELAPSD', 'NON_PARSE_CPU',\r\n      'IN_MEMORY_SORT', 'DAILY_ARCH_CNT'\r\n    ]);\r\n\r\n    const toggleDBType = (type) => {\r\n      expandedDBType.value[type] = !expandedDBType.value[type];\r\n    };\r\n\r\n    const selectDB = (dbName) => {\r\n      selectedDB.value = dbName;\r\n      nextTick(() => {\r\n        renderCharts();\r\n      });\r\n    };\r\n\r\n    const renderCharts = () => {\r\n      metrics.value.forEach((metric, index) => {\r\n        const canvas = document.querySelector(`[ref=\"chartRef_${index}\"]`);\r\n        if (canvas) {\r\n          // 이전 차트가 있으면 제거\r\n          if (canvas.chart) {\r\n            canvas.chart.destroy();\r\n          }\r\n\r\n          // 새 차트 생성\r\n          canvas.chart = new Chart(canvas, {\r\n            type: 'line',\r\n            data: {\r\n              labels: Array.from({ length: 24 }, (_, i) => `${i}:00`),\r\n              datasets: [{\r\n                label: metric,\r\n                data: Array.from({ length: 24 }, () => Math.floor(Math.random() * 100)),\r\n                borderColor: 'blue',\r\n                fill: false\r\n              }]\r\n            },\r\n            options: {\r\n              responsive: false,\r\n              maintainAspectRatio: false,\r\n              width: 100,  // 가로 크기\r\n              height: 90  // 세로 크기\r\n            }\r\n          });\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      expandedDBType,\r\n      selectedDB,\r\n      oracleDBList,\r\n      tiberoDBList,\r\n      metrics,\r\n      toggleDBType,\r\n      selectDB\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.content {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n}\r\n.db-tree {\r\n  width: 250px;\r\n  padding: 10px;\r\n  border-right: 2px solid #ddd;\r\n  background-color: #f9f9f9;\r\n  border-radius: 5px;\r\n}\r\n.db-tree ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n.tree-node {\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: background 0.3s;\r\n}\r\n.tree-node:hover {\r\n  background: #e0e0e0;\r\n  border-radius: 5px;\r\n}\r\n.toggle-icon {\r\n  font-size: 14px;\r\n  margin-right: 5px;\r\n  color: #007bff;\r\n}\r\n.sub-tree {\r\n  padding-left: 15px;\r\n  border-left: 2px solid #ddd;\r\n  margin-top: 5px;\r\n}\r\n.db-item {\r\n  padding-left: 20px;\r\n  cursor: pointer;\r\n  transition: background 0.3s;\r\n}\r\n.db-item:hover {\r\n  background: #e8f0ff;\r\n  border-radius: 3px;\r\n}\r\n.leaf-icon {\r\n  color: #28a745;\r\n  font-weight: bold;\r\n  margin-right: 5px;\r\n}\r\n.chart-container {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.charts-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n}\r\n.metric-chart {\r\n  width: 200px;\r\n  height: 150px;\r\n  margin: 5px;\r\n}\r\n.metric-chart canvas {\r\n  width: 100px !important;\r\n  height: 90px !important;\r\n}\r\n.metric-chart h4 {\r\n  text-align: center;\r\n  font-size: 10px;\r\n  margin: 0;\r\n}\r\n</style>\r\n"],"mappings":";;AAgDA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,OAAOC,KAAI,MAAO,eAAe;AAEjC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,cAAa,GAAIJ,GAAG,CAAC;MAAEK,MAAM,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAM,CAAC,CAAC;IAC5D,MAAMC,UAAS,GAAIP,GAAG,CAAC,IAAI,CAAC;IAC5B,MAAMQ,YAAW,GAAIR,GAAG,CAAC,CAAC;MAAES,IAAI,EAAE;IAAM,CAAC,EAAE;MAAEA,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC;IAC5D,MAAMC,YAAW,GAAIV,GAAG,CAAC,CAAC;MAAES,IAAI,EAAE;IAAM,CAAC,EAAE;MAAEA,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC;IAC5D,MAAME,OAAM,GAAIX,GAAG,CAAC,CAClB,cAAc,EAAE,eAAe,EAAE,gBAAgB,EACjD,mBAAmB,EAAE,iBAAiB,EAAE,gBAAgB,EACxD,eAAe,EAAE,iBAAiB,EAAE,gBAAgB,EACpD,sBAAsB,EAAE,2BAA2B,EAAE,eAAe,EACpE,gBAAgB,EAAE,gBAAe,CAClC,CAAC;IAEF,MAAMY,YAAW,GAAKC,IAAI,IAAK;MAC7BT,cAAc,CAACU,KAAK,CAACD,IAAI,IAAI,CAACT,cAAc,CAACU,KAAK,CAACD,IAAI,CAAC;IAC1D,CAAC;IAED,MAAME,QAAO,GAAKC,MAAM,IAAK;MAC3BT,UAAU,CAACO,KAAI,GAAIE,MAAM;MACzBf,QAAQ,CAAC,MAAM;QACbgB,YAAY,CAAC,CAAC;MAChB,CAAC,CAAC;IACJ,CAAC;IAED,MAAMA,YAAW,GAAIA,CAAA,KAAM;MACzBN,OAAO,CAACG,KAAK,CAACI,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QACvC,MAAMC,MAAK,GAAIC,QAAQ,CAACC,aAAa,CAAC,kBAAkBH,KAAK,IAAI,CAAC;QAClE,IAAIC,MAAM,EAAE;UACV;UACA,IAAIA,MAAM,CAACG,KAAK,EAAE;YAChBH,MAAM,CAACG,KAAK,CAACC,OAAO,CAAC,CAAC;UACxB;;UAEA;UACAJ,MAAM,CAACG,KAAI,GAAI,IAAItB,KAAK,CAACmB,MAAM,EAAE;YAC/BR,IAAI,EAAE,MAAM;YACZa,IAAI,EAAE;cACJC,MAAM,EAAEC,KAAK,CAACC,IAAI,CAAC;gBAAEC,MAAM,EAAE;cAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,GAAGA,CAAC,KAAK,CAAC;cACvDC,QAAQ,EAAE,CAAC;gBACTC,KAAK,EAAEf,MAAM;gBACbO,IAAI,EAAEE,KAAK,CAACC,IAAI,CAAC;kBAAEC,MAAM,EAAE;gBAAG,CAAC,EAAE,MAAMK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;gBACvEC,WAAW,EAAE,MAAM;gBACnBC,IAAI,EAAE;cACR,CAAC;YACH,CAAC;YACDC,OAAO,EAAE;cACPC,UAAU,EAAE,KAAK;cACjBC,mBAAmB,EAAE,KAAK;cAC1BC,KAAK,EAAE,GAAG;cAAG;cACbC,MAAM,EAAE,EAAC,CAAG;YACd;UACF,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;MACLxC,cAAc;MACdG,UAAU;MACVC,YAAY;MACZE,YAAY;MACZC,OAAO;MACPC,YAAY;MACZG;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}