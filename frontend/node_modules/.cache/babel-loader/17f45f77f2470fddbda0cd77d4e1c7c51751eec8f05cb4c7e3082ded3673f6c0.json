{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"DB 리스트\", -1 /* HOISTED */)), $data.dbList.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"DB 이름\"), _createElementVNode(\"th\", null, \"설명\"), _createElementVNode(\"th\", null, \"호스트\"), _createElementVNode(\"th\", null, \"포트\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dbList, (db, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(db.dbName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbDescript), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.hostname), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.port), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"데이터가 없습니다.\")), _createCommentVNode(\" 데이터가 없을 때 표시 \")]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","dbList","length","_hoisted_1","_Fragment","_renderList","db","index","_toDisplayString","dbName","dbDescript","hostname","port","_hoisted_2","_createCommentVNode"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DBList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>DB 리스트</h2>\r\n    <table v-if=\"dbList.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <th>DB 이름</th>\r\n          <th>설명</th>\r\n          <th>호스트</th>\r\n          <th>포트</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(db, index) in dbList\" :key=\"index\">\r\n          <td>{{ db.dbName }}</td>\r\n          <td>{{ db.dbDescript }}</td>\r\n          <td>{{ db.hostname }}</td>\r\n          <td>{{ db.port }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>데이터가 없습니다.</p> <!-- 데이터가 없을 때 표시 -->\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbList: [] // 데이터를 저장할 배열\r\n    };\r\n  },\r\nmounted() {\r\n    // 컴포넌트가 마운트된 후에 API 호출\r\n    axios\r\n      .get(\"http://localhost:8080/api/db-list/all\")  // Spring Boot API 호출\r\n      .then((response) => {\r\n        console.log('----------------------------');  // 콘솔에서 데이터 확인\r\n        console.log(response.data);  // 콘솔에서 데이터 확인\r\n        this.dbList = response.data; // dbList에 데이터 할당\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error); // 오류 처리\r\n      });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\nh2 {\r\n  color: #FF5722;\r\n\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  color: black;\r\n}\r\nth, td {\r\n  visibility: visible; /* 보이도록 설정 */\r\n  display: table-cell; /* display를 정상 상태로 설정 */\r\n  color: black; /* 글자 색상 */\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n  color: black;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAqBM,c,0BApBJC,mBAAA,CAAe,YAAX,QAAM,sBACGC,KAAA,CAAAC,MAAM,CAACC,MAAM,Q,cAA1BJ,mBAAA,CAiBQ,SApBZK,UAAA,G,0BAIMJ,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAW,YAAP,IAAE,E,wBAGVA,mBAAA,CAOQ,iB,kBANND,mBAAA,CAKKM,SAAA,QAlBbC,WAAA,CAakCL,KAAA,CAAAC,MAAM,EAbxC,CAaoBK,EAAE,EAAEC,KAAK;yBAArBT,mBAAA,CAKK;MAL8BD,GAAG,EAAEU;IAAK,IAC3CR,mBAAA,CAAwB,YAAAS,gBAAA,CAAjBF,EAAE,CAACG,MAAM,kBAChBV,mBAAA,CAA4B,YAAAS,gBAAA,CAArBF,EAAE,CAACI,UAAU,kBACpBX,mBAAA,CAA0B,YAAAS,gBAAA,CAAnBF,EAAE,CAACK,QAAQ,kBAClBZ,mBAAA,CAAsB,YAAAS,gBAAA,CAAfF,EAAE,CAACM,IAAI,iB;uDAIpBd,mBAAA,CAAwB,KArB5Be,UAAA,EAqBc,YAAU,IAAKC,mBAAA,kBAAqB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}