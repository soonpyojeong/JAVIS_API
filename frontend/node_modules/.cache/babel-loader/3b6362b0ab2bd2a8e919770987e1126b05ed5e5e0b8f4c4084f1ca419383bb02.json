{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withKeys as _withKeys } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onKeyup\"];\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"임계치 리스트\", -1 /* HOISTED */)), _createCommentVNode(\" 검색 입력 필드 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"DB 이름 또는 Tablespace 검색\",\n    style: {\n      \"margin-bottom\": \"10px\",\n      \"padding\": \"5px\",\n      \"width\": \"300px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"table\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"DB 이름\"), _createElementVNode(\"th\", null, \"Tablespace\"), _createElementVNode(\"th\", null, \"임계치 (MB)\"), _createElementVNode(\"th\", null, \"DB 타입\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [_createCommentVNode(\" 필터링된 데이터를 표시 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredData, (threshold, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(threshold.dbName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(threshold.tablespaceName), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createCommentVNode(\" 클릭하면 인라인 편집 가능 \"), $data.editingIndex !== index ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      onClick: $event => $options.startEditing(index, threshold.thresMb),\n      style: {\n        \"cursor\": \"pointer\"\n      }\n    }, _toDisplayString(threshold.thresMb), 9 /* TEXT, PROPS */, _hoisted_1)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 1,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editedValue = $event),\n      onKeyup: _withKeys($event => $options.updateThreshold(index), [\"enter\"]),\n      onBlur: _cache[2] || (_cache[2] = (...args) => $options.cancelEditing && $options.cancelEditing(...args)),\n      type: \"number\",\n      style: {\n        \"width\": \"80px\"\n      }\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2)), [[_vModelText, $data.editedValue]])]), _createElementVNode(\"td\", null, _toDisplayString(threshold.dbType), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $options.filteredData.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"검색 결과가 없습니다.\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 검색 결과가 없을 때 \")]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_createCommentVNode","_cache","$event","$data","searchQuery","type","placeholder","style","_Fragment","_renderList","$options","filteredData","threshold","index","_toDisplayString","dbName","tablespaceName","editingIndex","onClick","startEditing","thresMb","_hoisted_1","editedValue","onKeyup","_withKeys","updateThreshold","onBlur","args","cancelEditing","_hoisted_2","dbType","length","_hoisted_3"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\ThresholdList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>임계치 리스트</h2>\r\n\r\n    <!-- 검색 입력 필드 -->\r\n    <input\r\n      v-model=\"searchQuery\"\r\n      type=\"text\"\r\n      placeholder=\"DB 이름 또는 Tablespace 검색\"\r\n      style=\"margin-bottom: 10px; padding: 5px; width: 300px;\"\r\n    />\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>DB 이름</th>\r\n          <th>Tablespace</th>\r\n          <th>임계치 (MB)</th>\r\n          <th>DB 타입</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <!-- 필터링된 데이터를 표시 -->\r\n        <tr v-for=\"(threshold, index) in filteredData\" :key=\"index\">\r\n          <td>{{ threshold.dbName }}</td>\r\n          <td>{{ threshold.tablespaceName }}</td>\r\n          <td>\r\n            <!-- 클릭하면 인라인 편집 가능 -->\r\n            <span\r\n              v-if=\"editingIndex !== index\"\r\n              @click=\"startEditing(index, threshold.thresMb)\"\r\n              style=\"cursor: pointer;\"\r\n            >\r\n              {{ threshold.thresMb }}\r\n            </span>\r\n            <input\r\n              v-else\r\n              v-model=\"editedValue\"\r\n              @keyup.enter=\"updateThreshold(index)\"\r\n              @blur=\"cancelEditing\"\r\n              type=\"number\"\r\n              style=\"width: 80px;\"\r\n            />\r\n          </td>\r\n          <td>{{ threshold.dbType }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-if=\"filteredData.length === 0\">검색 결과가 없습니다.</p> <!-- 검색 결과가 없을 때 -->\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\nh2 {\r\n  color: #FF5722;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      thresholds: [], // 원본 데이터\r\n      searchQuery: \"\", // 검색어 입력값\r\n      editingIndex: null, // 현재 편집 중인 행의 인덱스\r\n      editedValue: null, // 편집 중인 값\r\n    };\r\n  },\r\n  computed: {\r\n    // 검색어에 따라 필터링된 데이터를 반환\r\n    filteredData() {\r\n      const query = this.searchQuery.toLowerCase();\r\n      return this.thresholds.filter((threshold) => {\r\n        return (\r\n          threshold.dbName.toLowerCase().includes(query) ||\r\n          threshold.tablespaceName.toLowerCase().includes(query)\r\n        );\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    // 편집 시작\r\n    startEditing(index, currentValue) {\r\n      this.editingIndex = index;\r\n      this.editedValue = currentValue;\r\n    },\r\n    // 편집 취소\r\n    cancelEditing() {\r\n      this.editingIndex = null;\r\n      this.editedValue = null;\r\n    },\r\n    // 임계치 업데이트\r\n    updateThreshold(index) {\r\n      const updatedThreshold = {\r\n        ...this.thresholds[index],\r\n        thresMb: this.editedValue,\r\n      };\r\n\r\n      // 서버에 업데이트 요청\r\n      axios\r\n        .put(`http://localhost:8080/api/threshold/${updatedThreshold.id}`, {\r\n          thresMb: this.editedValue,\r\n        })\r\n        .then(() => {\r\n          // 로컬 데이터 업데이트 및 편집 종료\r\n          this.thresholds[index].thresMb = this.editedValue;\r\n          this.cancelEditing();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"임계치 업데이트 오류:\", error);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    // API 호출\r\n    axios\r\n      .get(\"http://localhost:8080/api/threshold/all\")\r\n      .then((response) => {\r\n        console.log(\"--------------threshold console data log--------------\");\r\n        console.log(response.data);\r\n        this.thresholds = response.data; // 데이터 저장\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";mBAAA;mBAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAiDM,c,0BAhDJC,mBAAA,CAAgB,YAAZ,SAAO,sBAEXC,mBAAA,cAAiB,E,gBACjBD,mBAAA,CAKE;IAVN,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMeC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,wBAAwB;IACpCC,KAAwD,EAAxD;MAAA;MAAA;MAAA;IAAA;iDAHSJ,KAAA,CAAAC,WAAW,E,GAMtBL,mBAAA,CAmCQ,gB,0BAlCNA,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAc,YAAV,OAAK,E,wBAGbA,mBAAA,CAyBQ,gBAxBNC,mBAAA,kBAAqB,G,kBACrBF,mBAAA,CAsBKU,SAAA,QA7CbC,WAAA,CAuByCC,QAAA,CAAAC,YAAY,EAvBrD,CAuBoBC,SAAS,EAAEC,KAAK;yBAA5Bf,mBAAA,CAsBK;MAtB2CD,GAAG,EAAEgB;IAAK,IACxDd,mBAAA,CAA+B,YAAAe,gBAAA,CAAxBF,SAAS,CAACG,MAAM,kBACvBhB,mBAAA,CAAuC,YAAAe,gBAAA,CAAhCF,SAAS,CAACI,cAAc,kBAC/BjB,mBAAA,CAiBK,aAhBHC,mBAAA,oBAAuB,EAEfG,KAAA,CAAAc,YAAY,KAAKJ,KAAK,I,cAD9Bf,mBAAA,CAMO;MAlCnBD,GAAA;MA8BeqB,OAAK,EAAAhB,MAAA,IAAEQ,QAAA,CAAAS,YAAY,CAACN,KAAK,EAAED,SAAS,CAACQ,OAAO;MAC7Cb,KAAwB,EAAxB;QAAA;MAAA;wBAEGK,SAAS,CAACQ,OAAO,wBAjClCC,UAAA,K,+BAmCYvB,mBAAA,CAOE;MA1CdD,GAAA;MAAA,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqCuBC,KAAA,CAAAmB,WAAW,GAAApB,MAAA;MACnBqB,OAAK,EAtCpBC,SAAA,CAAAtB,MAAA,IAsC4BQ,QAAA,CAAAe,eAAe,CAACZ,KAAK;MAClCa,MAAI,EAAAzB,MAAA,QAAAA,MAAA,UAAA0B,IAAA,KAAEjB,QAAA,CAAAkB,aAAA,IAAAlB,QAAA,CAAAkB,aAAA,IAAAD,IAAA,CAAa;MACpBtB,IAAI,EAAC,QAAQ;MACbE,KAAoB,EAApB;QAAA;MAAA;6CAzCdsB,UAAA,K,cAqCuB1B,KAAA,CAAAmB,WAAW,E,KAOxBvB,mBAAA,CAA+B,YAAAe,gBAAA,CAAxBF,SAAS,CAACkB,MAAM,iB;sCAKpBpB,QAAA,CAAAC,YAAY,CAACoB,MAAM,U,cAA5BjC,mBAAA,CAAoD,KAjDxDkC,UAAA,EAiDwC,cAAY,KAjDpDhC,mBAAA,gBAiDyDA,mBAAA,iBAAoB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}