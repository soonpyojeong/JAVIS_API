{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"tabs\"\n};\nconst _hoisted_3 = {\n  class: \"content\"\n};\nconst _hoisted_4 = {\n  class: \"db-tree\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_10 = {\n  ref: \"chartCanvas\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 상단 DB 타입 선택 (탭) \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"tab\", {\n      active: _ctx.dbType === 'ORACLE'\n    }]),\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.dbType = 'ORACLE')\n  }, \"ORACLE\", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"tab\", {\n      active: _ctx.dbType === 'TIBERO'\n    }]),\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.dbType = 'TIBERO')\n  }, \"TIBERO\", 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 왼쪽 DB 트리 구조 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createElementVNode(\"span\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.toggleDBType('ORACLE'))\n  }, \"ORACLE\"), $setup.expandedDBType === 'ORACLE' ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.oracleDBList, db => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: db.name,\n      onClick: $event => $setup.selectDB(db.name)\n    }, _toDisplayString(db.name), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"li\", null, [_createElementVNode(\"span\", {\n    onClick: _cache[3] || (_cache[3] = $event => $setup.toggleDBType('TIBERO'))\n  }, \"TIBERO\"), $setup.expandedDBType === 'TIBERO' ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tiberoDBList, db => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: db.name,\n      onClick: $event => $setup.selectDB(db.name)\n    }, _toDisplayString(db.name), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])])]), _createCommentVNode(\" 중앙 차트 \"), $setup.selectedDB ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"h3\", null, _toDisplayString($setup.selectedDB) + \" - Metrics\", 1 /* TEXT */), _createElementVNode(\"canvas\", _hoisted_10, null, 512 /* NEED_PATCH */)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_normalizeClass","active","_ctx","dbType","onClick","_cache","$event","_hoisted_3","_hoisted_4","$setup","toggleDBType","expandedDBType","_hoisted_5","_Fragment","_renderList","oracleDBList","db","name","selectDB","_hoisted_6","_hoisted_7","tiberoDBList","_hoisted_8","selectedDB","_hoisted_9","_toDisplayString","_hoisted_10"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DailyChk.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- 상단 DB 타입 선택 (탭) -->\r\n    <div class=\"tabs\">\r\n      <div class=\"tab\" :class=\"{ active: dbType === 'ORACLE' }\" @click=\"dbType = 'ORACLE'\">ORACLE</div>\r\n      <div class=\"tab\" :class=\"{ active: dbType === 'TIBERO' }\" @click=\"dbType = 'TIBERO'\">TIBERO</div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n      <!-- 왼쪽 DB 트리 구조 -->\r\n      <div class=\"db-tree\">\r\n        <ul>\r\n          <li>\r\n            <span @click=\"toggleDBType('ORACLE')\">ORACLE</span>\r\n            <ul v-if=\"expandedDBType === 'ORACLE'\">\r\n              <li v-for=\"db in oracleDBList\" :key=\"db.name\" @click=\"selectDB(db.name)\">\r\n                {{ db.name }}\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <span @click=\"toggleDBType('TIBERO')\">TIBERO</span>\r\n            <ul v-if=\"expandedDBType === 'TIBERO'\">\r\n              <li v-for=\"db in tiberoDBList\" :key=\"db.name\" @click=\"selectDB(db.name)\">\r\n                {{ db.name }}\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <!-- 중앙 차트 -->\r\n      <div class=\"chart-container\" v-if=\"selectedDB\">\r\n        <h3>{{ selectedDB }} - Metrics</h3>\r\n        <canvas ref=\"chartCanvas\"></canvas>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default {\r\n  setup() {\r\n    const expandedDBType = ref(null);\r\n    const selectedDB = ref(null);\r\n    const chartCanvas = ref(null);\r\n    let chartInstance = null;\r\n\r\n    const oracleDBList = ref([\r\n      { name: 'ORACLE_DB1' },\r\n      { name: 'ORACLE_DB2' },\r\n      { name: 'ORACLE_DB3' }\r\n    ]);\r\n\r\n    const tiberoDBList = ref([\r\n      { name: 'TIBERO_DB1' },\r\n      { name: 'TIBERO_DB2' },\r\n      { name: 'TIBERO_DB3' }\r\n    ]);\r\n\r\n    const metrics = ref([\r\n      'TRANSACTIONS', 'TOTAL_SESSION', 'ACTIVE_SESSION',\r\n      'BUFFER_NOWAIT_PCT', 'REDO_NOWAIT_PCT', 'BUFFER_HIT_PCT',\r\n      'LATCH_HIT_PCT', 'LIBRARY_HIT_PCT', 'SOFT_PARSE_PCT',\r\n      'EXECUTE_TO_PARSE_PCT', 'PARSE_CPU_TO_PARSE_ELAPSD',\r\n      'NON_PARSE_CPU', 'IN_MEMORY_SORT', 'DAILY_ARCH_CNT'\r\n    ]);\r\n\r\n    const toggleDBType = (type) => {\r\n      expandedDBType.value = expandedDBType.value === type ? null : type;\r\n    };\r\n\r\n    const selectDB = (dbName) => {\r\n      selectedDB.value = dbName;\r\n      createChart();\r\n    };\r\n\r\n    const createChart = () => {\r\n      if (chartInstance) {\r\n        chartInstance.destroy();\r\n      }\r\n      if (chartCanvas.value) {\r\n        chartInstance = new Chart(chartCanvas.value, {\r\n          type: 'line',\r\n          data: {\r\n            labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00'],\r\n            datasets: metrics.value.map(metric => ({\r\n              label: metric,\r\n              data: Array.from({ length: 6 }, () => Math.floor(Math.random() * 100)),\r\n              borderColor: `hsl(${Math.random() * 360}, 70%, 50%)`,\r\n              fill: false\r\n            }))\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            plugins: { legend: { position: 'top' } }\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    watch(selectedDB, createChart);\r\n\r\n    onMounted(() => {\r\n      if (selectedDB.value) {\r\n        createChart();\r\n      }\r\n    });\r\n\r\n    return {\r\n      expandedDBType,\r\n      selectedDB,\r\n      oracleDBList,\r\n      tiberoDBList,\r\n      metrics,\r\n      chartCanvas,\r\n      toggleDBType,\r\n      selectDB\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.tabs {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  border-bottom: 2px solid #ddd;\r\n}\r\n.tab {\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border-bottom: 3px solid transparent;\r\n}\r\n.tab.active {\r\n  border-bottom: 3px solid #007bff;\r\n  font-weight: bold;\r\n  color: #007bff;\r\n}\r\n.content {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n}\r\n.db-tree {\r\n  width: 250px;\r\n  padding-right: 20px;\r\n  border-right: 2px solid #ddd;\r\n}\r\n.db-tree ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n.db-tree li {\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n.db-tree li:hover {\r\n  background: #f0f0f0;\r\n}\r\n.chart-container {\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAM;;EAKZA,KAAK,EAAC;AAAS;;EAEbA,KAAK,EAAC;AAAS;;EAV1BC,GAAA;AAAA;mBAAA;;EAAAA,GAAA;AAAA;mBAAA;;EAAAA,GAAA;EAgCWD,KAAK,EAAC;;;EAEDE,GAAG,EAAC;AAAa;;uBAjC/BC,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,qBAAwB,EACxBC,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAAiG;IAA5FN,KAAK,EAJhBQ,eAAA,EAIiB,KAAK;MAAAC,MAAA,EAAmBC,IAAA,CAAAC,MAAM;IAAA;IAAkBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAC,MAAM;KAAa,QAAM,kBAC3FL,mBAAA,CAAiG;IAA5FN,KAAK,EALhBQ,eAAA,EAKiB,KAAK;MAAAC,MAAA,EAAmBC,IAAA,CAAAC,MAAM;IAAA;IAAkBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAC,MAAM;KAAa,QAAM,iB,GAG7FL,mBAAA,CA4BM,OA5BNS,UA4BM,GA3BJV,mBAAA,iBAAoB,EACpBC,mBAAA,CAmBM,OAnBNU,UAmBM,GAlBJV,mBAAA,CAiBK,aAhBHA,mBAAA,CAOK,aANHA,mBAAA,CAAmD;IAA5CM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEG,MAAA,CAAAC,YAAY;KAAY,QAAM,GAClCD,MAAA,CAAAE,cAAc,iB,cAAxBhB,mBAAA,CAIK,MAlBjBiB,UAAA,I,kBAecjB,mBAAA,CAEKkB,SAAA,QAjBnBC,WAAA,CAe+BL,MAAA,CAAAM,YAAY,EAAlBC,EAAE;yBAAbrB,mBAAA,CAEK;MAF2BF,GAAG,EAAEuB,EAAE,CAACC,IAAI;MAAGb,OAAK,EAAAE,MAAA,IAAEG,MAAA,CAAAS,QAAQ,CAACF,EAAE,CAACC,IAAI;wBACjED,EAAE,CAACC,IAAI,wBAhB1BE,UAAA;sCAAAtB,mBAAA,e,GAoBUC,mBAAA,CAOK,aANHA,mBAAA,CAAmD;IAA5CM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEG,MAAA,CAAAC,YAAY;KAAY,QAAM,GAClCD,MAAA,CAAAE,cAAc,iB,cAAxBhB,mBAAA,CAIK,MA1BjByB,UAAA,I,kBAuBczB,mBAAA,CAEKkB,SAAA,QAzBnBC,WAAA,CAuB+BL,MAAA,CAAAY,YAAY,EAAlBL,EAAE;yBAAbrB,mBAAA,CAEK;MAF2BF,GAAG,EAAEuB,EAAE,CAACC,IAAI;MAAGb,OAAK,EAAAE,MAAA,IAAEG,MAAA,CAAAS,QAAQ,CAACF,EAAE,CAACC,IAAI;wBACjED,EAAE,CAACC,IAAI,wBAxB1BK,UAAA;sCAAAzB,mBAAA,e,OA+BMA,mBAAA,WAAc,EACqBY,MAAA,CAAAc,UAAU,I,cAA7C5B,mBAAA,CAGM,OAHN6B,UAGM,GAFJ1B,mBAAA,CAAmC,YAAA2B,gBAAA,CAA5BhB,MAAA,CAAAc,UAAU,IAAG,YAAU,iBAC9BzB,mBAAA,CAAmC,UAAnC4B,WAAmC,8B,KAlC3C7B,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}