{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      dbList: [],\n      sortKey: \"\",\n      sortAsc: true,\n      showRegisterForm: false,\n      newDb: {\n        dbType: \"\",\n        dbName: \"\",\n        assets: \"\",\n        hostname: \"\",\n        pubIp: \"\",\n        vip: \"\",\n        liveChk: \"N\",\n        // 기본값 N\n        sizeChk: \"N\",\n        // 기본값 N\n        trnBakChk: \"N\",\n        // 기본값 N\n        objSegSizeChk: \"N\",\n        // 기본값 N\n        dailyChk: \"N\" // 기본값 N\n      }\n    };\n  },\n  methods: {\n    toggleLiveChk() {\n      this.newDb.liveChk = this.newDb.liveChk === 'Y' ? 'N' : 'Y';\n    },\n    toggleSizeChk() {\n      this.newDb.sizeChk = this.newDb.sizeChk === 'Y' ? 'N' : 'Y';\n    },\n    toggleTrnBakChk() {\n      this.newDb.trnBakChk = this.newDb.trnBakChk === 'Y' ? 'N' : 'Y';\n    },\n    toggleObjSegSizeChk() {\n      this.newDb.objSegSizeChk = this.newDb.objSegSizeChk === 'Y' ? 'N' : 'Y';\n    },\n    toggleDailyChk() {\n      this.newDb.dailyChk = this.newDb.dailyChk === 'Y' ? 'N' : 'Y';\n    },\n    toggleLiveChkForDb(db) {\n      db.liveChk = db.liveChk === 'Y' ? 'N' : 'Y';\n    },\n    toggleSizeChkForDb(db) {\n      db.sizeChk = db.sizeChk === 'Y' ? 'N' : 'Y';\n    },\n    toggleTrnBakChkForDb(db) {\n      db.trnBakChk = db.trnBakChk === 'Y' ? 'N' : 'Y';\n    },\n    toggleObjSegSizeChkForDb(db) {\n      db.objSegSizeChk = db.objSegSizeChk === 'Y' ? 'N' : 'Y';\n    },\n    toggleDailyChkForDb(db) {\n      db.dailyChk = db.dailyChk === 'Y' ? 'N' : 'Y';\n    },\n    closeRegisterForm() {\n      this.showRegisterForm = false;\n    },\n    registerDb() {\n      axios.post(\"http://10.90.4.60:8080/api/db-list/register\", this.newDb).then(response => {\n        if (response.data.success) {\n          this.dbList.push(response.data.db);\n          this.closeRegisterForm();\n          alert(\"DB가 등록되었습니다.\");\n        } else {\n          alert(\"DB 등록 실패.\");\n        }\n      }).catch(error => {\n        console.error(\"DB 등록 오류:\", error);\n      });\n    }\n  },\n  mounted() {\n    axios.get(\"http://10.90.4.60:8080/api/db-list/all\").then(response => {\n      this.dbList = response.data;\n    }).catch(error => {\n      console.error(\"API 호출 오류:\", error);\n    });\n  }\n};","map":{"version":3,"names":["axios","data","dbList","sortKey","sortAsc","showRegisterForm","newDb","dbType","dbName","assets","hostname","pubIp","vip","liveChk","sizeChk","trnBakChk","objSegSizeChk","dailyChk","methods","toggleLiveChk","toggleSizeChk","toggleTrnBakChk","toggleObjSegSizeChk","toggleDailyChk","toggleLiveChkForDb","db","toggleSizeChkForDb","toggleTrnBakChkForDb","toggleObjSegSizeChkForDb","toggleDailyChkForDb","closeRegisterForm","registerDb","post","then","response","success","push","alert","catch","error","console","mounted","get"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DBList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>DB 리스트</h2>\r\n    <!-- DB 등록 버튼 -->\r\n    <button @click=\"showRegisterForm = true\" class=\"primary-btn\">DB 등록</button>\r\n\r\n    <!-- 등록 화면 모달 -->\r\n    <div v-if=\"showRegisterForm\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h3>DB 등록</h3>\r\n        <form @submit.prevent=\"registerDb\">\r\n          <label for=\"dbType\">DB 타입</label>\r\n          <input type=\"text\" id=\"dbType\" v-model=\"newDb.dbType\" required />\r\n\r\n          <label for=\"dbName\">DB 이름</label>\r\n          <input type=\"text\" id=\"dbName\" v-model=\"newDb.dbName\" required />\r\n\r\n          <label for=\"assets\">자산</label>\r\n          <input type=\"text\" id=\"assets\" v-model=\"newDb.assets\" required />\r\n\r\n          <label for=\"hostname\">호스트</label>\r\n          <input type=\"text\" id=\"hostname\" v-model=\"newDb.hostname\" required />\r\n\r\n          <label for=\"pubIp\">PubIP</label>\r\n          <input type=\"text\" id=\"pubIp\" v-model=\"newDb.pubIp\" required />\r\n\r\n          <label for=\"vip\">VIP</label>\r\n          <input type=\"text\" id=\"vip\" v-model=\"newDb.vip\" required />\r\n\r\n          <label for=\"liveChk\">생사관제</label>\r\n          <button type=\"button\" :class=\"newDb.liveChk === 'Y' ? 'on' : 'off'\" @click=\"toggleLiveChk\">\r\n            {{ newDb.liveChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <label for=\"sizeChk\">TBS 수집</label>\r\n          <button type=\"button\" :class=\"newDb.sizeChk === 'Y' ? 'on' : 'off'\" @click=\"toggleSizeChk\">\r\n            {{ newDb.sizeChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <label for=\"trnBakChk\">Sybase 트랜잭션</label>\r\n          <button type=\"button\" :class=\"newDb.trnBakChk === 'Y' ? 'on' : 'off'\" @click=\"toggleTrnBakChk\">\r\n            {{ newDb.trnBakChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <label for=\"objSegSizeChk\">OBJSIZE 수집</label>\r\n          <button type=\"button\" :class=\"newDb.objSegSizeChk === 'Y' ? 'on' : 'off'\" @click=\"toggleObjSegSizeChk\">\r\n            {{ newDb.objSegSizeChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <label for=\"dailyChk\">일일 점검</label>\r\n          <button type=\"button\" :class=\"newDb.dailyChk === 'Y' ? 'on' : 'off'\" @click=\"toggleDailyChk\">\r\n            {{ newDb.dailyChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <div class=\"modal-buttons\">\r\n            <button type=\"submit\" class=\"submit-btn\">등록</button>\r\n            <button @click=\"closeRegisterForm\" class=\"cancel-btn\">취소</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- DB 리스트 테이블 -->\r\n    <table v-if=\"dbList.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"center\" @click=\"sortTable('id')\">ID</th>\r\n          <th @click=\"sortTable('assets')\">자산</th>\r\n          <th @click=\"sortTable('dbDescript')\">설명</th>\r\n          <th @click=\"sortTable('hostname')\">호스트</th>\r\n          <th @click=\"sortTable('pubIp')\">PubIP</th>\r\n          <th @click=\"sortTable('vip')\">VIP</th>\r\n          <th @click=\"sortTable('dbType')\">DB_TYPE</th>\r\n          <th @click=\"sortTable('dbName')\">DB 이름</th>\r\n          <th class=\"center\" @click=\"sortTable('liveChk')\">생사관제</th>\r\n          <th class=\"center\" @click=\"sortTable('sizeChk')\">TBS수집</th>\r\n          <th class=\"center\" @click=\"sortTable('trnBakChk')\">Sybase트렌젝션</th>\r\n          <th class=\"center\" @click=\"sortTable('objSegSizeChk')\">OBJSIZE수집</th>\r\n          <th class=\"center\" @click=\"sortTable('dailyChk')\">일일점검</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(db, index) in dbList\" :key=\"index\">\r\n          <td class=\"center\">{{ db.id }}</td>\r\n          <td>{{ db.assets }}</td>\r\n          <td>{{ db.dbDescript }}</td>\r\n          <td>{{ db.hostname }}</td>\r\n          <td>{{ db.pubIp }}</td>\r\n          <td>{{ db.vip }}</td>\r\n          <td>{{ db.dbType }}</td>\r\n          <td>{{ db.dbName }}</td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.liveChk === 'Y' ? 'on' : 'off'\" @click=\"toggleLiveChkForDb(db)\">\r\n              {{ db.liveChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.sizeChk === 'Y' ? 'on' : 'off'\" @click=\"toggleSizeChkForDb(db)\">\r\n              {{ db.sizeChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.trnBakChk === 'Y' ? 'on' : 'off'\" @click=\"toggleTrnBakChkForDb(db)\">\r\n              {{ db.trnBakChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.objSegSizeChk === 'Y' ? 'on' : 'off'\" @click=\"toggleObjSegSizeChkForDb(db)\">\r\n              {{ db.objSegSizeChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.dailyChk === 'Y' ? 'on' : 'off'\" @click=\"toggleDailyChkForDb(db)\">\r\n              {{ db.dailyChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-else>데이터가 없습니다.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbList: [],\r\n      sortKey: \"\",\r\n      sortAsc: true,\r\n      showRegisterForm: false,\r\n      newDb: {\r\n        dbType: \"\",\r\n        dbName: \"\",\r\n        assets: \"\",\r\n        hostname: \"\",\r\n        pubIp: \"\",\r\n        vip: \"\",\r\n        liveChk: \"N\",  // 기본값 N\r\n        sizeChk: \"N\",  // 기본값 N\r\n        trnBakChk: \"N\", // 기본값 N\r\n        objSegSizeChk: \"N\", // 기본값 N\r\n        dailyChk: \"N\", // 기본값 N\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    toggleLiveChk() {\r\n      this.newDb.liveChk = this.newDb.liveChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleSizeChk() {\r\n      this.newDb.sizeChk = this.newDb.sizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleTrnBakChk() {\r\n      this.newDb.trnBakChk = this.newDb.trnBakChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleObjSegSizeChk() {\r\n      this.newDb.objSegSizeChk = this.newDb.objSegSizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleDailyChk() {\r\n      this.newDb.dailyChk = this.newDb.dailyChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleLiveChkForDb(db) {\r\n      db.liveChk = db.liveChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleSizeChkForDb(db) {\r\n      db.sizeChk = db.sizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleTrnBakChkForDb(db) {\r\n      db.trnBakChk = db.trnBakChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleObjSegSizeChkForDb(db) {\r\n      db.objSegSizeChk = db.objSegSizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleDailyChkForDb(db) {\r\n      db.dailyChk = db.dailyChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    closeRegisterForm() {\r\n      this.showRegisterForm = false;\r\n    },\r\n    registerDb() {\r\n      axios\r\n        .post(\"http://10.90.4.60:8080/api/db-list/register\", this.newDb)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            this.dbList.push(response.data.db);\r\n            this.closeRegisterForm();\r\n            alert(\"DB가 등록되었습니다.\");\r\n          } else {\r\n            alert(\"DB 등록 실패.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"DB 등록 오류:\", error);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    axios\r\n      .get(\"http://10.90.4.60:8080/api/db-list/all\")\r\n      .then((response) => {\r\n        this.dbList = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}