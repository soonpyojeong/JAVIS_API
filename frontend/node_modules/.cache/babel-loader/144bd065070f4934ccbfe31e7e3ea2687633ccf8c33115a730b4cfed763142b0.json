{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"content\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"no-events\"\n};\nconst _hoisted_4 = {\n  class: \"controls\"\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"disabled\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.monitoringItems, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"monitoring-box\",\n      key: item.title,\n      style: _normalizeStyle(item.style)\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.events, event => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: event.id\n      }, _toDisplayString(event.message), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]), item.events.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"현재 이벤트가 없습니다.\")) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 새로고침 주기 입력 필드 및 플레이/중지 버튼 \"), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.refreshInterval = $event,\n      min: \"1\",\n      class: \"interval-input\",\n      disabled: item.isActive,\n      placeholder: \"초 단위\"\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, item.refreshInterval, void 0, {\n      number: true\n    }]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.toggleMonitoring(index),\n      class: _normalizeClass([{\n        active: item.isActive\n      }, \"monitoring-button\"])\n    }, _toDisplayString(item.isActive ? '중지' : '시작'), 11 /* TEXT, CLASS, PROPS */, _hoisted_6)])], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","monitoringItems","item","index","title","style","_normalizeStyle","_createElementVNode","_toDisplayString","_hoisted_2","events","event","id","message","length","_hoisted_3","_createCommentVNode","_hoisted_4","type","$event","refreshInterval","min","disabled","isActive","placeholder","_hoisted_5","number","onClick","$options","toggleMonitoring","_normalizeClass","active","_hoisted_6"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div\r\n      class=\"monitoring-box\"\r\n      v-for=\"(item, index) in monitoringItems\"\r\n      :key=\"item.title\"\r\n      :style=\"item.style\"\r\n    >\r\n      <h2>{{ item.title }}</h2>\r\n      <div class=\"content\">\r\n        <ul>\r\n          <li v-for=\"event in item.events\" :key=\"event.id\">\r\n            {{ event.message }}\r\n          </li>\r\n        </ul>\r\n        <div v-if=\"item.events.length === 0\" class=\"no-events\">현재 이벤트가 없습니다.</div>\r\n      </div>\r\n\r\n      <!-- 새로고침 주기 입력 필드 및 플레이/중지 버튼 -->\r\n      <div class=\"controls\">\r\n        <input\r\n          type=\"number\"\r\n          v-model.number=\"item.refreshInterval\"\r\n          min=\"1\"\r\n          class=\"interval-input\"\r\n          :disabled=\"item.isActive\"\r\n          placeholder=\"초 단위\"\r\n        />\r\n        <button @click=\"toggleMonitoring(index)\" :class=\"{ active: item.isActive }\" class=\"monitoring-button\">\r\n          {{ item.isActive ? '중지' : '시작' }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      monitoringItems: [\r\n        {\r\n          title: '테이블스페이스 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '300px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 5, // 기본 새로고침 주기 5초\r\n        },\r\n        {\r\n          title: '생사 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '900px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 5, // 기본 새로고침 주기 5초\r\n        },\r\n        {\r\n          title: '오브젝트 인밸리드 관제',\r\n          events: [{ id: 3, message: 'Invalid Object 발견: FUNCTION_A' }],\r\n          style: { position: 'absolute', top: '380px', left: '300px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 5, // 기본 새로고침 주기 5초\r\n        },\r\n        {\r\n          title: '락 리스트 관제',\r\n          events: [{ id: 4, message: 'Deadlock 발생: Session 101' }],\r\n          style: { position: 'absolute', top: '380px', left: '900px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 5, // 기본 새로고침 주기 5초\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    fetchMonitoringData(index) {\r\n      axios.get(`/api/threshold/tbsChkmon?index=${index}`)\r\n        .then(response => {\r\n          const events = response.data.map(item => ({\r\n            id: item.id,\r\n            message: `${item.dbName} DB의 사용률 ${item.chkRate}% 초과 여유공간 ${item.freeSize}Mb 남음`,\r\n          }));\r\n          this.monitoringItems[index].events = events;\r\n        })\r\n        .catch(error => {\r\n          console.error(`데이터 가져오기 실패 (index: ${index}):`, error);\r\n        });\r\n    },\r\n    toggleMonitoring(index) {\r\n      const item = this.monitoringItems[index];\r\n      if (item.isActive) {\r\n        clearInterval(item.timerId); // 타이머 중지\r\n        item.timerId = null;\r\n        item.isActive = false;\r\n      } else {\r\n        this.fetchMonitoringData(index); // 즉시 데이터 갱신\r\n        item.timerId = setInterval(() => this.fetchMonitoringData(index), item.refreshInterval * 1000); // 설정한 주기(초)로 갱신\r\n        item.isActive = true;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.dashboard {\r\n  position: relative;\r\n  height: 100vh;\r\n  background: #f9f9f9;\r\n  font-family: 'Arial', sans-serif;\r\n  overflow: hidden;\r\n}\r\n\r\n.monitoring-box {\r\n  background: white;\r\n  user-select: none;\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 15px;\r\n  cursor: grab;\r\n  transition: transform 0.2s ease, left 0.2s ease, top 0.2s ease;\r\n  position: absolute;\r\n  height: auto;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.monitoring-box h2 {\r\n  position: relative;\r\n  background: white;\r\n  z-index: 2;\r\n  font-size: 18px;\r\n  margin: 0;\r\n  color: #333;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 5px 0;\r\n}\r\n\r\n.monitoring-box .content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding-top: 10px;\r\n}\r\n\r\n.monitoring-box ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.monitoring-box li {\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.monitoring-box li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.no-events {\r\n  font-size: 14px;\r\n  color: #999;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.monitoring-box {\r\n  position: relative;\r\n}\r\n\r\n/* 새로고침 주기 입력 필드 및 버튼 */\r\n.controls {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.interval-input {\r\n  width: 60px;\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.monitoring-button {\r\n  padding: 5px 15px;\r\n  font-size: 12px;\r\n  background-color: #ddd;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.monitoring-button.active {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.monitoring-button:hover {\r\n  background-color: #0056b3;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAQbA,KAAK,EAAC;AAAS;;EAT1BC,GAAA;EAe6CD,KAAK,EAAC;;;EAIxCA,KAAK,EAAC;AAAU;mBAnB3B;mBAAA;;uBACEE,mBAAA,CAgCM,OAhCNC,UAgCM,I,kBA/BJD,mBAAA,CA8BME,SAAA,QAhCVC,WAAA,CAI8BC,KAAA,CAAAC,eAAe,EAJ7C,CAIcC,IAAI,EAAEC,KAAK;yBAFrBP,mBAAA,CA8BM;MA7BJF,KAAK,EAAC,gBAAgB;MAErBC,GAAG,EAAEO,IAAI,CAACE,KAAK;MACfC,KAAK,EANZC,eAAA,CAMcJ,IAAI,CAACG,KAAK;QAElBE,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBN,IAAI,CAACE,KAAK,kBACjBG,mBAAA,CAOM,OAPNE,UAOM,GANJF,mBAAA,CAIK,c,kBAHHX,mBAAA,CAEKE,SAAA,QAbfC,WAAA,CAW8BG,IAAI,CAACQ,MAAM,EAApBC,KAAK;2BAAhBf,mBAAA,CAEK;QAF6BD,GAAG,EAAEgB,KAAK,CAACC;0BACxCD,KAAK,CAACE,OAAO;sCAGTX,IAAI,CAACQ,MAAM,CAACI,MAAM,U,cAA7BlB,mBAAA,CAA0E,OAA1EmB,UAA0E,EAAnB,eAAa,KAf5EC,mBAAA,e,GAkBMA,mBAAA,+BAAkC,EAClCT,mBAAA,CAYM,OAZNU,UAYM,G,gBAXJV,mBAAA,CAOE;MANAW,IAAI,EAAC,QAAQ;MArBvB,uBAAAC,MAAA,IAsB0BjB,IAAI,CAACkB,eAAe,GAAAD,MAAA;MACpCE,GAAG,EAAC,GAAG;MACP3B,KAAK,EAAC,gBAAgB;MACrB4B,QAAQ,EAAEpB,IAAI,CAACqB,QAAQ;MACxBC,WAAW,EAAC;4BA1BtBC,UAAA,I,cAsB0BvB,IAAI,CAACkB,eAAe,E;MAA5BM,MAAM,EAAd;IAAqC,E,IAMvCnB,mBAAA,CAES;MAFAoB,OAAK,EAAAR,MAAA,IAAES,QAAA,CAAAC,gBAAgB,CAAC1B,KAAK;MAAIT,KAAK,EA5BvDoC,eAAA;QAAAC,MAAA,EA4BmE7B,IAAI,CAACqB;MAAQ,GAAU,mBAAmB;wBAChGrB,IAAI,CAACqB,QAAQ,8CA7B1BS,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}