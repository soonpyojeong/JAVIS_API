{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"DB 리스트\", -1 /* HOISTED */)), $data.dbList.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"자산\"), _createElementVNode(\"th\", null, \"설명\"), _createElementVNode(\"th\", null, \"호스트\"), _createElementVNode(\"th\", null, \"DB_TYPE\"), _createElementVNode(\"th\", null, \"DB 이름\"), _createElementVNode(\"th\", null, \"포트\"), _createElementVNode(\"th\", null, \"생사관제\"), _createElementVNode(\"th\", null, \"TBS수집\"), _createElementVNode(\"th\", null, \"Sybase트렌젝션\"), _createElementVNode(\"th\", null, \"OBJSIZE수집\"), _createElementVNode(\"th\", null, \"일일점검\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dbList, (db, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(db.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.assets), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbDescript), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.hostname), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbType), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.pubIp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.pubIp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.liveChk), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.sizeChk), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.trnBakChk), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.objSegSizeChk), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dailyChk), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"데이터가 없습니다.\")), _createCommentVNode(\" 데이터가 없을 때 표시 \")]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","dbList","length","_hoisted_1","_Fragment","_renderList","db","index","_toDisplayString","id","assets","dbDescript","hostname","dbType","dbName","pubIp","liveChk","sizeChk","trnBakChk","objSegSizeChk","dailyChk","_hoisted_2","_createCommentVNode"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DBList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>DB 리스트</h2>\r\n    <table v-if=\"dbList.length > 0\">\r\n  <thead>\r\n     <tr>\r\n        <th>ID</th>\r\n        <th>자산</th>\r\n        <th>설명</th>\r\n        <th>호스트</th>\r\n        <th>DB_TYPE</th>\r\n        <th>DB 이름</th>\r\n        <th>포트</th>\r\n        <th>생사관제</th>\r\n        <th>TBS수집</th>\r\n        <th>Sybase트렌젝션</th>\r\n        <th>OBJSIZE수집</th>\r\n        <th>일일점검</th>\r\n     </tr>\r\n   </thead>\r\n   <tbody>\r\n     <tr v-for=\"(db, index) in dbList\" :key=\"index\">\r\n        <td>{{ db.id }}</td>\r\n        <td>{{ db.assets }}</td>\r\n        <td>{{ db.dbDescript }}</td>\r\n        <td>{{ db.hostname }}</td>\r\n        <td>{{ db.dbType }}</td>\r\n        <td>{{ db.dbName }}</td>\r\n        <td>{{ db.pubIp }}</td>\r\n        <td>{{ db.pubIp }}</td>\r\n        <td>{{ db.liveChk }}</td>\r\n        <td>{{ db.sizeChk }}</td>\r\n        <td>{{ db.trnBakChk }}</td>\r\n        <td>{{ db.objSegSizeChk }}</td>\r\n        <td>{{ db.dailyChk }}</td>\r\n     </tr>\r\n   </tbody>\r\n\r\n    </table>\r\n    <p v-else>데이터가 없습니다.</p> <!-- 데이터가 없을 때 표시 -->\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\nh2 {\r\n  color: #FF5722;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n</style>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbList: [] // 데이터를 저장할 배열\r\n    };\r\n  },\r\nmounted() {\r\n    // 컴포넌트가 마운트된 후에 API 호출\r\n    axios\r\n      .get(\"http://localhost:8080/api/db-list/all\")  // Spring Boot API 호출\r\n      .then((response) => {\r\n        console.log('----------------------------');  // 콘솔에서 데이터 확인\r\n        console.log(response.data);  // 콘솔에서 데이터 확인\r\n        this.dbList = response.data; // dbList에 데이터 할당\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error); // 오류 처리\r\n      });\r\n  }\r\n};\r\n</script>"],"mappings":";;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACEC,mBAAA,CAuCM,c,0BAtCJC,mBAAA,CAAe,YAAX,QAAM,sBACGC,KAAA,CAAAC,MAAM,CAACC,MAAM,Q,cAA1BJ,mBAAA,CAmCQ,SAtCZK,UAAA,G,0BAIEJ,mBAAA,CAeS,gBAdNA,mBAAA,CAaK,aAZFA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAgB,YAAZ,SAAO,GACXA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAa,YAAT,MAAI,E,wBAGbA,mBAAA,CAgBQ,iB,kBAfND,mBAAA,CAcKM,SAAA,QAnCVC,WAAA,CAqB+BL,KAAA,CAAAC,MAAM,EArBrC,CAqBiBK,EAAE,EAAEC,KAAK;yBAArBT,mBAAA,CAcK;MAd8BD,GAAG,EAAEU;IAAK,IAC1CR,mBAAA,CAAoB,YAAAS,gBAAA,CAAbF,EAAE,CAACG,EAAE,kBACZV,mBAAA,CAAwB,YAAAS,gBAAA,CAAjBF,EAAE,CAACI,MAAM,kBAChBX,mBAAA,CAA4B,YAAAS,gBAAA,CAArBF,EAAE,CAACK,UAAU,kBACpBZ,mBAAA,CAA0B,YAAAS,gBAAA,CAAnBF,EAAE,CAACM,QAAQ,kBAClBb,mBAAA,CAAwB,YAAAS,gBAAA,CAAjBF,EAAE,CAACO,MAAM,kBAChBd,mBAAA,CAAwB,YAAAS,gBAAA,CAAjBF,EAAE,CAACQ,MAAM,kBAChBf,mBAAA,CAAuB,YAAAS,gBAAA,CAAhBF,EAAE,CAACS,KAAK,kBACfhB,mBAAA,CAAuB,YAAAS,gBAAA,CAAhBF,EAAE,CAACS,KAAK,kBACfhB,mBAAA,CAAyB,YAAAS,gBAAA,CAAlBF,EAAE,CAACU,OAAO,kBACjBjB,mBAAA,CAAyB,YAAAS,gBAAA,CAAlBF,EAAE,CAACW,OAAO,kBACjBlB,mBAAA,CAA2B,YAAAS,gBAAA,CAApBF,EAAE,CAACY,SAAS,kBACnBnB,mBAAA,CAA+B,YAAAS,gBAAA,CAAxBF,EAAE,CAACa,aAAa,kBACvBpB,mBAAA,CAA0B,YAAAS,gBAAA,CAAnBF,EAAE,CAACc,QAAQ,iB;uDAKtBtB,mBAAA,CAAwB,KAvC5BuB,UAAA,EAuCc,YAAU,IAAKC,mBAAA,kBAAqB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}