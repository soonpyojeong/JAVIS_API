{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      dbList: [],\n      // 원본 데이터\n      sortKey: \"\",\n      // 정렬 기준 키\n      sortAsc: true // 정렬 방향 (true: 오름차순, false: 내림차순)\n    };\n  },\n  computed: {\n    // 정렬된 데이터를 반환\n    sortedDbList() {\n      if (!this.sortKey) return this.dbList; // 정렬 키가 없으면 원본 데이터 반환\n      return [...this.dbList].sort((a, b) => {\n        const valA = a[this.sortKey];\n        const valB = b[this.sortKey];\n\n        // 값 비교 (오름차순 또는 내림차순)\n        if (valA < valB) return this.sortAsc ? -1 : 1;\n        if (valA > valB) return this.sortAsc ? 1 : -1;\n        return 0;\n      });\n    }\n  },\n  methods: {\n    // 정렬 메서드\n    sortTable(key) {\n      if (this.sortKey === key) {\n        // 동일한 키 클릭 시 방향 전환\n        this.sortAsc = !this.sortAsc;\n      } else {\n        // 새로운 키로 정렬\n        this.sortKey = key;\n        this.sortAsc = true;\n      }\n    }\n  },\n  mounted() {\n    // API 호출\n    axios.get(\"http://localhost:8080/api/db-list/all\").then(response => {\n      this.dbList = response.data;\n    }).catch(error => {\n      console.error(\"API 호출 오류:\", error);\n    });\n  }\n};","map":{"version":3,"names":["axios","data","dbList","sortKey","sortAsc","computed","sortedDbList","sort","a","b","valA","valB","methods","sortTable","key","mounted","get","then","response","catch","error","console"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DBList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>DB 리스트</h2>\r\n    <table v-if=\"dbList.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <!-- 각 헤더 클릭 시 정렬 메서드 호출 -->\r\n          <th @click=\"sortTable('id')\">ID</th>\r\n          <th @click=\"sortTable('assets')\">자산</th>\r\n          <th @click=\"sortTable('dbDescript')\">설명</th>\r\n          <th @click=\"sortTable('hostname')\">호스트</th>\r\n          <th @click=\"sortTable('pubIp')\">PubIP</th>\r\n          <th @click=\"sortTable('vip')\">VIP</th>\r\n          <th @click=\"sortTable('dbType')\">DB_TYPE</th>\r\n          <th @click=\"sortTable('dbName')\">DB 이름</th>\r\n          <th @click=\"sortTable('liveChk')\">생사관제</th>\r\n          <th @click=\"sortTable('sizeChk')\">TBS수집</th>\r\n          <th @click=\"sortTable('trnBakChk')\">Sybase트렌젝션</th>\r\n          <th @click=\"sortTable('objSegSizeChk')\">OBJSIZE수집</th>\r\n          <th @click=\"sortTable('dailyChk')\">일일점검</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(db, index) in sortedDbList\" :key=\"index\">\r\n          <td>{{ db.id }}</td>\r\n          <td>{{ db.assets }}</td>\r\n          <td>{{ db.dbDescript }}</td>\r\n          <td>{{ db.hostname }}</td>\r\n          <td>{{ db.pubIp }}</td>\r\n          <td>{{ db.vip }}</td>\r\n          <td>{{ db.dbType }}</td>\r\n          <td>{{ db.dbName }}</td>\r\n          <td>{{ db.liveChk }}</td>\r\n          <td>{{ db.sizeChk }}</td>\r\n          <td>{{ db.trnBakChk }}</td>\r\n          <td>{{ db.objSegSizeChk }}</td>\r\n          <td>{{ db.dailyChk }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>데이터가 없습니다.</p> <!-- 데이터가 없을 때 표시 -->\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\nh2 {\r\n  color: #FF5722;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  cursor: pointer; /* 클릭 가능한 UI */\r\n}\r\nth, td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\nth:hover {\r\n  background-color: #ddd; /* 마우스 오버 효과 */\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbList: [], // 원본 데이터\r\n      sortKey: \"\", // 정렬 기준 키\r\n      sortAsc: true, // 정렬 방향 (true: 오름차순, false: 내림차순)\r\n    };\r\n  },\r\n  computed: {\r\n    // 정렬된 데이터를 반환\r\n    sortedDbList() {\r\n      if (!this.sortKey) return this.dbList; // 정렬 키가 없으면 원본 데이터 반환\r\n      return [...this.dbList].sort((a, b) => {\r\n        const valA = a[this.sortKey];\r\n        const valB = b[this.sortKey];\r\n\r\n        // 값 비교 (오름차순 또는 내림차순)\r\n        if (valA < valB) return this.sortAsc ? -1 : 1;\r\n        if (valA > valB) return this.sortAsc ? 1 : -1;\r\n        return 0;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    // 정렬 메서드\r\n    sortTable(key) {\r\n      if (this.sortKey === key) {\r\n        // 동일한 키 클릭 시 방향 전환\r\n        this.sortAsc = !this.sortAsc;\r\n      } else {\r\n        // 새로운 키로 정렬\r\n        this.sortKey = key;\r\n        this.sortAsc = true;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // API 호출\r\n    axios\r\n      .get(\"http://localhost:8080/api/db-list/all\")\r\n      .then((response) => {\r\n        this.dbList = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAmEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MAAE;MACZC,OAAO,EAAE,EAAE;MAAE;MACbC,OAAO,EAAE,IAAI,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAACH,OAAO,EAAE,OAAO,IAAI,CAACD,MAAM,EAAE;MACvC,OAAO,CAAC,GAAG,IAAI,CAACA,MAAM,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACrC,MAAMC,IAAG,GAAIF,CAAC,CAAC,IAAI,CAACL,OAAO,CAAC;QAC5B,MAAMQ,IAAG,GAAIF,CAAC,CAAC,IAAI,CAACN,OAAO,CAAC;;QAE5B;QACA,IAAIO,IAAG,GAAIC,IAAI,EAAE,OAAO,IAAI,CAACP,OAAM,GAAI,CAAC,IAAI,CAAC;QAC7C,IAAIM,IAAG,GAAIC,IAAI,EAAE,OAAO,IAAI,CAACP,OAAM,GAAI,IAAI,CAAC,CAAC;QAC7C,OAAO,CAAC;MACV,CAAC,CAAC;IACJ;EACF,CAAC;EACDQ,OAAO,EAAE;IACP;IACAC,SAASA,CAACC,GAAG,EAAE;MACb,IAAI,IAAI,CAACX,OAAM,KAAMW,GAAG,EAAE;QACxB;QACA,IAAI,CAACV,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO;MAC9B,OAAO;QACL;QACA,IAAI,CAACD,OAAM,GAAIW,GAAG;QAClB,IAAI,CAACV,OAAM,GAAI,IAAI;MACrB;IACF;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR;IACAf,KAAI,CACDgB,GAAG,CAAC,uCAAuC,EAC3CC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAAChB,MAAK,GAAIgB,QAAQ,CAACjB,IAAI;IAC7B,CAAC,EACAkB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}