{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      monitoringItems: [{\n        title: '테이블스페이스 관제',\n        events: [],\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '300px',\n          zIndex: 1,\n          width: '550px',\n          height: '300px'\n        },\n        isActive: false,\n        timerId: null,\n        refreshInterval: 5,\n        // 기본 새로고침 주기 5초\n        remainingTime: 5 // 남은 시간\n      }, {\n        title: '생사 관제',\n        events: [],\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '900px',\n          zIndex: 1,\n          width: '550px',\n          height: '300px'\n        },\n        isActive: false,\n        timerId: null,\n        refreshInterval: 5,\n        // 기본 새로고침 주기 5초\n        remainingTime: 5 // 남은 시간\n      }, {\n        title: '오브젝트 인밸리드 관제',\n        events: [{\n          id: 3,\n          message: 'Invalid Object 발견: FUNCTION_A'\n        }],\n        style: {\n          position: 'absolute',\n          top: '380px',\n          left: '300px',\n          zIndex: 1,\n          width: '550px',\n          height: '300px'\n        },\n        isActive: false,\n        timerId: null,\n        refreshInterval: 5,\n        // 기본 새로고침 주기 5초\n        remainingTime: 5 // 남은 시간\n      }, {\n        title: '락 리스트 관제',\n        events: [{\n          id: 4,\n          message: 'Deadlock 발생: Session 101'\n        }],\n        style: {\n          position: 'absolute',\n          top: '380px',\n          left: '900px',\n          zIndex: 1,\n          width: '550px',\n          height: '300px'\n        },\n        isActive: false,\n        timerId: null,\n        refreshInterval: 5,\n        // 기본 새로고침 주기 5초\n        remainingTime: 5 // 남은 시간\n      }]\n    };\n  },\n  methods: {\n    fetchMonitoringData(index) {\n      axios.get(`/api/threshold/tbsChkmon?index=${index}`).then(response => {\n        const events = response.data.map(item => ({\n          id: item.id,\n          message: `${item.dbName} DB의 사용률 ${item.chkRate}% 초과 여유공간 ${item.freeSize}Mb 남음`\n        }));\n        this.monitoringItems[index].events = events;\n      }).catch(error => {\n        console.error(`데이터 가져오기 실패 (index: ${index}):`, error);\n      });\n    },\n    toggleMonitoring(index) {\n      const item = this.monitoringItems[index];\n      if (item.isActive) {\n        // 중지 버튼 클릭 시 타이머 중지하고 데이터 조회도 중지\n        clearInterval(item.timerId);\n        item.timerId = null;\n        item.isActive = false;\n      } else {\n        // 시작 버튼 클릭 시 즉시 데이터 조회 후 타이머 시작\n        this.fetchMonitoringData(index);\n        item.timerId = setInterval(() => {\n          this.fetchMonitoringData(index);\n          item.remainingTime = item.refreshInterval; // 주기 초기화\n        }, item.refreshInterval * 1000); // 설정한 주기(초)로 갱신\n        item.isActive = true;\n      }\n    },\n    startCountdown(index) {\n      const item = this.monitoringItems[index];\n      if (item.isActive) {\n        item.remainingTime -= 1; // 시간이 1초씩 줄어들도록\n        if (item.remainingTime <= 0) {\n          this.fetchMonitoringData(index); // 주기가 0에 도달하면 데이터 호출\n          item.remainingTime = item.refreshInterval; // 남은 시간을 새로고침 주기로 초기화\n        }\n      }\n    }\n  },\n  mounted() {\n    // 타이머가 1초씩 감소하도록 설정\n    setInterval(() => {\n      this.monitoringItems.forEach((item, index) => {\n        this.startCountdown(index);\n      });\n    }, 1000); // 1초마다 타이머 감소\n  }\n};","map":{"version":3,"names":["axios","data","monitoringItems","title","events","style","position","top","left","zIndex","width","height","isActive","timerId","refreshInterval","remainingTime","id","message","methods","fetchMonitoringData","index","get","then","response","map","item","dbName","chkRate","freeSize","catch","error","console","toggleMonitoring","clearInterval","setInterval","startCountdown","mounted","forEach"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div\r\n      class=\"monitoring-box\"\r\n      v-for=\"(item, index) in monitoringItems\"\r\n      :key=\"item.title\"\r\n      :style=\"item.style\"\r\n    >\r\n      <h2>\r\n        {{ item.title }}\r\n        <div class=\"controls\">\r\n          <input\r\n            type=\"number\"\r\n            v-model.number=\"item.refreshInterval\"\r\n            min=\"1\"\r\n            class=\"interval-input\"\r\n            :disabled=\"item.isActive\"\r\n            placeholder=\"초 단위\"\r\n          />\r\n          <button\r\n            @click=\"toggleMonitoring(index)\"\r\n            :class=\"{ active: item.isActive }\"\r\n            class=\"monitoring-button\">\r\n            <span v-if=\"item.isActive\">■</span>\r\n            <span v-else>▶</span>\r\n          </button>\r\n        </div>\r\n      </h2>\r\n\r\n      <!-- 남은 시간 표시 -->\r\n      <div class=\"time-remaining\">\r\n        남은 시간: {{ item.remainingTime }}초\r\n      </div>\r\n\r\n      <div class=\"content\">\r\n        <ul>\r\n          <li v-for=\"event in item.events\" :key=\"event.id\">\r\n            {{ event.message }}\r\n          </li>\r\n        </ul>\r\n        <div v-if=\"item.events.length === 0\" class=\"no-events\">현재 이벤트가 없습니다.</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      monitoringItems: [\r\n        {\r\n          title: '테이블스페이스 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '300px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 5, // 기본 새로고침 주기 5초\r\n          remainingTime: 5, // 남은 시간\r\n        },\r\n        {\r\n          title: '생사 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '900px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 5, // 기본 새로고침 주기 5초\r\n          remainingTime: 5, // 남은 시간\r\n        },\r\n        {\r\n          title: '오브젝트 인밸리드 관제',\r\n          events: [{ id: 3, message: 'Invalid Object 발견: FUNCTION_A' }],\r\n          style: { position: 'absolute', top: '380px', left: '300px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 5, // 기본 새로고침 주기 5초\r\n          remainingTime: 5, // 남은 시간\r\n        },\r\n        {\r\n          title: '락 리스트 관제',\r\n          events: [{ id: 4, message: 'Deadlock 발생: Session 101' }],\r\n          style: { position: 'absolute', top: '380px', left: '900px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 5, // 기본 새로고침 주기 5초\r\n          remainingTime: 5, // 남은 시간\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    fetchMonitoringData(index) {\r\n      axios.get(`/api/threshold/tbsChkmon?index=${index}`)\r\n        .then(response => {\r\n          const events = response.data.map(item => ({\r\n            id: item.id,\r\n            message: `${item.dbName} DB의 사용률 ${item.chkRate}% 초과 여유공간 ${item.freeSize}Mb 남음`,\r\n          }));\r\n          this.monitoringItems[index].events = events;\r\n        })\r\n        .catch(error => {\r\n          console.error(`데이터 가져오기 실패 (index: ${index}):`, error);\r\n        });\r\n    },\r\n    toggleMonitoring(index) {\r\n      const item = this.monitoringItems[index];\r\n      if (item.isActive) {\r\n        // 중지 버튼 클릭 시 타이머 중지하고 데이터 조회도 중지\r\n        clearInterval(item.timerId);\r\n        item.timerId = null;\r\n        item.isActive = false;\r\n      } else {\r\n        // 시작 버튼 클릭 시 즉시 데이터 조회 후 타이머 시작\r\n        this.fetchMonitoringData(index);\r\n        item.timerId = setInterval(() => {\r\n          this.fetchMonitoringData(index);\r\n          item.remainingTime = item.refreshInterval; // 주기 초기화\r\n        }, item.refreshInterval * 1000); // 설정한 주기(초)로 갱신\r\n        item.isActive = true;\r\n      }\r\n    },\r\n    startCountdown(index) {\r\n      const item = this.monitoringItems[index];\r\n      if (item.isActive) {\r\n        item.remainingTime -= 1; // 시간이 1초씩 줄어들도록\r\n        if (item.remainingTime <= 0) {\r\n          this.fetchMonitoringData(index); // 주기가 0에 도달하면 데이터 호출\r\n          item.remainingTime = item.refreshInterval; // 남은 시간을 새로고침 주기로 초기화\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // 타이머가 1초씩 감소하도록 설정\r\n    setInterval(() => {\r\n      this.monitoringItems.forEach((item, index) => {\r\n        this.startCountdown(index);\r\n      });\r\n    }, 1000); // 1초마다 타이머 감소\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.dashboard {\r\n  position: relative;\r\n  height: 100vh;\r\n  background: #f4f7fb;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  overflow: hidden;\r\n  padding: 20px;\r\n}\r\n\r\n.monitoring-box {\r\n  background: #ffffff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  margin: 20px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  height: 350px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.monitoring-box h2 {\r\n  color: #333;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n  border-bottom: 2px solid #007bff;\r\n  padding-bottom: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.monitoring-box .content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-top: 10px;\r\n}\r\n\r\n.monitoring-box ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.monitoring-box li {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  color: #555;\r\n  background: #f9f9f9;\r\n  margin-bottom: 5px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.monitoring-box .no-events {\r\n  color: #999;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.interval-input {\r\n  width: 60px;\r\n  padding: 6px;\r\n  margin-right: 10px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.interval-input:disabled {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.monitoring-button {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 35px;\r\n  height: 35px;\r\n  font-size: 18px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.3s ease;\r\n}\r\n\r\n.monitoring-button:hover {\r\n  background-color: #0056b3;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.monitoring-button.active {\r\n  background-color: #d9534f;\r\n}\r\n\r\n.monitoring-button:focus {\r\n  outline: none;\r\n}\r\n\r\n.monitoring-button span {\r\n  font-weight: bold;\r\n}\r\n\r\n/* 남은 시간 스타일 */\r\n.time-remaining {\r\n  font-size: 16px;\r\n  color: #333;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}