{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      monitoringItems: [{\n        title: '테이블스페이스 관제',\n        events: [],\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '300px',\n          zIndex: 1,\n          width: '550px',\n          height: '300px'\n        },\n        isActive: false,\n        timerId: null,\n        refreshInterval: 500,\n        remainingTime: 500,\n        fetchMethod: this.fetchTablespaceMonitoringData\n      }, {\n        title: '생사 관제',\n        events: [],\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '900px',\n          zIndex: 1,\n          width: '550px',\n          height: '300px'\n        },\n        isActive: false,\n        timerId: null,\n        refreshInterval: 500,\n        remainingTime: 500,\n        fetchMethod: this.fetchLiveMonitoringData\n      }, {\n        title: '오브젝트 인밸리드 관제',\n        events: [{\n          id: 3,\n          message: 'Invalid Object 발견: FUNCTION_A'\n        }],\n        style: {\n          position: 'absolute',\n          top: '380px',\n          left: '300px',\n          zIndex: 1,\n          width: '550px',\n          height: '300px'\n        },\n        isActive: false,\n        timerId: null,\n        refreshInterval: 10,\n        remainingTime: 10,\n        fetchMethod: this.fetchInvalidObjectsMonitoringData\n      }, {\n        title: '락 리스트 관제',\n        events: [{\n          id: 4,\n          message: 'Deadlock 발생: Session 101'\n        }],\n        style: {\n          position: 'absolute',\n          top: '380px',\n          left: '900px',\n          zIndex: 1,\n          width: '550px',\n          height: '300px'\n        },\n        isActive: false,\n        timerId: null,\n        refreshInterval: 10,\n        remainingTime: 10,\n        fetchMethod: this.fetchLockListMonitoringData\n      }]\n    };\n  },\n  methods: {\n    async fetchTablespaceMonitoringData(index) {\n      try {\n        const response = await axios.get(`/api/tbsChkmon/all`);\n        const events = response.data.map(item => {\n          const formattedUsedSize = new Intl.NumberFormat().format(item.usedSize);\n          const formattedFreeSize = new Intl.NumberFormat().format(item.freeSize);\n          return {\n            id: item.id,\n            message: `${item.dbName} DB의 ${formattedUsedSize}MB 사용 중, 여유공간 ${formattedFreeSize}MB`\n          };\n        });\n        this.monitoringItems[index].events = events;\n      } catch (error) {\n        console.error(`테이블스페이스 데이터 가져오기 실패 (index: ${index}):`, error);\n      }\n    },\n    async fetchLiveMonitoringData(index) {\n      try {\n        const response = await axios.get(`/api/LiveChkmon/all`);\n        const events = response.data.map(item => ({\n          id: item.id,\n          message: `${item.dbDesc} 서버 상태: 오류 발생 점검 바람`\n        }));\n        this.monitoringItems[index].events = events;\n      } catch (error) {\n        console.error(`생사 데이터 가져오기 실패 (index: ${index}):`, error);\n      }\n    },\n    async fetchInvalidObjectsMonitoringData(index) {\n      console.log(\"Invalid Object 데이터 가져오기 - API 필요\");\n      this.monitoringItems[index].events = [];\n    },\n    async fetchLockListMonitoringData(index) {\n      console.log(\"Lock List 데이터 가져오기 - API 필요\");\n      this.monitoringItems[index].events = [];\n    },\n    fetchMonitoringData(index) {\n      const item = this.monitoringItems[index];\n      if (item.fetchMethod) {\n        item.fetchMethod(index);\n      }\n    },\n    toggleMonitoring(index) {\n      const item = this.monitoringItems[index];\n      if (item.isActive) {\n        // 모니터링이 활성화 상태에서 버튼 클릭시 타이머를 멈추고 상태를 비활성화로 변경\n        clearInterval(item.timerId);\n        item.timerId = null;\n        item.isActive = false;\n        item.remainingTime = item.refreshInterval; // 남은 시간을 초기화\n      } else {\n        // 모니터링이 비활성화 상태에서 버튼 클릭시 데이터 요청 후 타이머 시작\n        this.fetchMonitoringData(index); // 초기 데이터 요청\n        item.timerId = setInterval(() => {\n          if (item.remainingTime <= 0) {\n            this.fetchMonitoringData(index); // 주기적으로 데이터 요청\n            item.remainingTime = item.refreshInterval; // 남은 시간 초기화\n          } else {\n            item.remainingTime -= 1; // 타이머 감소\n          }\n        }, 1000); // 1초마다 타이머 실행\n        item.isActive = true; // 활성화 상태로 변경\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","monitoringItems","title","events","style","position","top","left","zIndex","width","height","isActive","timerId","refreshInterval","remainingTime","fetchMethod","fetchTablespaceMonitoringData","fetchLiveMonitoringData","id","message","fetchInvalidObjectsMonitoringData","fetchLockListMonitoringData","methods","index","response","get","map","item","formattedUsedSize","Intl","NumberFormat","format","usedSize","formattedFreeSize","freeSize","dbName","error","console","dbDesc","log","fetchMonitoringData","toggleMonitoring","clearInterval","setInterval"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div\r\n      class=\"monitoring-box\"\r\n      v-for=\"(item, index) in monitoringItems\"\r\n      :key=\"item.title\"\r\n      :style=\"item.style\"\r\n    >\r\n      <h2>\r\n        {{ item.title }}\r\n        <div class=\"controls\">\r\n          <input\r\n            type=\"number\"\r\n            v-model.number=\"item.refreshInterval\"\r\n            min=\"1\"\r\n            class=\"interval-input\"\r\n            :disabled=\"item.isActive\"\r\n            placeholder=\"초 단위\"\r\n          />\r\n          <button\r\n            @click=\"toggleMonitoring(index)\"\r\n            :class=\"{ active: item.isActive }\"\r\n            class=\"monitoring-button\"\r\n          >\r\n            <span v-if=\"item.isActive\">■</span>\r\n            <span v-else>▶</span>\r\n          </button>\r\n          <div class=\"time-remaining\">\r\n            남은 시간: {{ item.remainingTime }}초\r\n          </div>\r\n        </div>\r\n      </h2>\r\n\r\n      <div class=\"content\">\r\n        <ul>\r\n          <li v-for=\"event in item.events\" :key=\"event.id\">\r\n            {{ event.message }}\r\n          </li>\r\n        </ul>\r\n        <div v-if=\"item.events.length === 0\" class=\"no-events\">현재 이벤트가 없습니다.</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      monitoringItems: [\r\n        {\r\n          title: '테이블스페이스 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '300px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 500,\r\n          remainingTime: 500,\r\n          fetchMethod: this.fetchTablespaceMonitoringData,\r\n        },\r\n        {\r\n          title: '생사 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '900px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 500,\r\n          remainingTime: 500,\r\n          fetchMethod: this.fetchLiveMonitoringData,\r\n        },\r\n        {\r\n          title: '오브젝트 인밸리드 관제',\r\n          events: [{ id: 3, message: 'Invalid Object 발견: FUNCTION_A' }],\r\n          style: { position: 'absolute', top: '380px', left: '300px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 10,\r\n          remainingTime: 10,\r\n          fetchMethod: this.fetchInvalidObjectsMonitoringData,\r\n        },\r\n        {\r\n          title: '락 리스트 관제',\r\n          events: [{ id: 4, message: 'Deadlock 발생: Session 101' }],\r\n          style: { position: 'absolute', top: '380px', left: '900px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 10,\r\n          remainingTime: 10,\r\n          fetchMethod: this.fetchLockListMonitoringData,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchTablespaceMonitoringData(index) {\r\n      try {\r\n        const response = await axios.get(`/api/tbsChkmon/all`);\r\n        const events = response.data.map(item => {\r\n          const formattedUsedSize = new Intl.NumberFormat().format(item.usedSize);\r\n          const formattedFreeSize = new Intl.NumberFormat().format(item.freeSize);\r\n\r\n          return {\r\n            id: item.id,\r\n            message: `${item.dbName} DB의 ${formattedUsedSize}MB 사용 중, 여유공간 ${formattedFreeSize}MB`,\r\n          };\r\n        });\r\n        this.monitoringItems[index].events = events;\r\n      } catch (error) {\r\n        console.error(`테이블스페이스 데이터 가져오기 실패 (index: ${index}):`, error);\r\n      }\r\n    },\r\n\r\n    async fetchLiveMonitoringData(index) {\r\n      try {\r\n        const response = await axios.get(`/api/LiveChkmon/all`);\r\n        const events = response.data.map(item => ({\r\n          id: item.id,\r\n          message: `${item.dbDesc} 서버 상태: 오류 발생 점검 바람`,\r\n        }));\r\n        this.monitoringItems[index].events = events;\r\n      } catch (error) {\r\n        console.error(`생사 데이터 가져오기 실패 (index: ${index}):`, error);\r\n      }\r\n    },\r\n\r\n    async fetchInvalidObjectsMonitoringData(index) {\r\n      console.log(\"Invalid Object 데이터 가져오기 - API 필요\");\r\n      this.monitoringItems[index].events = [];\r\n    },\r\n\r\n    async fetchLockListMonitoringData(index) {\r\n      console.log(\"Lock List 데이터 가져오기 - API 필요\");\r\n      this.monitoringItems[index].events = [];\r\n    },\r\n\r\n    fetchMonitoringData(index) {\r\n      const item = this.monitoringItems[index];\r\n      if (item.fetchMethod) {\r\n        item.fetchMethod(index);\r\n      }\r\n    },\r\n\r\n    toggleMonitoring(index) {\r\n      const item = this.monitoringItems[index];\r\n\r\n      if (item.isActive) {\r\n        // 모니터링이 활성화 상태에서 버튼 클릭시 타이머를 멈추고 상태를 비활성화로 변경\r\n        clearInterval(item.timerId);\r\n        item.timerId = null;\r\n        item.isActive = false;\r\n        item.remainingTime = item.refreshInterval;  // 남은 시간을 초기화\r\n      } else {\r\n        // 모니터링이 비활성화 상태에서 버튼 클릭시 데이터 요청 후 타이머 시작\r\n        this.fetchMonitoringData(index);  // 초기 데이터 요청\r\n        item.timerId = setInterval(() => {\r\n          if (item.remainingTime <= 0) {\r\n            this.fetchMonitoringData(index);  // 주기적으로 데이터 요청\r\n            item.remainingTime = item.refreshInterval;  // 남은 시간 초기화\r\n          } else {\r\n            item.remainingTime -= 1;  // 타이머 감소\r\n          }\r\n        }, 1000);  // 1초마다 타이머 실행\r\n        item.isActive = true;  // 활성화 상태로 변경\r\n      }\r\n    }\r\n,\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n.dashboard {\r\n  position: relative;\r\n  height: 100vh;\r\n  background: #f5f7fa;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  overflow: hidden;\r\n  padding: 20px;\r\n}\r\n\r\n.monitoring-box {\r\n  background: #ffffff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  margin: 20px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  height: 350px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: transform 0.3s ease;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.monitoring-box h2 {\r\n  color: #6c757d;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n  border-bottom: 2px solid #64b5f6;\r\n  padding-bottom: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.monitoring-box .content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-top: 10px;\r\n}\r\n\r\n.monitoring-box ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.monitoring-box li {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  color: #555;\r\n  background: #e3f2fd;\r\n  margin-bottom: 5px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.monitoring-box .no-events {\r\n  color: #9e9e9e;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.interval-input {\r\n  width: 45px;\r\n  padding: 6px;\r\n  margin-right: 10px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  transition: border-color 0.3s;\r\n  background-color: #f0f4f7;\r\n}\r\n\r\n.interval-input:disabled {\r\n  background-color: #e3e3e3;\r\n}\r\n\r\n.monitoring-button {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 35px;\r\n  height: 35px;\r\n  font-size: 18px;\r\n  background-color: #81c784;\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.3s ease;\r\n}\r\n\r\n.monitoring-button:hover {\r\n  background-color: #66bb6a;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.monitoring-button.active {\r\n  background-color: #ff7043;\r\n}\r\n\r\n.monitoring-button:focus {\r\n  outline: none;\r\n}\r\n\r\n.monitoring-button span {\r\n  font-weight: bold;\r\n}\r\n\r\n.time-remaining {\r\n  font-size: 16px;\r\n  color: #6c757d;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}