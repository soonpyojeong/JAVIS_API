{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = [\"value\"];\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($data.selectedTb) + \" - 테이블스페이스 리스트\", 1 /* TEXT */), _createCommentVNode(\" DB 목록을 보여주는 드롭다운 \"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedTb = $event),\n    onChange: _cache[1] || (_cache[1] = $event => $options.fetchTablespaces($data.selectedTb))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tbList, (tb, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: tb\n    }, _toDisplayString(tb), 9 /* TEXT, PROPS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedTb]]), _createCommentVNode(\" 검색 입력 필드 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"테이블스페이스 검색\",\n    style: {\n      \"margin-bottom\": \"10px\",\n      \"padding\": \"5px\",\n      \"width\": \"300px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.sortData('tsName'))\n  }, \"Tablespace 이름\"), _createElementVNode(\"th\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.sortData('totalSize'))\n  }, \"총 크기 (MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.sortData('usedSize'))\n  }, \"사용량 (MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[6] || (_cache[6] = $event => $options.sortData('freeSize'))\n  }, \"남은 크기 (MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.sortData('usedRate'))\n  }, \"사용률 (%)\"), _createElementVNode(\"th\", {\n    onClick: _cache[8] || (_cache[8] = $event => $options.sortData('chkDate'))\n  }, \"체크 날짜\"), _createElementVNode(\"th\", {\n    onClick: _cache[9] || (_cache[9] = $event => $options.sortData('chkTime'))\n  }, \"체크 시간\"), _createElementVNode(\"th\", {\n    onClick: _cache[10] || (_cache[10] = $event => $options.sortData('autoExtensCntFile'))\n  }, \"자동 확장 파일 수\"), _createElementVNode(\"th\", {\n    onClick: _cache[11] || (_cache[11] = $event => $options.sortData('maxMbBytes'))\n  }, \"최대 MB 바이트\")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredTablespaces, (ts, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(ts.tsName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.totalSize), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.usedSize), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.freeSize), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.usedRate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.chkDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.chkTime), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.autoExtensCntFile), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(ts.maxMbBytes), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $options.filteredTablespaces.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"검색 결과가 없습니다.\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","_toDisplayString","$data","selectedTb","_createCommentVNode","_cache","$event","onChange","$options","fetchTablespaces","_Fragment","_renderList","_ctx","tbList","tb","index","value","_hoisted_1","searchQuery","type","placeholder","style","onClick","sortData","filteredTablespaces","ts","tsName","totalSize","usedSize","freeSize","usedRate","chkDate","chkTime","autoExtensCntFile","maxMbBytes","length","_hoisted_2"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\TablespacesList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>{{ selectedTb }} - 테이블스페이스 리스트</h2>\r\n\r\n    <!-- DB 목록을 보여주는 드롭다운 -->\r\n    <select v-model=\"selectedTb\" @change=\"fetchTablespaces(selectedTb)\">\r\n      <option v-for=\"(tb, index) in tbList\" :key=\"index\" :value=\"tb\">\r\n        {{ tb }}\r\n      </option>\r\n    </select>\r\n\r\n    <!-- 검색 입력 필드 -->\r\n    <input\r\n      v-model=\"searchQuery\"\r\n      type=\"text\"\r\n      placeholder=\"테이블스페이스 검색\"\r\n      style=\"margin-bottom: 10px; padding: 5px; width: 300px;\"\r\n    />\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th @click=\"sortData('tsName')\">Tablespace 이름</th>\r\n          <th @click=\"sortData('totalSize')\">총 크기 (MB)</th>\r\n          <th @click=\"sortData('usedSize')\">사용량 (MB)</th>\r\n          <th @click=\"sortData('freeSize')\">남은 크기 (MB)</th>\r\n          <th @click=\"sortData('usedRate')\">사용률 (%)</th>\r\n          <th @click=\"sortData('chkDate')\">체크 날짜</th>\r\n          <th @click=\"sortData('chkTime')\">체크 시간</th>\r\n          <th @click=\"sortData('autoExtensCntFile')\">자동 확장 파일 수</th>\r\n          <th @click=\"sortData('maxMbBytes')\">최대 MB 바이트</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(ts, index) in filteredTablespaces\" :key=\"index\">\r\n          <td>{{ ts.tsName }}</td>\r\n          <td>{{ ts.totalSize }}</td>\r\n          <td>{{ ts.usedSize }}</td>\r\n          <td>{{ ts.freeSize }}</td>\r\n          <td>{{ ts.usedRate }}</td>\r\n          <td>{{ ts.chkDate }}</td>\r\n          <td>{{ ts.chkTime }}</td>\r\n          <td>{{ ts.autoExtensCntFile }}</td>\r\n          <td>{{ ts.maxMbBytes }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-if=\"filteredTablespaces.length === 0\">검색 결과가 없습니다.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedTb: null, // 선택된 DB 이름\r\n      tablespaces: [], // 테이블스페이스 데이터\r\n      searchQuery: \"\", // 검색어\r\n      sortKey: \"tsName\", // 정렬 키\r\n      sortOrder: 1, // 정렬 순서 (1: 오름차순, -1: 내림차순)\r\n    };\r\n  },\r\n  computed: {\r\n    // 검색 및 정렬된 테이블스페이스 데이터\r\n    filteredTablespaces() {\r\n      let result = this.tablespaces.filter((ts) =>\r\n        ts.tsName && ts.tsName.toLowerCase().includes(this.searchQuery.toLowerCase()) // ts.tsName이 undefined가 아니면 검색\r\n      );\r\n      return result.sort((a, b) => {\r\n        const aValue = a[this.sortKey];\r\n        const bValue = b[this.sortKey];\r\n        if (aValue < bValue) return -1 * this.sortOrder;\r\n        if (aValue > bValue) return 1 * this.sortOrder;\r\n        return 0;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    fetchTablespaces(tbName) {\r\n      this.selectedTb = tbName;\r\n      this.tablespaces = [];\r\n      axios.get(`/api/tb/${tbName}/tablespaces`).then((res) => {\r\n        this.tablespaces = res.data;\r\n      });\r\n    },\r\n    sortData(key) {\r\n      if (this.sortKey === key) {\r\n        this.sortOrder *= -1; // 동일 키를 클릭하면 정렬 순서 변경\r\n      } else {\r\n        this.sortKey = key; // 새 키로 정렬\r\n        this.sortOrder = 1;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchDbList(); // 컴포넌트가 마운트되면 DB 목록을 가져옵니다.\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}