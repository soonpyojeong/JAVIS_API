{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard\"\n};\nconst _hoisted_2 = {\n  class: \"controls\"\n};\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"disabled\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  class: \"time-remaining\"\n};\nconst _hoisted_8 = {\n  class: \"content\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"no-events\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.monitoringItems, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"monitoring-box\",\n      key: item.title,\n      style: _normalizeStyle(item.style)\n    }, [_createElementVNode(\"h2\", null, [_createTextVNode(_toDisplayString(item.title) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"number\",\n      \"onUpdate:modelValue\": $event => item.refreshInterval = $event,\n      min: \"1\",\n      class: \"interval-input\",\n      disabled: item.isActive,\n      placeholder: \"초 단위\"\n    }, null, 8 /* PROPS */, _hoisted_3), [[_vModelText, item.refreshInterval, void 0, {\n      number: true\n    }]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.toggleMonitoring(index),\n      class: _normalizeClass([{\n        active: item.isActive\n      }, \"monitoring-button\"])\n    }, [item.isActive ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"■\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"▶\"))], 10 /* CLASS, PROPS */, _hoisted_4), _createCommentVNode(\" 남은 시간 표시 \"), _createElementVNode(\"div\", _hoisted_7, \" 남은 시간: \" + _toDisplayString(item.remainingTime) + \"초 \", 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.events, event => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: event.id\n      }, _toDisplayString(event.message), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]), item.events.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"현재 이벤트가 없습니다.\")) : _createCommentVNode(\"v-if\", true)])], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","monitoringItems","item","index","title","style","_normalizeStyle","_createElementVNode","_createTextVNode","_toDisplayString","_hoisted_2","type","$event","refreshInterval","min","disabled","isActive","placeholder","_hoisted_3","number","onClick","$options","toggleMonitoring","_normalizeClass","active","_hoisted_5","_hoisted_6","_hoisted_4","_createCommentVNode","_hoisted_7","remainingTime","_hoisted_8","events","event","id","message","length","_hoisted_9"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <div\r\n      class=\"monitoring-box\"\r\n      v-for=\"(item, index) in monitoringItems\"\r\n      :key=\"item.title\"\r\n      :style=\"item.style\"\r\n    >\r\n      <h2>\r\n        {{ item.title }}\r\n        <div class=\"controls\">\r\n          <input\r\n            type=\"number\"\r\n            v-model.number=\"item.refreshInterval\"\r\n            min=\"1\"\r\n            class=\"interval-input\"\r\n            :disabled=\"item.isActive\"\r\n            placeholder=\"초 단위\"\r\n          />\r\n          <button\r\n            @click=\"toggleMonitoring(index)\"\r\n            :class=\"{ active: item.isActive }\"\r\n            class=\"monitoring-button\"\r\n          >\r\n            <span v-if=\"item.isActive\">■</span>\r\n            <span v-else>▶</span>\r\n          </button>\r\n          <!-- 남은 시간 표시 -->\r\n          <div class=\"time-remaining\">\r\n            남은 시간: {{ item.remainingTime }}초\r\n          </div>\r\n        </div>\r\n      </h2>\r\n\r\n      <div class=\"content\">\r\n        <ul>\r\n          <li v-for=\"event in item.events\" :key=\"event.id\">\r\n            {{ event.message }}\r\n          </li>\r\n        </ul>\r\n        <div v-if=\"item.events.length === 0\" class=\"no-events\">현재 이벤트가 없습니다.</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      monitoringItems: [\r\n        {\r\n          title: '테이블스페이스 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '300px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 10, // 기본 새로고침 주기 5초\r\n          remainingTime: 10, // 남은 시간\r\n        },\r\n        {\r\n          title: '생사 관제',\r\n          events: [],\r\n          style: { position: 'absolute', top: '20px', left: '900px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 10, // 기본 새로고침 주기 5초\r\n          remainingTime: 10, // 남은 시간\r\n        },\r\n        {\r\n          title: '오브젝트 인밸리드 관제',\r\n          events: [{ id: 3, message: 'Invalid Object 발견: FUNCTION_A' }],\r\n          style: { position: 'absolute', top: '380px', left: '300px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 10, // 기본 새로고침 주기 5초\r\n          remainingTime: 10, // 남은 시간\r\n        },\r\n        {\r\n          title: '락 리스트 관제',\r\n          events: [{ id: 4, message: 'Deadlock 발생: Session 101' }],\r\n          style: { position: 'absolute', top: '380px', left: '900px', zIndex: 1, width: '550px', height: '300px' },\r\n          isActive: false,\r\n          timerId: null,\r\n          refreshInterval: 10, // 기본 새로고침 주기 5초\r\n          remainingTime: 10, // 남은 시간\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n     async fetchMonitoringData(index) {\r\n        try {\r\n          const response = await axios.get(`/api/tbsChkmon/all`); // 여기에서 API 호출\r\n          const events = response.data.map(item => {\r\n            // 천 단위 콤마 추가\r\n            const formattedUsedSize = new Intl.NumberFormat().format(item.usedSize);\r\n            const formattedFreeSize = new Intl.NumberFormat().format(item.freeSize);\r\n\r\n            return {\r\n              id: item.id,\r\n              message: `${item.dbName} DB의 ${formattedUsedSize}MB 사용중이고 여유공간 ${formattedFreeSize}MB 남음`,\r\n            };\r\n          });\r\n          this.monitoringItems[index].events = events; // 응답 데이터로 업데이트\r\n        } catch (error) {\r\n          console.error(`데이터 가져오기 실패 (index: ${index}):`, error);\r\n        }\r\n      },\r\n\r\n    toggleMonitoring(index) {\r\n      const item = this.monitoringItems[index];\r\n      if (item.isActive) {\r\n        // 중지 버튼 클릭 시 타이머 중지하고 데이터 조회도 중지\r\n        clearInterval(item.timerId); // 타이머 클리어\r\n        item.timerId = null; // 타이머 ID 초기화\r\n        item.isActive = false; // 활성화 상태를 false로 변경\r\n        item.remainingTime = 10\r\n      } else {\r\n        // 시작 버튼 클릭 시 즉시 데이터 조회 후 타이머 시작\r\n        this.fetchMonitoringData(index); // 시작할 때 한 번 호출\r\n        item.timerId = setInterval(() => {\r\n          if (item.remainingTime <= 0) {\r\n            this.fetchMonitoringData(index); // 주기가 0에 도달하면 데이터 호출\r\n            item.remainingTime = item.refreshInterval; // 남은 시간을 새로고침 주기로 초기화\r\n          } else {\r\n            item.remainingTime -= 1; // 시간이 1초씩 줄어들도록\r\n          }\r\n        }, 2500); // 1초마다 타이머 감소\r\n        item.isActive = true; // 버튼을 활성화로 설정\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // 1초마다 타이머를 정확하게 감소시켜줌\r\n    setInterval(() => {\r\n      this.monitoringItems.forEach((item) => {\r\n        if (item.isActive && item.remainingTime > 0) {\r\n          item.remainingTime -= 1; // 1초씩 감소\r\n        }\r\n      });\r\n    }, 1000); // 1초마다 타이머 감소\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.dashboard {\r\n  position: relative;\r\n  height: 100vh;\r\n  background: #f5f7fa; /* 부드러운 연한 회색 배경 */\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  overflow: hidden;\r\n  padding: 20px;\r\n}\r\n\r\n.monitoring-box {\r\n  background: #ffffff; /* 흰색 배경 */\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  margin: 20px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  height: 350px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: transform 0.3s ease;\r\n  background-color: #f9f9f9; /* 연한 파스텔 그레이 배경 */\r\n}\r\n\r\n.monitoring-box h2 {\r\n  color: #6c757d; /* 부드러운 회색 */\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n  border-bottom: 2px solid #64b5f6; /* 파스텔 블루 */\r\n  padding-bottom: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.monitoring-box .content {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-top: 10px;\r\n}\r\n\r\n.monitoring-box ul {\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.monitoring-box li {\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  color: #555;\r\n  background: #e3f2fd; /* 연한 파스텔 블루 */\r\n  margin-bottom: 5px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.monitoring-box .no-events {\r\n  color: #9e9e9e;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px; /* 버튼과 남은 시간 간격 최소화 */\r\n}\r\n\r\n.interval-input {\r\n  width: 35px;\r\n  padding: 6px;\r\n  margin-right: 10px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  transition: border-color 0.3s;\r\n  background-color: #f0f4f7; /* 연한 파스텔 블루 */\r\n}\r\n\r\n.interval-input:disabled {\r\n  background-color: #e3e3e3;\r\n}\r\n\r\n.monitoring-button {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 35px;\r\n  height: 35px;\r\n  font-size: 18px;\r\n  background-color: #81c784; /* 연한 파스텔 그린 */\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.3s ease;\r\n}\r\n\r\n.monitoring-button:hover {\r\n  background-color: #66bb6a; /* 더 진한 그린 */\r\n  transform: scale(1.1);\r\n}\r\n\r\n.monitoring-button.active {\r\n  background-color: #ff7043; /* 오렌지색 */\r\n}\r\n\r\n.monitoring-button:focus {\r\n  outline: none;\r\n}\r\n\r\n.monitoring-button span {\r\n  font-weight: bold;\r\n}\r\n\r\n/* 남은 시간 스타일 */\r\n.time-remaining {\r\n  font-size: 16px;\r\n  color: #6c757d;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EASXA,KAAK,EAAC;AAAU;mBAV7B;mBAAA;;EAAAC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EA4BeD,KAAK,EAAC;AAAgB;;EAM1BA,KAAK,EAAC;AAAS;;EAlC1BC,GAAA;EAwC6CD,KAAK,EAAC;;;uBAvCjDE,mBAAA,CA0CM,OA1CNC,UA0CM,I,kBAzCJD,mBAAA,CAwCME,SAAA,QA1CVC,WAAA,CAI8BC,KAAA,CAAAC,eAAe,EAJ7C,CAIcC,IAAI,EAAEC,KAAK;yBAFrBP,mBAAA,CAwCM;MAvCJF,KAAK,EAAC,gBAAgB;MAErBC,GAAG,EAAEO,IAAI,CAACE,KAAK;MACfC,KAAK,EANZC,eAAA,CAMcJ,IAAI,CAACG,KAAK;QAElBE,mBAAA,CAwBK,aAhCXC,gBAAA,CAAAC,gBAAA,CASWP,IAAI,CAACE,KAAK,IAAG,GAChB,iBAAAG,mBAAA,CAqBM,OArBNG,UAqBM,G,gBApBJH,mBAAA,CAOE;MANAI,IAAI,EAAC,QAAQ;MAZzB,uBAAAC,MAAA,IAa4BV,IAAI,CAACW,eAAe,GAAAD,MAAA;MACpCE,GAAG,EAAC,GAAG;MACPpB,KAAK,EAAC,gBAAgB;MACrBqB,QAAQ,EAAEb,IAAI,CAACc,QAAQ;MACxBC,WAAW,EAAC;4BAjBxBC,UAAA,I,cAa4BhB,IAAI,CAACW,eAAe,E;MAA5BM,MAAM,EAAd;IAAqC,E,IAMvCZ,mBAAA,CAOS;MANNa,OAAK,EAAAR,MAAA,IAAES,QAAA,CAAAC,gBAAgB,CAACnB,KAAK;MAC7BT,KAAK,EArBlB6B,eAAA;QAAAC,MAAA,EAqB8BtB,IAAI,CAACc;MAAQ,GACzB,mBAAmB;QAEbd,IAAI,CAACc,QAAQ,I,cAAzBpB,mBAAA,CAAmC,QAxB/C6B,UAAA,EAwBuC,GAAC,M,cAC5B7B,mBAAA,CAAqB,QAzBjC8B,UAAA,EAyByB,GAAC,G,yBAzB1BC,UAAA,GA2BUC,mBAAA,cAAiB,EACjBrB,mBAAA,CAEM,OAFNsB,UAEM,EAFsB,UACnB,GAAApB,gBAAA,CAAGP,IAAI,CAAC4B,aAAa,IAAG,IACjC,gB,KAIJvB,mBAAA,CAOM,OAPNwB,UAOM,GANJxB,mBAAA,CAIK,c,kBAHHX,mBAAA,CAEKE,SAAA,QAtCfC,WAAA,CAoC8BG,IAAI,CAAC8B,MAAM,EAApBC,KAAK;2BAAhBrC,mBAAA,CAEK;QAF6BD,GAAG,EAAEsC,KAAK,CAACC;0BACxCD,KAAK,CAACE,OAAO;sCAGTjC,IAAI,CAAC8B,MAAM,CAACI,MAAM,U,cAA7BxC,mBAAA,CAA0E,OAA1EyC,UAA0E,EAAnB,eAAa,KAxC5ET,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}