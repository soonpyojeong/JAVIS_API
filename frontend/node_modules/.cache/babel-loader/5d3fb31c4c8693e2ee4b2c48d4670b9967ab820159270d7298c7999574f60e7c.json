{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"gap\": \"10px\",\n    \"margin-bottom\": \"20px\"\n  }\n};\nconst _hoisted_2 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"SMS 전송 히스토리\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"days\"\n  }, \"조회할 일수: \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"days\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.day = $event),\n    min: \"1\",\n    placeholder: \"일수를 입력하세요\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.day]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchSmsHistories && $options.fetchSmsHistories(...args))\n  }, \"조회\"), _cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"msgSearch\"\n  }, \"MSG 내용 검색: \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"msgSearch\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.msgSearch = $event),\n    placeholder: \"MSG 내용을 입력하세요\",\n    onInput: _cache[3] || (_cache[3] = (...args) => $options.filterSmsHistories && $options.filterSmsHistories(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.msgSearch]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.updateAllSmsHistories && $options.updateAllSmsHistories(...args))\n  }, \"대량 메시지 전송 처리\"), _createCommentVNode(\" 자동 조회 버튼 \"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.toggleAutoFetch && $options.toggleAutoFetch(...args)),\n    disabled: $data.isAutoFetchActive && $data.countdown > 0,\n    style: {\n      \"background-color\": \"#FF9800\"\n    }\n  }, _toDisplayString($data.isAutoFetchActive ? `자동 조회 중지 (${$data.countdown}s)` : `1분마다 조회 (${$data.countdown}s)`), 9 /* TEXT, PROPS */, _hoisted_2)]), _createElementVNode(\"table\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"SEQNO\"), _createElementVNode(\"th\", null, \"INDATE\"), _createElementVNode(\"th\", null, \"INTIME\"), _createElementVNode(\"th\", null, \"SENDNAME\"), _createElementVNode(\"th\", null, \"RECVNAME\"), _createElementVNode(\"th\", null, \"MSG\"), _createElementVNode(\"th\", null, \"RESULT\"), _createElementVNode(\"th\", null, \"KIND\"), _createElementVNode(\"th\", null, \"ERRCODE\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredSmsHistories, history => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: history.SEQNO\n    }, [_createElementVNode(\"td\", null, _toDisplayString(history.SEQNO), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.loc), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.assets), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.dbDescript), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.recName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.msg), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.result), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.kind), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(history.errCode), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["style","_createElementBlock","_createElementVNode","_hoisted_1","for","type","id","_cache","$event","$data","day","min","placeholder","onClick","args","$options","fetchSmsHistories","msgSearch","onInput","filterSmsHistories","updateAllSmsHistories","_createCommentVNode","toggleAutoFetch","disabled","isAutoFetchActive","countdown","_hoisted_2","_Fragment","_renderList","filteredSmsHistories","history","key","SEQNO","_toDisplayString","loc","assets","dbDescript","recName","msg","result","kind","errCode"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\SmsHistory.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>SMS 전송 히스토리</h1>\r\n\r\n    <div style=\"display: flex; align-items: center; gap: 10px; margin-bottom: 20px;\">\r\n      <label for=\"days\">조회할 일수: </label>\r\n      <input type=\"number\" id=\"days\" v-model=\"day\" min=\"1\" placeholder=\"일수를 입력하세요\" />\r\n      <button @click=\"fetchSmsHistories\">조회</button>\r\n\r\n      <label for=\"msgSearch\">MSG 내용 검색: </label>\r\n      <input type=\"text\" id=\"msgSearch\" v-model=\"msgSearch\" placeholder=\"MSG 내용을 입력하세요\" @input=\"filterSmsHistories\" />\r\n\r\n      <button @click=\"updateAllSmsHistories\">대량 메시지 전송 처리</button>\r\n\r\n      <!-- 자동 조회 버튼 -->\r\n      <button\r\n        @click=\"toggleAutoFetch\"\r\n        :disabled=\"isAutoFetchActive && countdown > 0\"\r\n        style=\"background-color: #FF9800;\">\r\n        {{ isAutoFetchActive ? `자동 조회 중지 (${countdown}s)` : `1분마다 조회 (${countdown}s)` }}\r\n      </button>\r\n    </div>\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>SEQNO</th>\r\n          <th>INDATE</th>\r\n          <th>INTIME</th>\r\n          <th>SENDNAME</th>\r\n          <th>RECVNAME</th>\r\n          <th>MSG</th>\r\n          <th>RESULT</th>\r\n          <th>KIND</th>\r\n          <th>ERRCODE</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"history in filteredSmsHistories\" :key=\"history.SEQNO\">\r\n          <td>{{ history.SEQNO }}</td>\r\n          <td>{{ history.loc }}</td>\r\n          <td>{{ history.assets }}</td>\r\n          <td>{{ history.dbDescript }}</td>\r\n          <td>{{ history.recName }}</td>\r\n          <td>{{ history.msg }}</td>\r\n          <td>{{ history.result }}</td>\r\n          <td>{{ history.kind }}</td>\r\n          <td>{{ history.errCode }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      smsHistories: [],\r\n      filteredSmsHistories: [],\r\n      day: 3,\r\n      msgSearch: '',\r\n      isAutoFetchActive: false,\r\n      autoFetchInterval: null,\r\n      countdown: 60,\r\n      countdownInterval: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchSmsHistories();\r\n  },\r\n  methods: {\r\n    fetchSmsHistories() {\r\n      axios.get(`/api/sms/all?day=${this.day}`)\r\n        .then(response => {\r\n          this.smsHistories = response.data;\r\n          this.smsHistories.sort((a, b) => {\r\n            const dateA = a.loc + a.assets;\r\n            const dateB = b.loc + b.assets;\r\n            if (dateA < dateB) return 1;\r\n            else if (dateA > dateB) return -1;\r\n            return 0;\r\n          });\r\n          this.filteredSmsHistories = this.smsHistories;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching SMS histories:', error);\r\n        });\r\n    },\r\n    filterSmsHistories() {\r\n      if (this.msgSearch) {\r\n        this.filteredSmsHistories = this.smsHistories.filter(history =>\r\n          history.msg && history.msg.includes(this.msgSearch)\r\n        );\r\n      } else {\r\n        this.filteredSmsHistories = this.smsHistories;\r\n      }\r\n    },\r\n    updateAllSmsHistories() {\r\n      axios.put('/api/sms/updateall')\r\n        .then(() => {\r\n          alert('전체 메시지 전송 처리가 완료되었습니다.');\r\n          this.fetchSmsHistories();\r\n        })\r\n        .catch(error => {\r\n          console.error('Error updating SMS histories:', error);\r\n        });\r\n    },\r\n    toggleAutoFetch() {\r\n      if (this.isAutoFetchActive) {\r\n        clearInterval(this.autoFetchInterval);\r\n        clearInterval(this.countdownInterval);\r\n        this.autoFetchInterval = null;\r\n        this.countdownInterval = null;\r\n        this.countdown = 60;\r\n      } else {\r\n        this.autoFetchInterval = setInterval(() => {\r\n          this.fetchSmsHistories();\r\n          this.countdown = 60;\r\n        }, 60000);\r\n\r\n        this.startCountdown();\r\n      }\r\n      this.isAutoFetchActive = !this.isAutoFetchActive;\r\n    },\r\n    startCountdown() {\r\n      if (this.countdownInterval) {\r\n        clearInterval(this.countdownInterval);\r\n      }\r\n\r\n      this.countdownInterval = setInterval(() => {\r\n        if (this.countdown > 0) {\r\n          this.countdown--;\r\n        } else {\r\n          this.countdown = 60;\r\n          this.fetchSmsHistories();\r\n        }\r\n      }, 1000);\r\n    },\r\n  },\r\n  beforeUnmount() {\r\n    if (this.autoFetchInterval) {\r\n      clearInterval(this.autoFetchInterval);\r\n    }\r\n    if (this.countdownInterval) {\r\n      clearInterval(this.countdownInterval);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\nth, td {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  text-align: center;\r\n}\r\nbutton {\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\ninput[type=\"number\"],\r\ninput[type=\"text\"] {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n  width: 150px;\r\n}\r\nbutton:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n</style>\r\n"],"mappings":";;EAISA,KAA2E,EAA3E;IAAA;IAAA;IAAA;IAAA;EAAA;AAA2E;mBAJpF;;uBACEC,mBAAA,CAkDM,c,0BAjDJC,mBAAA,CAAoB,YAAhB,aAAW,sBAEfA,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAhBJD,mBAAA,CAAkC;IAA3BE,GAAG,EAAC;EAAM,GAAC,UAAQ,sB,gBAC1BF,mBAAA,CAA+E;IAAxEG,IAAI,EAAC,QAAQ;IAACC,EAAE,EAAC,MAAM;IANpC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM8CC,KAAA,CAAAC,GAAG,GAAAF,MAAA;IAAEG,GAAG,EAAC,GAAG;IAACC,WAAW,EAAC;iDAAzBH,KAAA,CAAAC,GAAG,E,GAC3CR,mBAAA,CAA8C;IAArCW,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;KAAE,IAAE,G,0BAErCZ,mBAAA,CAA0C;IAAnCE,GAAG,EAAC;EAAW,GAAC,aAAW,sB,gBAClCF,mBAAA,CAAgH;IAAzGG,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,WAAW;IAVvC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUiDC,KAAA,CAAAQ,SAAS,GAAAT,MAAA;IAAEI,WAAW,EAAC,eAAe;IAAEM,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAI,kBAAA,IAAAJ,QAAA,CAAAI,kBAAA,IAAAL,IAAA,CAAkB;iEAAjEL,KAAA,CAAAQ,SAAS,E,GAEpDf,mBAAA,CAA4D;IAAnDW,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAK,qBAAA,IAAAL,QAAA,CAAAK,qBAAA,IAAAN,IAAA,CAAqB;KAAE,cAAY,GAEnDO,mBAAA,cAAiB,EACjBnB,mBAAA,CAKS;IAJNW,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAO,eAAA,IAAAP,QAAA,CAAAO,eAAA,IAAAR,IAAA,CAAe;IACtBS,QAAQ,EAAEd,KAAA,CAAAe,iBAAiB,IAAIf,KAAA,CAAAgB,SAAS;IACzCzB,KAAkC,EAAlC;MAAA;IAAA;sBACGS,KAAA,CAAAe,iBAAiB,gBAAgBf,KAAA,CAAAgB,SAAS,mBAAmBhB,KAAA,CAAAgB,SAAS,4BAnBjFC,UAAA,E,GAuBIxB,mBAAA,CA2BQ,gB,0BA1BNA,mBAAA,CAYQ,gBAXNA,mBAAA,CAUK,aATHA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGfA,mBAAA,CAYQ,iB,kBAXND,mBAAA,CAUK0B,SAAA,QAhDbC,WAAA,CAsC8BnB,KAAA,CAAAoB,oBAAoB,EAA/BC,OAAO;yBAAlB7B,mBAAA,CAUK;MAVwC8B,GAAG,EAAED,OAAO,CAACE;QACxD9B,mBAAA,CAA4B,YAAA+B,gBAAA,CAArBH,OAAO,CAACE,KAAK,kBACpB9B,mBAAA,CAA0B,YAAA+B,gBAAA,CAAnBH,OAAO,CAACI,GAAG,kBAClBhC,mBAAA,CAA6B,YAAA+B,gBAAA,CAAtBH,OAAO,CAACK,MAAM,kBACrBjC,mBAAA,CAAiC,YAAA+B,gBAAA,CAA1BH,OAAO,CAACM,UAAU,kBACzBlC,mBAAA,CAA8B,YAAA+B,gBAAA,CAAvBH,OAAO,CAACO,OAAO,kBACtBnC,mBAAA,CAA0B,YAAA+B,gBAAA,CAAnBH,OAAO,CAACQ,GAAG,kBAClBpC,mBAAA,CAA6B,YAAA+B,gBAAA,CAAtBH,OAAO,CAACS,MAAM,kBACrBrC,mBAAA,CAA2B,YAAA+B,gBAAA,CAApBH,OAAO,CAACU,IAAI,kBACnBtC,mBAAA,CAA8B,YAAA+B,gBAAA,CAAvBH,OAAO,CAACW,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}