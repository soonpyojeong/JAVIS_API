{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"select-container\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"tablespace-table\"\n};\nconst _hoisted_5 = {\n  class: \"used-size\"\n};\nconst _hoisted_6 = {\n  class: \"used-size\"\n};\nconst _hoisted_7 = {\n  class: \"used-rate-container\"\n};\nconst _hoisted_8 = [\"id\"];\nconst _hoisted_9 = {\n  class: \"free-size\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"modal-overlay\"\n};\nconst _hoisted_13 = {\n  class: \"modal-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.selectedDb) + \" DB - 테이블스페이스 리스트\", 1 /* TEXT */), _createCommentVNode(\" DB 목록 드롭다운 \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDb = $event),\n    onChange: _cache[1] || (_cache[1] = $event => $options.fetchTablespaces($data.selectedDb))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tbList, (db, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: db\n    }, _toDisplayString(db), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedDb]])]), _createElementVNode(\"table\", _hoisted_4, [_cache[10] || (_cache[10] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Tablespace 이름\"), _createElementVNode(\"th\", null, \"TOTAL(MB)\"), _createElementVNode(\"th\", null, \"USED(MB)\"), _createElementVNode(\"th\", null, \"사용률 (%)\"), _createElementVNode(\"th\", null, \"FREE(MB)\"), _createElementVNode(\"th\", null, \"임계치 추가\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredTablespaces, ts => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: ts.id.tsName\n    }, [_createElementVNode(\"td\", null, _toDisplayString(ts.id.tsName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_5, _toDisplayString($options.formatNumber(ts.totalSize)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_6, _toDisplayString($options.formatNumber(ts.usedSize)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"canvas\", {\n      id: 'chart-' + ts.id.tsName,\n      class: \"rate-chart\"\n    }, null, 8 /* PROPS */, _hoisted_8)])]), _createElementVNode(\"td\", _hoisted_9, _toDisplayString($options.formatNumber(ts.freeSize)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.openThresholdModal(ts)\n    }, \"+\", 8 /* PROPS */, _hoisted_10)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $options.filteredTablespaces.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, \"검색 결과가 없습니다.\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 임계치 추가 모달 \"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_cache[18] || (_cache[18] = _createElementVNode(\"h3\", null, \"임계치 추가\", -1 /* HOISTED */)), _cache[19] || (_cache[19] = _createElementVNode(\"p\", null, \"임계치 정보를 입력하세요:\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[9] || (_cache[9] = _withModifiers((...args) => $options.saveThreshold && $options.saveThreshold(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"DB 타입:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.thresholdData.dbType = $event),\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.thresholdData.dbType]])]), _createElementVNode(\"div\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", null, \"DB 이름:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.thresholdData.dbName = $event),\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.thresholdData.dbName]])]), _createElementVNode(\"div\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", null, \"Tablespace 이름:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.thresholdData.tablespaceName = $event),\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.thresholdData.tablespaceName]])]), _createElementVNode(\"div\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", null, \"임계치 (MB):\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.thresholdData.thresMb = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.thresholdData.thresMb]])]), _createElementVNode(\"div\", null, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", null, \"사용 여부:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.thresholdData.chkFlag = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.thresholdData.chkFlag]])]), _createElementVNode(\"div\", null, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", null, \"설명:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.thresholdData.commt = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.thresholdData.commt]])]), _createElementVNode(\"div\", null, [_cache[17] || (_cache[17] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"저장\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"취소\")])], 32 /* NEED_HYDRATION */)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","selectedDb","_createCommentVNode","_hoisted_2","_cache","$event","onChange","$options","fetchTablespaces","_Fragment","_renderList","tbList","db","index","value","_hoisted_3","_hoisted_4","filteredTablespaces","ts","id","tsName","_hoisted_5","formatNumber","totalSize","_hoisted_6","usedSize","_hoisted_7","_hoisted_8","_hoisted_9","freeSize","onClick","openThresholdModal","_hoisted_10","length","_hoisted_11","showModal","_hoisted_12","_hoisted_13","onSubmit","_withModifiers","args","saveThreshold","type","thresholdData","dbType","readonly","dbName","tablespaceName","thresMb","required","chkFlag","commt","closeModal"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\TablespacesList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>{{ selectedDb }} DB - 테이블스페이스 리스트</h2>\r\n\r\n    <!-- DB 목록 드롭다운 -->\r\n    <div class=\"select-container\">\r\n      <select v-model=\"selectedDb\" @change=\"fetchTablespaces(selectedDb)\">\r\n        <option v-for=\"(db, index) in tbList\" :key=\"index\" :value=\"db\">\r\n          {{ db }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <table class=\"tablespace-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Tablespace 이름</th>\r\n          <th>TOTAL(MB)</th>\r\n          <th>USED(MB)</th>\r\n          <th>사용률 (%)</th>\r\n          <th>FREE(MB)</th>\r\n          <th>임계치 추가</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"ts in filteredTablespaces\" :key=\"ts.id.tsName\">\r\n          <td>{{ ts.id.tsName }}</td>\r\n          <td class=\"used-size\">{{ formatNumber(ts.totalSize) }}</td>\r\n          <td class=\"used-size\">{{ formatNumber(ts.usedSize) }}</td>\r\n          <td>\r\n            <div class=\"used-rate-container\">\r\n              <canvas :id=\"'chart-' + ts.id.tsName\" class=\"rate-chart\"></canvas>\r\n            </div>\r\n          </td>\r\n          <td class=\"free-size\">{{ formatNumber(ts.freeSize) }}</td>\r\n          <td>\r\n            <button @click=\"openThresholdModal(ts)\">+</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-if=\"filteredTablespaces.length === 0\">검색 결과가 없습니다.</p>\r\n\r\n    <!-- 임계치 추가 모달 -->\r\n    <div v-if=\"showModal\" class=\"modal-overlay\">\r\n      <div class=\"modal-content\">\r\n        <h3>임계치 추가</h3>\r\n        <p>임계치 정보를 입력하세요:</p>\r\n        <form @submit.prevent=\"saveThreshold\">\r\n          <div>\r\n            <label>DB 타입:</label>\r\n            <input type=\"text\" v-model=\"thresholdData.dbType\" readonly />\r\n          </div>\r\n          <div>\r\n            <label>DB 이름:</label>\r\n            <input type=\"text\" v-model=\"thresholdData.dbName\" readonly />\r\n          </div>\r\n          <div>\r\n            <label>Tablespace 이름:</label>\r\n            <input type=\"text\" v-model=\"thresholdData.tablespaceName\" readonly />\r\n          </div>\r\n          <div>\r\n            <label>임계치 (MB):</label>\r\n            <input type=\"number\" v-model=\"thresholdData.thresMb\" required />\r\n          </div>\r\n          <div>\r\n            <label>사용 여부:</label>\r\n            <input type=\"checkbox\" v-model=\"thresholdData.chkFlag\" />\r\n          </div>\r\n          <div>\r\n            <label>설명:</label>\r\n            <input type=\"text\" v-model=\"thresholdData.commt\" />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">저장</button>\r\n            <button type=\"button\" @click=\"closeModal\">취소</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Chart from \"chart.js/auto\";\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels'; // 플러그인 import\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDb: null,\r\n      tbList: [],\r\n      tablespaces: [],\r\n      showModal: false,\r\n      thresholdData: {\r\n        dbType: \"\",\r\n        dbName: \"\",\r\n        tablespaceName: \"\",\r\n        thresMb: null,\r\n        chkFlag: false,\r\n        commt: \"\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    filteredTablespaces() {\r\n      return this.tablespaces;\r\n    },\r\n  },\r\n  methods: {\r\n    formatNumber(number) {\r\n      return number.toLocaleString(); // 천 단위 구분 기호 추가\r\n    },\r\n    fetchDbList() {\r\n      axios\r\n        .get(\"/api/tb/list\")\r\n        .then((res) => {\r\n          this.tbList = res.data;\r\n          if (this.tbList.length > 0) {\r\n            this.selectedDb = this.tbList[0];\r\n            this.fetchTablespaces(this.selectedDb);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"DB 목록 가져오기 실패:\", error);\r\n        });\r\n    },\r\n    fetchTablespaces(dbName) {\r\n      axios\r\n        .get(`/api/tb/${dbName}/tablespaces`)\r\n        .then((res) => {\r\n          this.tablespaces = res.data || [];\r\n          this.$nextTick(() => {\r\n            this.tablespaces.forEach((ts) => {\r\n              this.drawBarChart(ts);\r\n            });\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"테이블스페이스 가져오기 실패:\", error);\r\n        });\r\n    },\r\n     drawBarChart(ts) {\r\n        if (!ts || !ts.id || !ts.id.tsName) {\r\n          console.error(\"Invalid ts object:\", ts);\r\n          return; // ts 데이터 유효성 검사\r\n        }\r\n\r\n        const canvasId = 'chart-' + ts.id.tsName;\r\n        const canvas = document.getElementById(canvasId);\r\n\r\n        if (!canvas) {\r\n          console.error(`Canvas with ID \"${canvasId}\" not found.`);\r\n          return; // Canvas가 존재하지 않으면 함수 종료\r\n        }\r\n\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        // 기존 차트가 있으면 파괴\r\n        if (this.chartInstances && this.chartInstances[ts.id.tsName]) {\r\n          this.chartInstances[ts.id.tsName].destroy();\r\n        }\r\n\r\n        // chartInstances 객체 초기화\r\n        if (!this.chartInstances) {\r\n          this.chartInstances = {};\r\n        }\r\n\r\n        // 새 차트 생성\r\n        this.chartInstances[ts.id.tsName] = new Chart(ctx, {\r\n          type: 'bar',\r\n          data: {\r\n            labels: ['사용률'], // 차트 레이블\r\n            datasets: [{\r\n              label: '사용률',\r\n              data: [ts.usedRate], // 사용률 데이터\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)', // 배경 색상\r\n              borderColor: 'rgb(75, 192, 192)', // 테두리 색상\r\n              borderRadius: 1, // 모서리 둥글게\r\n              borderWidth: 1, // 테두리 두께\r\n            }],\r\n          },\r\n          options: {\r\n            responsive: true,\r\n            indexAxis: 'y', // 가로 차트\r\n            scales: {\r\n              x: {\r\n                min: 0,\r\n                max: 100, // 100%까지 표시\r\n                ticks: {\r\n                  display: false, // 0과 100을 숨김\r\n                },\r\n              },\r\n              y: {\r\n                beginAtZero: true,\r\n                display: false, // Y축 표시 안 함\r\n              },\r\n            },\r\n            plugins: {\r\n              legend: {\r\n                display: false, // 범례 숨기기\r\n              },\r\n              datalabels: {\r\n                display: true,\r\n                align: (ctx) => ctx.dataset.data[0] >= 85 ? 'center' : 'end',\r\n                anchor: (ctx) => ctx.dataset.data[0] >= 85 ? 'center' : 'end',\r\n                formatter: (value) => `${value}%`,\r\n                color: (ctx) => ctx.dataset.data[0] >= 85 ? 'red' : 'rgb(75, 192, 192)',\r\n                font: {\r\n                  weight: 'bold',\r\n                  size: 14,\r\n                },\r\n              },\r\n            },\r\n          },\r\n          plugins: [ChartDataLabels], // 플러그인 적용\r\n        });\r\n    },\r\n    openThresholdModal(ts) {\r\n      this.thresholdData.dbType = this.selectedDb.dbType || \"ORACLE\";\r\n      this.thresholdData.dbName = this.selectedDb;\r\n      this.thresholdData.tablespaceName = ts.id.tsName;\r\n      this.showModal = true;\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n    saveThreshold() {\r\n      axios\r\n        .post(\"/api/tb/add-threshold\", this.thresholdData)\r\n          .then(() => {\r\n            alert(\"임계치가 성공적으로 저장되었습니다.\");\r\n            const targetTs = this.tablespaces.find(\r\n              (ts) => ts.id.tsName === this.thresholdData.tablespaceName\r\n            );\r\n            if (targetTs) targetTs.thresholdAdded = true;\r\n            this.closeModal();\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"임계치 저장 실패:\", error);\r\n            alert(\"임계치 저장에 실패했습니다.\");\r\n          });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchDbList();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* 기본 설정 */\r\n.container {\r\n  font-family: 'Arial', sans-serif;\r\n  padding: 40px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n}\r\n\r\nh2 {\r\n  color: #333;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 드롭다운 및 검색 필드 스타일 */\r\n.select-container, .search-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\nselect, .search-input {\r\n  padding: 12px 18px;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\nselect:focus, .search-input:focus {\r\n  outline: none;\r\n  border-color: #4caf50;\r\n  box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);\r\n}\r\n\r\n/* 테이블 스타일 */\r\n.tablespace-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 40px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.tablespace-table th, .tablespace-table td {\r\n  padding: 14px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.tablespace-table th {\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.tablespace-table td {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.tablespace-table td.used-rate {\r\n  width: 80px; /* 고정 너비 설정 */\r\n  text-align: center;\r\n}\r\n\r\n.tablespace-table td.free-size, .tablespace-table td.used-size {\r\n  text-align: right;\r\n}\r\n\r\n.tablespace-table tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.no-data-message {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  color: #f44336;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 모달 오버레이 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  padding: 20px;\r\n}\r\n\r\n/* 모달 내용 */\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 1000px;\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nbutton {\r\n  padding: 12px 20px;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\nbutton.close-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\nbutton.close-btn:hover {\r\n  background-color: #e53935;\r\n}\r\n\r\nbutton.chart-btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\nbutton.chart-btn:hover {\r\n  background-color: #388e3c;\r\n}\r\n\r\n/* 최근 데이터 테이블 */\r\n.recent-data-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.recent-data-table th, .recent-data-table td {\r\n  padding: 12px;\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.recent-data-table th {\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  font-weight: 600;\r\n}\r\n\r\n.recent-data-table td {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n/* 차트 스타일 */\r\n.chart-container {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.used-rate-container {\r\n  width: 100%; /* 컨테이너 너비 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.rate-chart {\r\n  max-width: 120px; /* 차트 너비 확장 */\r\n  max-height: 60px; /* 차트 높이 확장 */\r\n  width: 100%; /* 반응형 크기 */\r\n  height: auto;\r\n}\r\n\r\n/* 화면 반응형 스타일 */\r\n@media (max-width: 768px) {\r\n  .container {\r\n    padding: 20px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .select-container, .search-container {\r\n    flex-direction: column;\r\n  }\r\n\r\n  select, .search-input {\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n  }\r\n\r\n  .tablespace-table th, .tablespace-table td {\r\n    padding: 10px;\r\n    font-size: 13px;\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 400px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.modal-content h3 {\r\n  margin-top: 0;\r\n}\r\n\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.chart-btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\n.close-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n</style>\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}