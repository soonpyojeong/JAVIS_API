{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"DB 리스트\", -1 /* HOISTED */)), $data.dbList.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"자산\"), _createElementVNode(\"th\", null, \"설명\"), _createElementVNode(\"th\", null, \"호스트\"), _createElementVNode(\"th\", null, \"PubIP\"), _createElementVNode(\"th\", null, \"VIP\"), _createElementVNode(\"th\", null, \"DB 타입\"), _createElementVNode(\"th\", null, \"DB 이름\"), _createElementVNode(\"th\", null, \"생사관제\"), _createElementVNode(\"th\", null, \"TBS수집\"), _createElementVNode(\"th\", null, \"Sybase 트랜잭션\"), _createElementVNode(\"th\", null, \"OBJSIZE 수집\"), _createElementVNode(\"th\", null, \"일일 점검\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dbList, db => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: db.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(db.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.assets), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbDescript), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.hostname), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.pubIp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.vip), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbType), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbName), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.liveChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => _ctx.updateDbStatus(db, 'liveChk')\n    }, _toDisplayString(db.liveChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_2)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.sizeChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => _ctx.updateDbStatus(db, 'sizeChk')\n    }, _toDisplayString(db.sizeChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_3)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.trnBakChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => _ctx.updateDbStatus(db, 'trnBakChk')\n    }, _toDisplayString(db.trnBakChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_4)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.objSegSizeChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => _ctx.updateDbStatus(db, 'objSegSizeChk')\n    }, _toDisplayString(db.objSegSizeChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_5)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.dailyChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => _ctx.updateDbStatus(db, 'dailyChk')\n    }, _toDisplayString(db.dailyChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"데이터가 없습니다.\"))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createElementVNode","$data","dbList","length","_hoisted_1","_Fragment","_renderList","db","id","_toDisplayString","assets","dbDescript","hostname","pubIp","vip","dbType","dbName","class","_normalizeClass","liveChk","onClick","$event","_ctx","updateDbStatus","_hoisted_2","sizeChk","_hoisted_3","trnBakChk","_hoisted_4","objSegSizeChk","_hoisted_5","dailyChk","_hoisted_6","_hoisted_7"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DBList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>DB 리스트</h2>\r\n    <table v-if=\"dbList.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>자산</th>\r\n          <th>설명</th>\r\n          <th>호스트</th>\r\n          <th>PubIP</th>\r\n          <th>VIP</th>\r\n          <th>DB 타입</th>\r\n          <th>DB 이름</th>\r\n          <th>생사관제</th>\r\n          <th>TBS수집</th>\r\n          <th>Sybase 트랜잭션</th>\r\n          <th>OBJSIZE 수집</th>\r\n          <th>일일 점검</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"db in dbList\" :key=\"db.id\">\r\n          <td>{{ db.id }}</td>\r\n          <td>{{ db.assets }}</td>\r\n          <td>{{ db.dbDescript }}</td>\r\n          <td>{{ db.hostname }}</td>\r\n          <td>{{ db.pubIp }}</td>\r\n          <td>{{ db.vip }}</td>\r\n          <td>{{ db.dbType }}</td>\r\n          <td>{{ db.dbName }}</td>\r\n          <td>\r\n            <button :class=\"db.liveChk === 'Y' ? 'on' : 'off'\" @click=\"updateDbStatus(db, 'liveChk')\">\r\n              {{ db.liveChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button :class=\"db.sizeChk === 'Y' ? 'on' : 'off'\" @click=\"updateDbStatus(db, 'sizeChk')\">\r\n              {{ db.sizeChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button :class=\"db.trnBakChk === 'Y' ? 'on' : 'off'\" @click=\"updateDbStatus(db, 'trnBakChk')\">\r\n              {{ db.trnBakChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button :class=\"db.objSegSizeChk === 'Y' ? 'on' : 'off'\" @click=\"updateDbStatus(db, 'objSegSizeChk')\">\r\n              {{ db.objSegSizeChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <button :class=\"db.dailyChk === 'Y' ? 'on' : 'off'\" @click=\"updateDbStatus(db, 'dailyChk')\">\r\n              {{ db.dailyChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p v-else>데이터가 없습니다.</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbList: [],\r\n      sortKey: \"\",\r\n      sortAsc: true,\r\n      showRegisterForm: false,\r\n      newDb: {\r\n        dbType: \"\",\r\n        dbName: \"\",\r\n        assets: \"\",\r\n        hostname: \"\",\r\n        pubIp: \"\",\r\n        vip: \"\",\r\n        liveChk: \"N\",  // 기본값 N\r\n        sizeChk: \"N\",  // 기본값 N\r\n        trnBakChk: \"N\", // 기본값 N\r\n        objSegSizeChk: \"N\", // 기본값 N\r\n        dailyChk: \"N\", // 기본값 N\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    toggleLiveChk() {\r\n      this.newDb.liveChk = this.newDb.liveChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleSizeChk() {\r\n      this.newDb.sizeChk = this.newDb.sizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleTrnBakChk() {\r\n      this.newDb.trnBakChk = this.newDb.trnBakChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleObjSegSizeChk() {\r\n      this.newDb.objSegSizeChk = this.newDb.objSegSizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleDailyChk() {\r\n      this.newDb.dailyChk = this.newDb.dailyChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleLiveChkForDb(db) {\r\n      db.liveChk = db.liveChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleSizeChkForDb(db) {\r\n      db.sizeChk = db.sizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleTrnBakChkForDb(db) {\r\n      db.trnBakChk = db.trnBakChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleObjSegSizeChkForDb(db) {\r\n      db.objSegSizeChk = db.objSegSizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleDailyChkForDb(db) {\r\n      db.dailyChk = db.dailyChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    closeRegisterForm() {\r\n      this.showRegisterForm = false;\r\n    },\r\n    registerDb() {\r\n      axios\r\n        .post(\"http://10.90.4.60:8080/api/db-list/register\", this.newDb)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            this.dbList.push(response.data.db);\r\n            this.closeRegisterForm();\r\n            alert(\"DB가 등록되었습니다.\");\r\n          } else {\r\n            alert(\"DB 등록 실패.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"DB 등록 오류:\", error);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    axios\r\n      .get(\"http://10.90.4.60:8080/api/db-list/all\")\r\n      .then((response) => {\r\n        this.dbList = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}