{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = {\n  class: \"modal-buttons\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"center\"\n};\nconst _hoisted_6 = {\n  class: \"center\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"center\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"center\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  class: \"center\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = {\n  class: \"center\"\n};\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[40] || (_cache[40] = _createElementVNode(\"h2\", null, \"DB 리스트\", -1 /* HOISTED */)), _createCommentVNode(\" DB 등록 버튼 \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.showRegisterForm = true),\n    class: \"primary-btn\"\n  }, \"DB 등록\"), _createCommentVNode(\" 등록 화면 모달 \"), $data.showRegisterForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[39] || (_cache[39] = _createElementVNode(\"h3\", null, \"DB 등록\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[13] || (_cache[13] = _withModifiers((...args) => $options.registerDb && $options.registerDb(...args), [\"prevent\"]))\n  }, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", {\n    for: \"dbType\"\n  }, \"DB 타입\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"dbType\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newDb.dbType = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newDb.dbType]]), _cache[29] || (_cache[29] = _createElementVNode(\"label\", {\n    for: \"dbName\"\n  }, \"DB 이름\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"dbName\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newDb.dbName = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newDb.dbName]]), _cache[30] || (_cache[30] = _createElementVNode(\"label\", {\n    for: \"assets\"\n  }, \"자산\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"assets\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newDb.assets = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newDb.assets]]), _cache[31] || (_cache[31] = _createElementVNode(\"label\", {\n    for: \"hostname\"\n  }, \"호스트\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"hostname\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newDb.hostname = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newDb.hostname]]), _cache[32] || (_cache[32] = _createElementVNode(\"label\", {\n    for: \"pubIp\"\n  }, \"PubIP\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"pubIp\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newDb.pubIp = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newDb.pubIp]]), _cache[33] || (_cache[33] = _createElementVNode(\"label\", {\n    for: \"vip\"\n  }, \"VIP\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"vip\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.newDb.vip = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newDb.vip]]), _cache[34] || (_cache[34] = _createElementVNode(\"label\", {\n    for: \"liveChk\"\n  }, \"생사관제\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass($data.newDb.liveChk === 'Y' ? 'on' : 'off'),\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.toggleLiveChk && $options.toggleLiveChk(...args))\n  }, _toDisplayString($data.newDb.liveChk === 'Y' ? 'On' : 'Off'), 3 /* TEXT, CLASS */), _cache[35] || (_cache[35] = _createElementVNode(\"label\", {\n    for: \"sizeChk\"\n  }, \"TBS 수집\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass($data.newDb.sizeChk === 'Y' ? 'on' : 'off'),\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.toggleSizeChk && $options.toggleSizeChk(...args))\n  }, _toDisplayString($data.newDb.sizeChk === 'Y' ? 'On' : 'Off'), 3 /* TEXT, CLASS */), _cache[36] || (_cache[36] = _createElementVNode(\"label\", {\n    for: \"trnBakChk\"\n  }, \"Sybase 트랜잭션\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass($data.newDb.trnBakChk === 'Y' ? 'on' : 'off'),\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.toggleTrnBakChk && $options.toggleTrnBakChk(...args))\n  }, _toDisplayString($data.newDb.trnBakChk === 'Y' ? 'On' : 'Off'), 3 /* TEXT, CLASS */), _cache[37] || (_cache[37] = _createElementVNode(\"label\", {\n    for: \"objSegSizeChk\"\n  }, \"OBJSIZE 수집\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass($data.newDb.objSegSizeChk === 'Y' ? 'on' : 'off'),\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.toggleObjSegSizeChk && $options.toggleObjSegSizeChk(...args))\n  }, _toDisplayString($data.newDb.objSegSizeChk === 'Y' ? 'On' : 'Off'), 3 /* TEXT, CLASS */), _cache[38] || (_cache[38] = _createElementVNode(\"label\", {\n    for: \"dailyChk\"\n  }, \"일일 점검\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass($data.newDb.dailyChk === 'Y' ? 'on' : 'off'),\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.toggleDailyChk && $options.toggleDailyChk(...args))\n  }, _toDisplayString($data.newDb.dailyChk === 'Y' ? 'On' : 'Off'), 3 /* TEXT, CLASS */), _createElementVNode(\"div\", _hoisted_3, [_cache[27] || (_cache[27] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"submit-btn\"\n  }, \"등록\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.closeRegisterForm && $options.closeRegisterForm(...args)),\n    class: \"cancel-btn\"\n  }, \"취소\")])], 32 /* NEED_HYDRATION */)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" DB 리스트 테이블 \"), $data.dbList.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_4, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    class: \"center\",\n    onClick: _cache[14] || (_cache[14] = $event => _ctx.sortTable('id'))\n  }, \"ID\"), _createElementVNode(\"th\", {\n    onClick: _cache[15] || (_cache[15] = $event => _ctx.sortTable('assets'))\n  }, \"자산\"), _createElementVNode(\"th\", {\n    onClick: _cache[16] || (_cache[16] = $event => _ctx.sortTable('dbDescript'))\n  }, \"설명\"), _createElementVNode(\"th\", {\n    onClick: _cache[17] || (_cache[17] = $event => _ctx.sortTable('hostname'))\n  }, \"호스트\"), _createElementVNode(\"th\", {\n    onClick: _cache[18] || (_cache[18] = $event => _ctx.sortTable('pubIp'))\n  }, \"PubIP\"), _createElementVNode(\"th\", {\n    onClick: _cache[19] || (_cache[19] = $event => _ctx.sortTable('vip'))\n  }, \"VIP\"), _createElementVNode(\"th\", {\n    onClick: _cache[20] || (_cache[20] = $event => _ctx.sortTable('dbType'))\n  }, \"DB_TYPE\"), _createElementVNode(\"th\", {\n    onClick: _cache[21] || (_cache[21] = $event => _ctx.sortTable('dbName'))\n  }, \"DB 이름\"), _createElementVNode(\"th\", {\n    class: \"center\",\n    onClick: _cache[22] || (_cache[22] = $event => _ctx.sortTable('liveChk'))\n  }, \"생사관제\"), _createElementVNode(\"th\", {\n    class: \"center\",\n    onClick: _cache[23] || (_cache[23] = $event => _ctx.sortTable('sizeChk'))\n  }, \"TBS수집\"), _createElementVNode(\"th\", {\n    class: \"center\",\n    onClick: _cache[24] || (_cache[24] = $event => _ctx.sortTable('trnBakChk'))\n  }, \"Sybase트렌젝션\"), _createElementVNode(\"th\", {\n    class: \"center\",\n    onClick: _cache[25] || (_cache[25] = $event => _ctx.sortTable('objSegSizeChk'))\n  }, \"OBJSIZE수집\"), _createElementVNode(\"th\", {\n    class: \"center\",\n    onClick: _cache[26] || (_cache[26] = $event => _ctx.sortTable('dailyChk'))\n  }, \"일일점검\")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sortedDbList, (db, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", _hoisted_5, _toDisplayString(db.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.assets), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbDescript), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.hostname), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.pubIp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.vip), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbType), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(db.dbName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_6, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.liveChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => $options.toggleLiveChkForDb(db)\n    }, _toDisplayString(db.liveChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_7)]), _createElementVNode(\"td\", _hoisted_8, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.sizeChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => $options.toggleSizeChkForDb(db)\n    }, _toDisplayString(db.sizeChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_9)]), _createElementVNode(\"td\", _hoisted_10, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.trnBakChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => $options.toggleTrnBakChkForDb(db)\n    }, _toDisplayString(db.trnBakChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_11)]), _createElementVNode(\"td\", _hoisted_12, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.objSegSizeChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => $options.toggleObjSegSizeChkForDb(db)\n    }, _toDisplayString(db.objSegSizeChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_13)]), _createElementVNode(\"td\", _hoisted_14, [_createElementVNode(\"button\", {\n      class: _normalizeClass(db.dailyChk === 'Y' ? 'on' : 'off'),\n      onClick: $event => $options.toggleDailyChkForDb(db)\n    }, _toDisplayString(db.dailyChk === 'Y' ? 'On' : 'Off'), 11 /* TEXT, CLASS, PROPS */, _hoisted_15)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_16, \"데이터가 없습니다.\"))]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","_createCommentVNode","onClick","_cache","$event","$data","showRegisterForm","_hoisted_1","_hoisted_2","onSubmit","_withModifiers","args","$options","registerDb","for","type","id","newDb","dbType","required","dbName","assets","hostname","pubIp","vip","_normalizeClass","liveChk","toggleLiveChk","sizeChk","toggleSizeChk","trnBakChk","toggleTrnBakChk","objSegSizeChk","toggleObjSegSizeChk","dailyChk","toggleDailyChk","_hoisted_3","closeRegisterForm","dbList","length","_hoisted_4","_ctx","sortTable","_Fragment","_renderList","sortedDbList","db","index","_hoisted_5","_toDisplayString","dbDescript","_hoisted_6","toggleLiveChkForDb","_hoisted_7","_hoisted_8","toggleSizeChkForDb","_hoisted_9","_hoisted_10","toggleTrnBakChkForDb","_hoisted_11","_hoisted_12","toggleObjSegSizeChkForDb","_hoisted_13","_hoisted_14","toggleDailyChkForDb","_hoisted_15","_hoisted_16"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DBList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>DB 리스트</h2>\r\n    <!-- DB 등록 버튼 -->\r\n    <button @click=\"showRegisterForm = true\" class=\"primary-btn\">DB 등록</button>\r\n\r\n    <!-- 등록 화면 모달 -->\r\n    <div v-if=\"showRegisterForm\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h3>DB 등록</h3>\r\n        <form @submit.prevent=\"registerDb\">\r\n          <label for=\"dbType\">DB 타입</label>\r\n          <input type=\"text\" id=\"dbType\" v-model=\"newDb.dbType\" required />\r\n\r\n          <label for=\"dbName\">DB 이름</label>\r\n          <input type=\"text\" id=\"dbName\" v-model=\"newDb.dbName\" required />\r\n\r\n          <label for=\"assets\">자산</label>\r\n          <input type=\"text\" id=\"assets\" v-model=\"newDb.assets\" required />\r\n\r\n          <label for=\"hostname\">호스트</label>\r\n          <input type=\"text\" id=\"hostname\" v-model=\"newDb.hostname\" required />\r\n\r\n          <label for=\"pubIp\">PubIP</label>\r\n          <input type=\"text\" id=\"pubIp\" v-model=\"newDb.pubIp\" required />\r\n\r\n          <label for=\"vip\">VIP</label>\r\n          <input type=\"text\" id=\"vip\" v-model=\"newDb.vip\" required />\r\n\r\n          <label for=\"liveChk\">생사관제</label>\r\n          <button type=\"button\" :class=\"newDb.liveChk === 'Y' ? 'on' : 'off'\" @click=\"toggleLiveChk\">\r\n            {{ newDb.liveChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <label for=\"sizeChk\">TBS 수집</label>\r\n          <button type=\"button\" :class=\"newDb.sizeChk === 'Y' ? 'on' : 'off'\" @click=\"toggleSizeChk\">\r\n            {{ newDb.sizeChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <label for=\"trnBakChk\">Sybase 트랜잭션</label>\r\n          <button type=\"button\" :class=\"newDb.trnBakChk === 'Y' ? 'on' : 'off'\" @click=\"toggleTrnBakChk\">\r\n            {{ newDb.trnBakChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <label for=\"objSegSizeChk\">OBJSIZE 수집</label>\r\n          <button type=\"button\" :class=\"newDb.objSegSizeChk === 'Y' ? 'on' : 'off'\" @click=\"toggleObjSegSizeChk\">\r\n            {{ newDb.objSegSizeChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <label for=\"dailyChk\">일일 점검</label>\r\n          <button type=\"button\" :class=\"newDb.dailyChk === 'Y' ? 'on' : 'off'\" @click=\"toggleDailyChk\">\r\n            {{ newDb.dailyChk === 'Y' ? 'On' : 'Off' }}\r\n          </button>\r\n\r\n          <div class=\"modal-buttons\">\r\n            <button type=\"submit\" class=\"submit-btn\">등록</button>\r\n            <button @click=\"closeRegisterForm\" class=\"cancel-btn\">취소</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- DB 리스트 테이블 -->\r\n    <table v-if=\"dbList.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"center\" @click=\"sortTable('id')\">ID</th>\r\n          <th @click=\"sortTable('assets')\">자산</th>\r\n          <th @click=\"sortTable('dbDescript')\">설명</th>\r\n          <th @click=\"sortTable('hostname')\">호스트</th>\r\n          <th @click=\"sortTable('pubIp')\">PubIP</th>\r\n          <th @click=\"sortTable('vip')\">VIP</th>\r\n          <th @click=\"sortTable('dbType')\">DB_TYPE</th>\r\n          <th @click=\"sortTable('dbName')\">DB 이름</th>\r\n          <th class=\"center\" @click=\"sortTable('liveChk')\">생사관제</th>\r\n          <th class=\"center\" @click=\"sortTable('sizeChk')\">TBS수집</th>\r\n          <th class=\"center\" @click=\"sortTable('trnBakChk')\">Sybase트렌젝션</th>\r\n          <th class=\"center\" @click=\"sortTable('objSegSizeChk')\">OBJSIZE수집</th>\r\n          <th class=\"center\" @click=\"sortTable('dailyChk')\">일일점검</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(db, index) in sortedDbList\" :key=\"index\">\r\n          <td class=\"center\">{{ db.id }}</td>\r\n          <td>{{ db.assets }}</td>\r\n          <td>{{ db.dbDescript }}</td>\r\n          <td>{{ db.hostname }}</td>\r\n          <td>{{ db.pubIp }}</td>\r\n          <td>{{ db.vip }}</td>\r\n          <td>{{ db.dbType }}</td>\r\n          <td>{{ db.dbName }}</td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.liveChk === 'Y' ? 'on' : 'off'\" @click=\"toggleLiveChkForDb(db)\">\r\n              {{ db.liveChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.sizeChk === 'Y' ? 'on' : 'off'\" @click=\"toggleSizeChkForDb(db)\">\r\n              {{ db.sizeChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.trnBakChk === 'Y' ? 'on' : 'off'\" @click=\"toggleTrnBakChkForDb(db)\">\r\n              {{ db.trnBakChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.objSegSizeChk === 'Y' ? 'on' : 'off'\" @click=\"toggleObjSegSizeChkForDb(db)\">\r\n              {{ db.objSegSizeChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n          <td class=\"center\">\r\n            <button :class=\"db.dailyChk === 'Y' ? 'on' : 'off'\" @click=\"toggleDailyChkForDb(db)\">\r\n              {{ db.dailyChk === 'Y' ? 'On' : 'Off' }}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-else>데이터가 없습니다.</p>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n/* 테이블 스타일 */\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\nth, td {\r\n  padding: 12px 15px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\nth {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\nth:hover {\r\n  background-color: #45a049;\r\n}\r\ntd {\r\n  background-color: #f9f9f9;\r\n}\r\ntr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n/* 버튼 스타일 */\r\nbutton {\r\n  padding: 8px 15px;\r\n  font-size: 14px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\nbutton.on {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\nbutton.off {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\nbutton:hover {\r\n  opacity: 0.8;\r\n}\r\n\r\n/* 등록 버튼과 취소 버튼 */\r\n.primary-btn {\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n.primary-btn:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n/* 모달 스타일 */\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 30px;\r\n  border-radius: 10px;\r\n  width: 400px;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\nh3 {\r\n  font-size: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 모달 버튼들 */\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n}\r\n.submit-btn {\r\n  padding: 10px 20px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.submit-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n.cancel-btn {\r\n  padding: 10px 20px;\r\n  background-color: #ccc;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.cancel-btn:hover {\r\n  background-color: #bbb;\r\n}\r\n\r\n/* 기본 입력 스타일 */\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-top: 5px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 가운데 정렬 스타일 */\r\n.center {\r\n  text-align: center;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbList: [],\r\n      sortKey: \"\",\r\n      sortAsc: true,\r\n      showRegisterForm: false,\r\n      newDb: {\r\n        dbType: \"\",\r\n        dbName: \"\",\r\n        assets: \"\",\r\n        hostname: \"\",\r\n        pubIp: \"\",\r\n        vip: \"\",\r\n        liveChk: \"N\",  // 기본값 N\r\n        sizeChk: \"N\",  // 기본값 N\r\n        trnBakChk: \"N\", // 기본값 N\r\n        objSegSizeChk: \"N\", // 기본값 N\r\n        dailyChk: \"N\", // 기본값 N\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    toggleLiveChk() {\r\n      this.newDb.liveChk = this.newDb.liveChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleSizeChk() {\r\n      this.newDb.sizeChk = this.newDb.sizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleTrnBakChk() {\r\n      this.newDb.trnBakChk = this.newDb.trnBakChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleObjSegSizeChk() {\r\n      this.newDb.objSegSizeChk = this.newDb.objSegSizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleDailyChk() {\r\n      this.newDb.dailyChk = this.newDb.dailyChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleLiveChkForDb(db) {\r\n      db.liveChk = db.liveChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleSizeChkForDb(db) {\r\n      db.sizeChk = db.sizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleTrnBakChkForDb(db) {\r\n      db.trnBakChk = db.trnBakChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleObjSegSizeChkForDb(db) {\r\n      db.objSegSizeChk = db.objSegSizeChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    toggleDailyChkForDb(db) {\r\n      db.dailyChk = db.dailyChk === 'Y' ? 'N' : 'Y';\r\n    },\r\n    closeRegisterForm() {\r\n      this.showRegisterForm = false;\r\n    },\r\n    registerDb() {\r\n      axios\r\n        .post(\"http://10.90.4.60:8080/api/db-list/register\", this.newDb)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            this.dbList.push(response.data.db);\r\n            this.closeRegisterForm();\r\n            alert(\"DB가 등록되었습니다.\");\r\n          } else {\r\n            alert(\"DB 등록 실패.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"DB 등록 오류:\", error);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    axios\r\n      .get(\"http://10.90.4.60:8080/api/db-list/all\")\r\n      .then((response) => {\r\n        this.dbList = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}