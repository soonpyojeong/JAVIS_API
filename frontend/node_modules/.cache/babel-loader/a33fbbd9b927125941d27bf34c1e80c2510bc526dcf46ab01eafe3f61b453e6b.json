{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      dbList: [],\n      sortKey: \"\",\n      sortAsc: true,\n      showRegisterForm: false,\n      // 등록 화면 표시 여부\n      newDb: {\n        dbType: \"\",\n        dbName: \"\",\n        assets: \"\",\n        hostname: \"\",\n        pubIp: \"\",\n        vip: \"\",\n        liveChk: \"\",\n        sizeChk: \"\",\n        trnBakChk: \"\",\n        objSegSizeChk: \"\",\n        dailyChk: \"\"\n      }\n    };\n  },\n  computed: {\n    sortedDbList() {\n      if (!this.sortKey) return this.dbList;\n      return [...this.dbList].sort((a, b) => {\n        const valA = a[this.sortKey];\n        const valB = b[this.sortKey];\n        if (valA < valB) return this.sortAsc ? -1 : 1;\n        if (valA > valB) return this.sortAsc ? 1 : -1;\n        return 0;\n      });\n    }\n  },\n  methods: {\n    sortTable(key) {\n      if (this.sortKey === key) {\n        this.sortAsc = !this.sortAsc;\n      } else {\n        this.sortKey = key;\n        this.sortAsc = true;\n      }\n    },\n    closeRegisterForm() {\n      this.showRegisterForm = false;\n    },\n    registerDb() {\n      axios.post(\"http://10.90.4.60:8080/api/db-list/register\", this.newDb).then(response => {\n        if (response.data.success) {\n          this.dbList.push(response.data.db); // 새로운 DB를 리스트에 추가\n          this.closeRegisterForm();\n          alert(\"DB가 등록되었습니다.\");\n        } else {\n          alert(\"DB 등록 실패.\");\n        }\n      }).catch(error => {\n        console.error(\"DB 등록 오류:\", error);\n      });\n    }\n  },\n  mounted() {\n    axios.get(\"http://10.90.4.60:8080/api/db-list/all\").then(response => {\n      this.dbList = response.data;\n    }).catch(error => {\n      console.error(\"API 호출 오류:\", error);\n    });\n  }\n};","map":{"version":3,"names":["axios","data","dbList","sortKey","sortAsc","showRegisterForm","newDb","dbType","dbName","assets","hostname","pubIp","vip","liveChk","sizeChk","trnBakChk","objSegSizeChk","dailyChk","computed","sortedDbList","sort","a","b","valA","valB","methods","sortTable","key","closeRegisterForm","registerDb","post","then","response","success","push","db","alert","catch","error","console","mounted","get"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\DBList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>DB 리스트</h2>\r\n    <!-- DB 등록 버튼 -->\r\n    <button @click=\"showRegisterForm = true\">DB 등록</button>\r\n\r\n    <!-- 등록 화면 모달 -->\r\n    <div v-if=\"showRegisterForm\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h3>DB 등록</h3>\r\n        <form @submit.prevent=\"registerDb\">\r\n          <label for=\"dbType\">DB 타입</label>\r\n          <input type=\"text\" id=\"dbType\" v-model=\"newDb.dbType\" required />\r\n\r\n          <label for=\"dbName\">DB 이름</label>\r\n          <input type=\"text\" id=\"dbName\" v-model=\"newDb.dbName\" required />\r\n\r\n          <label for=\"assets\">자산</label>\r\n          <input type=\"text\" id=\"assets\" v-model=\"newDb.assets\" required />\r\n\r\n          <label for=\"hostname\">호스트</label>\r\n          <input type=\"text\" id=\"hostname\" v-model=\"newDb.hostname\" required />\r\n\r\n          <label for=\"pubIp\">PubIP</label>\r\n          <input type=\"text\" id=\"pubIp\" v-model=\"newDb.pubIp\" required />\r\n\r\n          <label for=\"vip\">VIP</label>\r\n          <input type=\"text\" id=\"vip\" v-model=\"newDb.vip\" required />\r\n\r\n          <label for=\"liveChk\">생사관제</label>\r\n          <input type=\"checkbox\" id=\"liveChk\" v-model=\"newDb.liveChk\" required />\r\n\r\n          <label for=\"sizeChk\">TBS 수집</label>\r\n          <input type=\"checkbox\" id=\"sizeChk\" v-model=\"newDb.sizeChk\" required />\r\n\r\n          <label for=\"trnBakChk\">Sybase 트랜잭션</label>\r\n          <input type=\"checkbox\" id=\"trnBakChk\" v-model=\"newDb.trnBakChk\" required />\r\n\r\n          <label for=\"objSegSizeChk\">OBJSIZE 수집</label>\r\n          <input type=\"checkbox\" id=\"objSegSizeChk\" v-model=\"newDb.objSegSizeChk\" required />\r\n\r\n          <label for=\"dailyChk\">일일 점검</label>\r\n          <input type=\"checkbox\" id=\"dailyChk\" v-model=\"newDb.dailyChk\" required />\r\n\r\n          <button type=\"submit\">등록</button>\r\n          <button @click=\"closeRegisterForm\">취소</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- DB 리스트 테이블 -->\r\n    <table v-if=\"dbList.length > 0\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"center\" @click=\"sortTable('id')\">ID</th>\r\n          <th @click=\"sortTable('assets')\">자산</th>\r\n          <th @click=\"sortTable('dbDescript')\">설명</th>\r\n          <th @click=\"sortTable('hostname')\">호스트</th>\r\n          <th @click=\"sortTable('pubIp')\">PubIP</th>\r\n          <th @click=\"sortTable('vip')\">VIP</th>\r\n          <th @click=\"sortTable('dbType')\">DB_TYPE</th>\r\n          <th @click=\"sortTable('dbName')\">DB 이름</th>\r\n          <th class=\"center\" @click=\"sortTable('liveChk')\">생사관제</th>\r\n          <th class=\"center\" @click=\"sortTable('sizeChk')\">TBS수집</th>\r\n          <th class=\"center\" @click=\"sortTable('trnBakChk')\">Sybase트렌젝션</th>\r\n          <th class=\"center\" @click=\"sortTable('objSegSizeChk')\">OBJSIZE수집</th>\r\n          <th class=\"center\" @click=\"sortTable('dailyChk')\">일일점검</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(db, index) in sortedDbList\" :key=\"index\">\r\n          <td class=\"center\">{{ db.id }}</td>\r\n          <td>{{ db.assets }}</td>\r\n          <td>{{ db.dbDescript }}</td>\r\n          <td>{{ db.hostname }}</td>\r\n          <td>{{ db.pubIp }}</td>\r\n          <td>{{ db.vip }}</td>\r\n          <td>{{ db.dbType }}</td>\r\n          <td>{{ db.dbName }}</td>\r\n          <td class=\"center\">{{ db.liveChk }}</td>\r\n          <td class=\"center\">{{ db.sizeChk }}</td>\r\n          <td class=\"center\">{{ db.trnBakChk }}</td>\r\n          <td class=\"center\">{{ db.objSegSizeChk }}</td>\r\n          <td class=\"center\">{{ db.dailyChk }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-else>데이터가 없습니다.</p>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\nh2 {\r\n  color: #FF5722;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  cursor: pointer;\r\n}\r\nth, td {\r\n  border: 1px solid #ccc;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\nth:hover {\r\n  background-color: #ddd;\r\n}\r\nbutton {\r\n  margin-top: 10px;\r\n  padding: 5px 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 300px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-top: 10px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 5px;\r\n}\r\n\r\n/* 가운데 정렬 스타일 */\r\n.center {\r\n  text-align: center;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dbList: [],\r\n      sortKey: \"\",\r\n      sortAsc: true,\r\n      showRegisterForm: false, // 등록 화면 표시 여부\r\n      newDb: {\r\n        dbType: \"\",\r\n        dbName: \"\",\r\n        assets: \"\",\r\n        hostname: \"\",\r\n        pubIp: \"\",\r\n        vip: \"\",\r\n        liveChk: \"\",\r\n        sizeChk: \"\",\r\n        trnBakChk: \"\",\r\n        objSegSizeChk: \"\",\r\n        dailyChk: \"\",\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    sortedDbList() {\r\n      if (!this.sortKey) return this.dbList;\r\n      return [...this.dbList].sort((a, b) => {\r\n        const valA = a[this.sortKey];\r\n        const valB = b[this.sortKey];\r\n        if (valA < valB) return this.sortAsc ? -1 : 1;\r\n        if (valA > valB) return this.sortAsc ? 1 : -1;\r\n        return 0;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    sortTable(key) {\r\n      if (this.sortKey === key) {\r\n        this.sortAsc = !this.sortAsc;\r\n      } else {\r\n        this.sortKey = key;\r\n        this.sortAsc = true;\r\n      }\r\n    },\r\n    closeRegisterForm() {\r\n      this.showRegisterForm = false;\r\n    },\r\n    registerDb() {\r\n      axios\r\n        .post(\"http://10.90.4.60:8080/api/db-list/register\", this.newDb)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            this.dbList.push(response.data.db); // 새로운 DB를 리스트에 추가\r\n            this.closeRegisterForm();\r\n            alert(\"DB가 등록되었습니다.\");\r\n          } else {\r\n            alert(\"DB 등록 실패.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"DB 등록 오류:\", error);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    axios\r\n      .get(\"http://10.90.4.60:8080/api/db-list/all\")\r\n      .then((response) => {\r\n        this.dbList = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"API 호출 오류:\", error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AA6JA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,IAAI;MACbC,gBAAgB,EAAE,KAAK;MAAE;MACzBC,KAAK,EAAE;QACLC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,EAAE;QACPC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE,EAAE;QACbC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,IAAI,CAAC,IAAI,CAAChB,OAAO,EAAE,OAAO,IAAI,CAACD,MAAM;MACrC,OAAO,CAAC,GAAG,IAAI,CAACA,MAAM,CAAC,CAACkB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACrC,MAAMC,IAAG,GAAIF,CAAC,CAAC,IAAI,CAAClB,OAAO,CAAC;QAC5B,MAAMqB,IAAG,GAAIF,CAAC,CAAC,IAAI,CAACnB,OAAO,CAAC;QAC5B,IAAIoB,IAAG,GAAIC,IAAI,EAAE,OAAO,IAAI,CAACpB,OAAM,GAAI,CAAC,IAAI,CAAC;QAC7C,IAAImB,IAAG,GAAIC,IAAI,EAAE,OAAO,IAAI,CAACpB,OAAM,GAAI,IAAI,CAAC,CAAC;QAC7C,OAAO,CAAC;MACV,CAAC,CAAC;IACJ;EACF,CAAC;EACDqB,OAAO,EAAE;IACPC,SAASA,CAACC,GAAG,EAAE;MACb,IAAI,IAAI,CAACxB,OAAM,KAAMwB,GAAG,EAAE;QACxB,IAAI,CAACvB,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO;MAC9B,OAAO;QACL,IAAI,CAACD,OAAM,GAAIwB,GAAG;QAClB,IAAI,CAACvB,OAAM,GAAI,IAAI;MACrB;IACF,CAAC;IACDwB,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACvB,gBAAe,GAAI,KAAK;IAC/B,CAAC;IACDwB,UAAUA,CAAA,EAAG;MACX7B,KAAI,CACD8B,IAAI,CAAC,6CAA6C,EAAE,IAAI,CAACxB,KAAK,EAC9DyB,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAAC/B,IAAI,CAACgC,OAAO,EAAE;UACzB,IAAI,CAAC/B,MAAM,CAACgC,IAAI,CAACF,QAAQ,CAAC/B,IAAI,CAACkC,EAAE,CAAC,EAAE;UACpC,IAAI,CAACP,iBAAiB,CAAC,CAAC;UACxBQ,KAAK,CAAC,cAAc,CAAC;QACvB,OAAO;UACLA,KAAK,CAAC,WAAW,CAAC;QACpB;MACF,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC,CAAC,CAAC;IACN;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACRxC,KAAI,CACDyC,GAAG,CAAC,wCAAwC,EAC5CV,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAAC9B,MAAK,GAAI8B,QAAQ,CAAC/B,IAAI;IAC7B,CAAC,EACAoC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}