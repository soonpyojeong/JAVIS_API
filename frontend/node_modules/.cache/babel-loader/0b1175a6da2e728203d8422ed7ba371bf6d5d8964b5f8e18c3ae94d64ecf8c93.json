{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"select-container\"\n};\nconst _hoisted_3 = [\"value\"];\nconst _hoisted_4 = {\n  class: \"search-container\"\n};\nconst _hoisted_5 = {\n  class: \"tablespace-table\"\n};\nconst _hoisted_6 = [\"onDblclick\"];\nconst _hoisted_7 = {\n  class: \"ts-name\"\n};\nconst _hoisted_8 = {\n  class: \"used-size\"\n};\nconst _hoisted_9 = {\n  class: \"used-size\"\n};\nconst _hoisted_10 = {\n  class: \"used-rate\"\n};\nconst _hoisted_11 = {\n  class: \"used-rate-container\"\n};\nconst _hoisted_12 = [\"id\"];\nconst _hoisted_13 = {\n  class: \"free-size\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"no-data-message\"\n};\nconst _hoisted_15 = {\n  class: \"modal-content\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"recent-data-table\"\n};\nconst _hoisted_17 = {\n  key: 1,\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString(_ctx.selectedDb) + \" DB - 테이블스페이스 리스트\", 1 /* TEXT */), _createCommentVNode(\" DB 목록을 보여주는 드롭다운 \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedDb = $event),\n    onChange: _cache[1] || (_cache[1] = $event => _ctx.fetchTablespaces(_ctx.selectedDb))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tbList, (db, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: index,\n      value: db\n    }, _toDisplayString(db), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, _ctx.selectedDb]])]), _createCommentVNode(\" 검색 입력 필드 \"), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"테이블스페이스 검색\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.searchQuery]])]), _createCommentVNode(\" 테이블스페이스 데이터 표시 \"), _createElementVNode(\"table\", _hoisted_5, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.sortData('id.tsName'))\n  }, \"Tablespace 이름\"), _createElementVNode(\"th\", {\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.sortData('totalSize'))\n  }, \"TOTAL(MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.sortData('usedSize'))\n  }, \"USED(MB)\"), _createElementVNode(\"th\", {\n    onClick: _cache[6] || (_cache[6] = $event => _ctx.sortData('usedRate'))\n  }, \"사용률 (%)\"), _createElementVNode(\"th\", {\n    onClick: _cache[7] || (_cache[7] = $event => _ctx.sortData('freeSize'))\n  }, \"FREE(MB)\")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredTablespaces, ts => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: ts.id.tsName,\n      onDblclick: $event => _ctx.fetchRecentData(_ctx.selectedDb, ts.id.tsName)\n    }, [_createElementVNode(\"td\", _hoisted_7, _toDisplayString(ts.id.tsName), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_8, _toDisplayString(_ctx.formatNumber(ts.totalSize)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_9, _toDisplayString(_ctx.formatNumber(ts.usedSize)), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_10, [_createCommentVNode(\" 사용률 차트 \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"canvas\", {\n      id: 'chart-' + ts.id.tsName,\n      class: \"rate-chart\",\n      width: \"200\",\n      height: \"100\"\n    }, null, 8 /* PROPS */, _hoisted_12)])]), _createElementVNode(\"td\", _hoisted_13, _toDisplayString(_ctx.formatNumber(ts.freeSize)), 1 /* TEXT */)], 40 /* PROPS, NEED_HYDRATION */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))])]), _ctx.filteredTablespaces.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_14, \"검색 결과가 없습니다.\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 모달 \"), _ctx.showModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"modal-overlay\",\n    onClick: _cache[10] || (_cache[10] = _withModifiers((...args) => _ctx.closeModal && _ctx.closeModal(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"h3\", null, \"최근 3개월 데이터: \" + _toDisplayString(_ctx.selectedTsName), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.closeModal && _ctx.closeModal(...args))\n  }, \"닫기\"), _createElementVNode(\"button\", {\n    class: \"chart-btn\",\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.toggleChartView && _ctx.toggleChartView(...args))\n  }, \"차트/데이터 보기\"), _createCommentVNode(\" 테이블 형식 \"), !_ctx.showChart ? (_openBlock(), _createElementBlock(\"table\", _hoisted_16, [_cache[11] || (_cache[11] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Tablespace 이름\"), _createElementVNode(\"th\", null, \"총 크기 (MB)\"), _createElementVNode(\"th\", null, \"사용량 (MB)\"), _createElementVNode(\"th\", null, \"남은 크기 (MB)\"), _createElementVNode(\"th\", null, \"사용률 (%)\"), _createElementVNode(\"th\", null, \"체크 날짜\"), _createElementVNode(\"th\", null, \"체크 시간\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.recentData, (data, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(data.id.tsName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(data.totalSize)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(data.usedSize)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(_ctx.formatNumber(data.freeSize)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(data.usedRate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(data.id.chkDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(data.id.chkTime), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 차트 형식 \"), _ctx.showChart ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, _cache[12] || (_cache[12] = [_createElementVNode(\"canvas\", {\n    id: \"usedSizeChart\",\n    width: \"400\",\n    height: \"200\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","_ctx","selectedDb","_createCommentVNode","_hoisted_2","_cache","$event","onChange","fetchTablespaces","_Fragment","_renderList","tbList","db","index","value","_hoisted_3","_hoisted_4","searchQuery","type","placeholder","_hoisted_5","onClick","sortData","filteredTablespaces","ts","id","tsName","onDblclick","fetchRecentData","_hoisted_7","_hoisted_8","formatNumber","totalSize","_hoisted_9","usedSize","_hoisted_10","_hoisted_11","width","height","_hoisted_12","_hoisted_13","freeSize","_hoisted_6","length","_hoisted_14","showModal","_withModifiers","args","closeModal","_hoisted_15","selectedTsName","toggleChartView","showChart","_hoisted_16","recentData","data","usedRate","chkDate","chkTime","_hoisted_17"],"sources":["D:\\JAVIS\\dongkukDBmon\\dongkukDBmon\\frontend\\src\\components\\TablespacesList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h2>{{ selectedDb }} DB - 테이블스페이스 리스트</h2>\r\n\r\n    <!-- DB 목록을 보여주는 드롭다운 -->\r\n    <div class=\"select-container\">\r\n      <select v-model=\"selectedDb\" @change=\"fetchTablespaces(selectedDb)\">\r\n        <option v-for=\"(db, index) in tbList\" :key=\"index\" :value=\"db\">{{ db }}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- 검색 입력 필드 -->\r\n    <div class=\"search-container\">\r\n      <input\r\n        v-model=\"searchQuery\"\r\n        type=\"text\"\r\n        placeholder=\"테이블스페이스 검색\"\r\n        class=\"search-input\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 테이블스페이스 데이터 표시 -->\r\n    <table class=\"tablespace-table\">\r\n      <thead>\r\n        <tr>\r\n          <th @click=\"sortData('id.tsName')\">Tablespace 이름</th>\r\n          <th @click=\"sortData('totalSize')\">TOTAL(MB)</th>\r\n          <th @click=\"sortData('usedSize')\">USED(MB)</th>\r\n          <th @click=\"sortData('usedRate')\">사용률 (%)</th>\r\n          <th @click=\"sortData('freeSize')\">FREE(MB)</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          v-for=\"ts in filteredTablespaces\"\r\n          :key=\"ts.id.tsName\"\r\n          @dblclick=\"fetchRecentData(selectedDb, ts.id.tsName)\"\r\n        >\r\n          <td class=\"ts-name\">{{ ts.id.tsName }}</td>\r\n          <td class=\"used-size\">{{ formatNumber(ts.totalSize) }}</td>\r\n          <td class=\"used-size\">{{ formatNumber(ts.usedSize) }}</td>\r\n          <td class=\"used-rate\">\r\n            <!-- 사용률 차트 -->\r\n            <div class=\"used-rate-container\">\r\n              <canvas :id=\"'chart-' + ts.id.tsName\" class=\"rate-chart\" width=\"200\" height=\"100\"></canvas>\r\n            </div>\r\n          </td>\r\n          <td class=\"free-size\">{{ formatNumber(ts.freeSize) }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p v-if=\"filteredTablespaces.length === 0\" class=\"no-data-message\">검색 결과가 없습니다.</p>\r\n\r\n    <!-- 모달 -->\r\n    <div v-if=\"showModal\" class=\"modal-overlay\" @click.self=\"closeModal\">\r\n      <div class=\"modal-content\">\r\n        <h3>최근 3개월 데이터: {{ selectedTsName }}</h3>\r\n        <button class=\"close-btn\" @click=\"closeModal\">닫기</button>\r\n        <button class=\"chart-btn\" @click=\"toggleChartView\">차트/데이터 보기</button>\r\n\r\n        <!-- 테이블 형식 -->\r\n        <table v-if=\"!showChart\" class=\"recent-data-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Tablespace 이름</th>\r\n              <th>총 크기 (MB)</th>\r\n              <th>사용량 (MB)</th>\r\n              <th>남은 크기 (MB)</th>\r\n              <th>사용률 (%)</th>\r\n              <th>체크 날짜</th>\r\n              <th>체크 시간</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(data, index) in recentData\" :key=\"index\">\r\n              <td>{{ data.id.tsName }}</td>\r\n              <td>{{ formatNumber(data.totalSize) }}</td>\r\n              <td>{{ formatNumber(data.usedSize) }}</td>\r\n              <td>{{ formatNumber(data.freeSize) }}</td>\r\n              <td>{{ data.usedRate }}</td>\r\n              <td>{{ data.id.chkDate }}</td>\r\n              <td>{{ data.id.chkTime }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <!-- 차트 형식 -->\r\n        <div v-if=\"showChart\" class=\"chart-container\">\r\n          <canvas id=\"usedSizeChart\" width=\"400\" height=\"200\"></canvas>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Chart from \"chart.js/auto\"; // Chart.js 자동 로드\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels'; // 플러그인 import\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedDb: null,\r\n      tbList: [], // DB 목록\r\n      tablespaces: [], // 테이블스페이스 데이터\r\n      searchQuery: \"\", // 검색어\r\n      sortKey: \"tsName\", // 기본 정렬 기준\r\n      sortOrder: 1, // 정렬 방향\r\n      showModal: false, // 모달 표시 여부\r\n      showChart: false, // 차트 보기 여부\r\n      recentData: [], // 최근 3개월 데이터\r\n      selectedTsName: \"\", // 선택된 테이블스페이스 이름\r\n      chart: null, // 차트 인스턴스\r\n    };\r\n  },\r\n  computed: {\r\n    filteredTablespaces() {\r\n      let sortedData = [...this.tablespaces];\r\n      sortedData.sort((a, b) => {\r\n        let aValue = a[this.sortKey];\r\n        let bValue = b[this.sortKey];\r\n\r\n        if (typeof aValue === \"string\") {\r\n          aValue = aValue.toLowerCase();\r\n          bValue = bValue.toLowerCase();\r\n        }\r\n\r\n        return aValue < bValue ? -1 * this.sortOrder : (aValue > bValue ? 1 * this.sortOrder : 0);\r\n      });\r\n\r\n      return sortedData.filter((ts) =>\r\n        ts.id.tsName.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    // 숫자 형식 (천 단위 구분 기호 추가)\r\n    formatNumber(number) {\r\n      return number.toLocaleString();\r\n    },\r\n\r\n    // DB 목록 가져오기\r\n    fetchDbList() {\r\n      axios\r\n        .get(\"/api/tb/list\")\r\n        .then((res) => {\r\n          this.tbList = res.data;\r\n          if (this.tbList.length > 0) {\r\n            this.selectedDb = this.tbList[0];\r\n            this.fetchTablespaces(this.selectedDb);\r\n          }\r\n        })\r\n        .catch((error) => console.error(\"Error fetching DB list:\", error));\r\n    },\r\n\r\n    // 선택된 DB에 대한 테이블스페이스 목록 가져오기\r\n    fetchTablespaces(dbName) {\r\n      axios\r\n        .get(`/api/tb/${dbName}/tablespaces`)\r\n        .then((res) => (this.tablespaces = res.data || []))\r\n        .catch((error) => console.error(\"테이블스페이스 데이터 가져오기 실패:\", error));\r\n    },\r\n\r\n    // 최근 3개월 데이터 가져오기\r\n    fetchRecentData(selectedDb, tsName) {\r\n      if (!selectedDb || !tsName) return;\r\n      axios\r\n        .get(`/api/tb/${selectedDb}/${tsName}/recent`)\r\n        .then((res) => {\r\n          this.recentData = res.data || [];\r\n          this.selectedTsName = tsName;\r\n          this.showModal = true; // 모달 열기\r\n        })\r\n        .catch((error) => console.error(\"최근 데이터 가져오기 실패:\", error));\r\n    },\r\n\r\n    // 모달 닫기\r\n    closeModal() {\r\n      this.showModal = false;\r\n      this.showChart = false;\r\n      this.resetChart(); // 차트 초기화\r\n    },\r\n\r\n    // 차트/데이터 보기 토글\r\n    toggleChartView() {\r\n      this.showChart = !this.showChart;\r\n      if (this.showChart) {\r\n        this.$nextTick(() => this.renderChart()); // DOM 업데이트 후 차트 그리기\r\n      }\r\n    },\r\n\r\n    // 차트 그리기\r\n    renderChart() {\r\n      if (this.chart) this.chart.destroy(); // 기존 차트 삭제\r\n\r\n      const sortedData = [...this.recentData].sort((a, b) => {\r\n        const dateA = new Date(`${a.id.chkDate} ${a.id.chkTime}`);\r\n        const dateB = new Date(`${b.id.chkDate} ${b.id.chkTime}`);\r\n        return dateB - dateA; // 내림차순 정렬\r\n      });\r\n\r\n      const labels = sortedData.map((data) => `${data.id.chkDate} ${data.id.chkTime}`);\r\n      const data = sortedData.map((data) => data.usedSize);\r\n\r\n      const ctx = document.getElementById(\"usedSizeChart\").getContext(\"2d\");\r\n\r\n      this.chart = new Chart(ctx, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: '사용량 (MB)',\r\n            data: data,\r\n            borderColor: 'rgb(75, 192, 192)',\r\n            fill: false,\r\n          }],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function (context) {\r\n                  return `${context.label}: ${context.raw}MB`;\r\n                },\r\n              },\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              reverse: true,\r\n            },\r\n            y: {\r\n              beginAtZero: true,\r\n              ticks: {\r\n                callback: function (value) {\r\n                  return value.toLocaleString();\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        plugins: [ChartDataLabels], // 플러그인 적용\r\n      });\r\n    },\r\n\r\n    // 차트 초기화\r\n    resetChart() {\r\n      if (this.chart) {\r\n        this.chart.destroy();\r\n        this.chart = null;\r\n      }\r\n    },\r\n\r\n    // 데이터 정렬\r\n    sortData(key) {\r\n      this.sortOrder = this.sortKey === key ? -this.sortOrder : 1;\r\n      this.sortKey = key;\r\n    },\r\n  },\r\n   drawBarChart(ts) {\r\n     const canvasId = 'chart-' + ts.id.tsName;\r\n     const ctx = document.getElementById(canvasId).getContext('2d');\r\n\r\n     // 기존 차트가 있으면 파괴\r\n     if (this.chartInstances && this.chartInstances[ts.id.tsName]) {\r\n       this.chartInstances[ts.id.tsName].destroy();\r\n     }\r\n\r\n     // 새 차트 생성\r\n     if (!this.chartInstances) {\r\n       this.chartInstances = {};  // chartInstances 객체 초기화\r\n     }\r\n\r\n     this.chartInstances[ts.id.tsName] = new Chart(ctx, {\r\n       type: 'bar',\r\n       data: {\r\n         labels: ['사용률'], // 차트 레이블\r\n         datasets: [{\r\n           label: '사용률',\r\n           data: [ts.usedRate], // 사용률 데이터\r\n           backgroundColor: 'rgba(75, 192, 192, 0.2)', // 배경 색상\r\n           borderColor: 'rgb(75, 192, 192)', // 테두리 색상\r\n           borderRadius: 1,  // 모서리 둥글게\r\n           borderWidth: 1,   // 테두리 두께\r\n         }],\r\n       },\r\n       options: {\r\n         responsive: true,\r\n         indexAxis: 'y',  // 가로 차트\r\n         scales: {\r\n           x: {\r\n             min: 0,\r\n             max: 100,  // 100%까지 표시\r\n             ticks: {\r\n               display: false,  // 0과 100을 숨깁니다.\r\n             },\r\n           },\r\n           y: {\r\n             beginAtZero: true,\r\n             display: false,  // Y축 표시 안 함\r\n           },\r\n         },\r\n         plugins: {\r\n           legend: {\r\n             display: false,  // 범례 숨기기\r\n           },\r\n           datalabels: {\r\n             // 실제 사용률 값 표시 (바 오른쪽에)\r\n             display: true,\r\n             align: 'end',  // 바의 끝 부분에 텍스트 표시\r\n             anchor: 'end', // 텍스트가 바 끝에 앵커가 맞도록\r\n             formatter: (value) => `${value}%`,  // 사용률 값에 \"%\" 추가\r\n             color: 'rgb(75, 192, 192)', // 텍스트 색상\r\n             font: {\r\n               weight: 'bold',\r\n               size: 14,\r\n             },\r\n           },\r\n         },\r\n       },\r\n       plugins: [ChartDataLabels], // 플러그인 적용\r\n     });\r\n   }\r\n  mounted() {\r\n    this.fetchDbList(); // 컴포넌트가 마운트되면 DB 목록을 가져옵니다.\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 기본 설정 */\r\n.container {\r\n  font-family: 'Arial', sans-serif;\r\n  padding: 40px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n}\r\n\r\nh2 {\r\n  color: #333;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 30px;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 드롭다운 및 검색 필드 스타일 */\r\n.select-container, .search-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\nselect, .search-input {\r\n  padding: 12px 18px;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\nselect:focus, .search-input:focus {\r\n  outline: none;\r\n  border-color: #4caf50;\r\n  box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);\r\n}\r\n\r\n/* 테이블 스타일 */\r\n.tablespace-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 40px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.tablespace-table th, .tablespace-table td {\r\n  padding: 14px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.tablespace-table th {\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.tablespace-table td {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.tablespace-table td.used-rate {\r\n  text-align: center;\r\n}\r\n\r\n.tablespace-table td.free-size, .tablespace-table td.used-size {\r\n  text-align: right;\r\n}\r\n\r\n.tablespace-table tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.no-data-message {\r\n  text-align: center;\r\n  font-size: 18px;\r\n  color: #f44336;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 모달 오버레이 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  padding: 20px;\r\n}\r\n\r\n/* 모달 내용 */\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 1000px;\r\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nbutton {\r\n  padding: 12px 20px;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\nbutton.close-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\nbutton.close-btn:hover {\r\n  background-color: #e53935;\r\n}\r\n\r\nbutton.chart-btn {\r\n  background-color: #4caf50;\r\n  color: white;\r\n}\r\n\r\nbutton.chart-btn:hover {\r\n  background-color: #388e3c;\r\n}\r\n\r\n/* 최근 데이터 테이블 */\r\n.recent-data-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.recent-data-table th, .recent-data-table td {\r\n  padding: 12px;\r\n  text-align: left;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.recent-data-table th {\r\n  background-color: #4caf50;\r\n  color: #fff;\r\n  font-weight: 600;\r\n}\r\n\r\n.recent-data-table td {\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n/* 차트 스타일 */\r\n.chart-container {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.used-rate-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.rate-chart {\r\n  max-width: 80px;\r\n  max-height: 40px;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* 화면 반응형 스타일 */\r\n@media (max-width: 768px) {\r\n  .container {\r\n    padding: 20px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .select-container, .search-container {\r\n    flex-direction: column;\r\n  }\r\n\r\n  select, .search-input {\r\n    margin-bottom: 10px;\r\n    width: 100%;\r\n  }\r\n\r\n  .tablespace-table th, .tablespace-table td {\r\n    padding: 10px;\r\n    font-size: 13px;\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}